Origin:
  AssemblyName: Microsoft.Analyzers.Extra
  Version: 42.42.42.42424
Diagnostics:
  EA0012:
    Metadata:
      Category: Performance
      Title: Consider removing unnecessary null coalescing assignment (??=)
      Description: Using the null coalescing assignment operator (??=) with values which are statically known not to be null causes superfluous null checks to be performed at runtime
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: Suggestion
  EA0013:
    Metadata:
      Category: Performance
      Title: Consider removing unnecessary null coalescing operator (??)
      Description: Using the null coalescing operator (??) with values which are statically known to be null causes superfluous null checks to be performed at runtime
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: Suggestion
  EA0004:
    Metadata:
      Category: Performance
      Title: Make types declared in an executable internal
      Description: Making an executable's types internal enables dead code analysis along with other potential optimizations
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: Warning
  EA0001:
    Metadata:
      Category: Performance
      Title: Perform message formatting in the body of the logging method
      Description: Identifies calls to the 'ToString' method as arguments to a logging method
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: Warning
  EA0003:
    Metadata:
      Category: Performance
      Title: Use the character-based overloads of 'String.StartsWith' or 'String.EndsWith'
      Description: When checking for a single character, prefer the character overloads of 'String.StartsWith' and 'String.EndsWith' for improved performance
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: Warning
  EA0002:
    Metadata:
      Category: Reliability
      Title: Use 'System.TimeProvider' to make the code easier to test
      Description: Identifies uses of time dependent APIs that can lead to flaky tests
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      production:
        Severity: Warning
  EA0006:
    Metadata:
      Category: Performance
      Title: Replace uses of 'Enum.GetName' and 'Enum.ToString' for improved performance
      Description: Replace uses of 'Enum.GetName' and 'Enum.ToString' for improved performance
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: Warning
  EA0000:
    Metadata:
      Category: Performance
      Title: Use source generated logging methods for improved performance
      Description: Identifies calls to legacy logging methods
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: Warning
  EA0009:
    Metadata:
      Category: Performance
      Title: Use 'System.MemoryExtensions.Split' for improved performance
      Description: Use 'System.MemoryExtensions.Split' for improved performance
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: Warning
  EA0008:
    Metadata:
      Category: Performance
      Title: Use generic collections instead of legacy collections for improved performance
      Description: Using generic collections can avoid boxing overhead and provides strong typing
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: Warning
  EA0005:
    Metadata:
      Category: Performance
      Title: Consider using an array instead of a collection
      Description: Dictionaries and sets which use enums and bytes as keys can often be replaced with simple arrays for improved performance
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: None
  EA0007:
    Metadata:
      Category: Performance
      Title: Use 'System.ValueTuple' instead of 'System.Tuple' for improved performance
      Description: Using 'System.ValueTuple' avoids allocations and is generally more efficient than 'System.Tuple'
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      performance:
        Severity: Warning
  EA0010:
    Metadata:
      Category: Correctness
      Title: Fire-and-forget async call inside a 'using' block
      Description: When skipping the await keyword for asynchronous operations inside a using block, then a disposable object could be disposed before the asynchronous invocation finishes. This might result in incorrect behavior and very often ends with a runtime exception notifying that the code is trying to operate on a disposed object.
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: Warning
  EA0014:
    Metadata:
      Category: Resilience
      Title: The async method doesn't support cancellation
      Description: Accepting a CancellationToken as a parameter allows caller to express a loss of interest in the result enabling the method to save cycles by finishing early
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: None
      production:
        Severity: Warning
  EA0011:
    Metadata:
      Category: Performance
      Title: Consider removing unnecessary conditional access operator (?)
      Description: Using the conditional access operator (?) to access values which are statically known not to be null causes superfluous null checks to be performed at runtime
      DefaultSeverity: Warning
    Tier: 1
    Attributes:
      general:
        Severity: Warning
