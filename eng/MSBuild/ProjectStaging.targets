<Project>

  <PropertyGroup>
    <!-- Preview packages: do not use stable branding and do not warn about lack of [Experimental] -->
    <SuppressFinalPackageVersion Condition="'$(Stage)' == 'preview'">true</SuppressFinalPackageVersion>
    <NoWarn Condition="'$(Stage)' == 'preview'">$(NoWarn);LA0003</NoWarn>

    <!-- Amend the description based on stage -->
    <Description Condition="'$(Stage)' == 'dev'">Experimental package. $(Description)</Description>
    <Description Condition="'$(Stage)' == 'obsolete'">Obsolete Package. $(Description)</Description>
  </PropertyGroup>

  <PropertyGroup>
    <!--
      Makes it such that the package version won't be stabilized even when the rest of the repo is going stable.
      https://github.com/dotnet/arcade/blob/main/Documentation/CorePackages/Versioning.md#package-version
     -->
    <SuppressFinalPackageVersion />
    <SuppressFinalPackageVersion Condition="'$(Stage)' == 'dev' or '$(Stage)' == 'preview'">true</SuppressFinalPackageVersion>
  </PropertyGroup>

  <!-- Produce errors if we don't have all the right properties defined -->
  <Target Name="_CheckPropsExist" Condition="'$(IsPackable)' == 'true' and '$(Stage)' != '' and $(Stage) != 'transport'" BeforeTargets="Build">
    <Error Condition="'$(Stage)' != 'dev' AND '$(Stage)' != 'normal' AND '$(Stage)' != 'obsolete' AND '$(Stage)' != 'preview'" Text="Stage property must be dev|normal|obsolete|preview" />
    <Error Condition="'$(Description)' == ''" Text="Missing Description property." />
    <Error Condition="'$(Workstream)' == ''" Text="Missing Workstream property." />
    <Error Condition="'$(MinCodeCoverage)' == ''" Text="Missing MinCodeCoverage property." />
    <Error Condition="'$(MinMutationScore)' == ''" Text="Missing MinMutationScore property." />
    <Error Condition="'$(Stage)' == 'dev' AND '$(StageDevDiagnosticId)' == ''" Text="Experimental packages must define 'StageDevDiagnosticId'." />
  </Target>

  <!-- Produce errors if we don't have all the right property values for normal stage -->
  <Target Name="_CheckNormalStageProps" Condition="'$(Stage)' == 'normal'" BeforeTargets="Build">
    <Error Condition="'$(MinCodeCoverage)' != 'n/a' AND ('$(MinCodeCoverage)' &lt; 75)" Text="MinCodeCoverage property must be >= 75 for normal stage." />
    <Error Condition="'$(MinMutationScore)' != 'n/a' AND ('$(MinMutationScore)' &lt; 50)" Text="MinMutationScore property must be >= 50 for normal stage." />
  </Target>

  <Target Name="_ValidateVersion" AfterTargets="GenerateNuspec" Condition="'$(Stage)' == 'dev' or '$(Stage)' == 'preview'">
    <PropertyGroup>
      <_ExpectedVersionSuffix>$(_PreReleaseLabel)$(_BuildNumberLabels)</_ExpectedVersionSuffix>
    </PropertyGroup>

    <Error Condition=" '$(VersionSuffix)' != '$(_ExpectedVersionSuffix)' " Text="Unexpected package version suffix. Expected suffix for '$(Stage)' stage: '$(_ExpectedVersionSuffix)', received: '$(VersionSuffix)'." />
  </Target>
</Project>
