//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Extensions.LocalAnalyzers {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Extensions.LocalAnalyzers.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symbols that have been removed from the public API of an assembly must be marked as obsolete.
        /// </summary>
        internal static string DeprecatedSymbolsMustBeMarkedObsoleteDescription {
            get {
                return ResourceManager.GetString("DeprecatedSymbolsMustBeMarkedObsoleteDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deprecated symbol &apos;{0}&apos; must be annotated as obsolete.
        /// </summary>
        internal static string DeprecatedSymbolsMustBeMarkedObsoleteMessage {
            get {
                return ResourceManager.GetString("DeprecatedSymbolsMustBeMarkedObsoleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deprecated symbols must be annotated as obsolete.
        /// </summary>
        internal static string DeprecatedSymbolsMustBeMarkedObsoleteTitle {
            get {
                return ResourceManager.GetString("DeprecatedSymbolsMustBeMarkedObsoleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symbols being added to the public API of an assembly cannot be marked as obsolete.
        /// </summary>
        internal static string ExperimentalSymbolsCantBeMarkedObsoleteDescription {
            get {
                return ResourceManager.GetString("ExperimentalSymbolsCantBeMarkedObsoleteDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experimental symbol &apos;{0}&apos; cannot be marked as obsolete.
        /// </summary>
        internal static string ExperimentalSymbolsCantBeMarkedObsoleteMessage {
            get {
                return ResourceManager.GetString("ExperimentalSymbolsCantBeMarkedObsoleteMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experimental symbols cannot be marked as obsolete.
        /// </summary>
        internal static string ExperimentalSymbolsCantBeMarkedObsoleteTitle {
            get {
                return ResourceManager.GetString("ExperimentalSymbolsCantBeMarkedObsoleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Symbols being added to the public API of an assembly must be marked as experimental until they have been appoved.
        /// </summary>
        internal static string NewSymbolsMustBeMarkedExperimentalDescription {
            get {
                return ResourceManager.GetString("NewSymbolsMustBeMarkedExperimentalDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newly added symbol &apos;{0}&apos; must be marked as experimental.
        /// </summary>
        internal static string NewSymbolsMustBeMarkedExperimentalMessage {
            get {
                return ResourceManager.GetString("NewSymbolsMustBeMarkedExperimentalMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newly added symbols must be marked as experimental.
        /// </summary>
        internal static string NewSymbolsMustBeMarkedExperimentalTitle {
            get {
                return ResourceManager.GetString("NewSymbolsMustBeMarkedExperimentalTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published symbols cannot be deleted to maintain compatibility.
        /// </summary>
        internal static string PublishedSymbolsCantBeDeletedDescription {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantBeDeletedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published symbol &apos;{0}&apos; cannot be deleted to maintain compatibility.
        /// </summary>
        internal static string PublishedSymbolsCantBeDeletedMessage {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantBeDeletedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published symbols cannot be deleted to maintain compatibility.
        /// </summary>
        internal static string PublishedSymbolsCantBeDeletedTitle {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantBeDeletedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Previously published symbols in the public API of an assembly cannot be marked experimental.
        /// </summary>
        internal static string PublishedSymbolsCantBeMarkedExperimentalDescription {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantBeMarkedExperimentalDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published symbol &apos;{0}&apos; cannot be marked experimental.
        /// </summary>
        internal static string PublishedSymbolsCantBeMarkedExperimentalMessage {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantBeMarkedExperimentalMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published symbols cannot be marked experimental.
        /// </summary>
        internal static string PublishedSymbolsCantBeMarkedExperimentalTitle {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantBeMarkedExperimentalTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published symbols cannot change to maintain compatibility.
        /// </summary>
        internal static string PublishedSymbolsCantChangeDescription {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantChangeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published symbols cannot be changed to maintain compatibility.
        /// </summary>
        internal static string PublishedSymbolsCantChangedTitle {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantChangedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published symbol &apos;{0}&apos; cannot be changed to maintain compatibility.
        /// </summary>
        internal static string PublishedSymbolsCantChangeMessage {
            get {
                return ResourceManager.GetString("PublishedSymbolsCantChangeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace explicit null check with call to &apos;Throws.IfNull&apos; (needs a &apos;PackageReference&apos; to &apos;Microsoft.R9.Extensions.Essentials&apos;).
        /// </summary>
        internal static string ReplaceWithStaticNullCheckMethod {
            get {
                return ResourceManager.GetString("ReplaceWithStaticNullCheckMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace explicit throw with call to &apos;Throws&apos; (needs a &apos;PackageReference&apos; to &apos;Microsoft.R9.Extensions.Essentials&apos;).
        /// </summary>
        internal static string ReplaceWithStaticThrowMethod {
            get {
                return ResourceManager.GetString("ReplaceWithStaticThrowMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommends replacing explicit argument throwing with the more efficient &apos;Microsoft.R9.Extensions.Diagnostics.Throws&apos; class.
        /// </summary>
        internal static string ThrowsExpressionDescription {
            get {
                return ResourceManager.GetString("ThrowsExpressionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;{0}&apos; to throw the exception instead to improve performance.
        /// </summary>
        internal static string ThrowsExpressionMessage {
            get {
                return ResourceManager.GetString("ThrowsExpressionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the &apos;Microsoft.R9.Extensions.Diagnostics.Throws&apos; class instead of explicitly throwing exception for improved performance.
        /// </summary>
        internal static string ThrowsExpressionTitle {
            get {
                return ResourceManager.GetString("ThrowsExpressionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommends replacing explicit argument throwing with the more efficient &apos;Microsoft.R9.Extensions.Diagnostics.Throws&apos; class.
        /// </summary>
        internal static string ThrowsStatementDescription {
            get {
                return ResourceManager.GetString("ThrowsStatementDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;{0}&apos; to throw the exception instead to improve performance.
        /// </summary>
        internal static string ThrowsStatementMessage {
            get {
                return ResourceManager.GetString("ThrowsStatementMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the &apos;Microsoft.R9.Extensions.Diagnostics.Throws&apos; class instead of explicitly throwing exception for improved performance.
        /// </summary>
        internal static string ThrowsStatementTitle {
            get {
                return ResourceManager.GetString("ThrowsStatementTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Microsoft.R9.Extensions.Text.NumericExtensions.ToInvariantString&apos; provides caching for common numeric values, avoiding the need to allocate new strings in many situations.
        /// </summary>
        internal static string ToInvariantStringDescription {
            get {
                return ResourceManager.GetString("ToInvariantStringDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;Microsoft.R9.Extensions.Text.NumericExtensions.ToInvariantString&apos; for improved performance.
        /// </summary>
        internal static string ToInvariantStringMessage {
            get {
                return ResourceManager.GetString("ToInvariantStringMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;Microsoft.R9.Extensions.Text.NumericExtensions.ToInvariantString&apos; for improved performance.
        /// </summary>
        internal static string ToInvariantStringTitle {
            get {
                return ResourceManager.GetString("ToInvariantStringTitle", resourceCulture);
            }
        }
    }
}
