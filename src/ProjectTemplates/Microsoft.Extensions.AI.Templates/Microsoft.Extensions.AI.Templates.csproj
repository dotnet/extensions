<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageType>Template</PackageType>
    <TargetFrameworks>$(NetCoreTargetFrameworks);netstandard2.0</TargetFrameworks>
    <Description>Project templates for Microsoft.Extensions.AI.</Description>
    <PackageTags>dotnet-new;templates;ai</PackageTags>

    <Stage>preview</Stage>
    <Workstream>AI</Workstream>
    <MinCodeCoverage>0</MinCodeCoverage>
    <MinMutationScore>0</MinMutationScore>

    <IsPackable>true</IsPackable>
    <IsProjectReferenceProvider>false</IsProjectReferenceProvider>
    <IncludeContentInPack>true</IncludeContentInPack>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <IncludeSymbols>false</IncludeSymbols>
    <ContentTargetFolders>content</ContentTargetFolders>
    <EnableDefaultItems>false</EnableDefaultItems>
    <NoDefaultExcludes>true</NoDefaultExcludes>
    <NoPackageAnalysis>true</NoPackageAnalysis>

    <!-- Use for incremental builds. When versions or dependencies of templates change, this file is updated and causes a re-build. -->
    <_GeneratedContentPropertiesHashFile>$(IntermediateOutputPath)$(MSBuildProjectName).content.g.cache</_GeneratedContentPropertiesHashFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.DotNet.Build.Tasks.Templating" Version="$(MicrosoftDotNetBuildTasksTemplatingVersion)" AllowExplicitReference="true" PrivateAssets="All" IsImplicitlyDefined="true" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Specify package version variables used in template content. -->
    <_GeneratedContentPackageVersionProperties>
      OllamaSharpVersion=$(OllamaSharpVersion);
      OpenAIVersion=$(OpenAIVersion);
      AzureAIProjectsVersion=$(AzureAIProjectsVersion);
      AzureAIOpenAIVersion=$(AzureAIOpenAIVersion);
      AzureIdentityVersion=$(AzureIdentityVersion);
      MicrosoftEntityFrameworkCoreSqliteVersion=$(MicrosoftEntityFrameworkCoreSqliteVersion);
      MicrosoftSemanticKernelCoreVersion=$(MicrosoftSemanticKernelCoreVersion);
      PdfPigVersion=$(PdfPigVersion);
      SystemLinqAsyncVersion=$(SystemLinqAsyncVersion);
      AzureSearchDocumentsVersion=$(AzureSearchDocumentsVersion);
      MicrosoftSemanticKernelConnectorsAzureAISearchVersion=$(MicrosoftSemanticKernelConnectorsAzureAISearchVersion);
    </_GeneratedContentPackageVersionProperties>
  </PropertyGroup>

  <ItemGroup>
    <_GeneratedContent
      Include="src\ChatWithCustomData\ChatWithCustomData.Web\ChatWithCustomData.Web.csproj.in"
      OutputPath="src\ChatWithCustomData\ChatWithCustomData.Web\ChatWithCustomData.Web.csproj" />
    <_GeneratedContent
      Include="src\ChatWithCustomData\ChatWithCustomData.Web\Directory.Build.targets.in"
      OutputPath="src\ChatWithCustomData\ChatWithCustomData.Web\Directory.Build.targets" />
    <_GeneratedContent
      Include="src\ChatWithCustomData\ChatWithCustomData.Web\NuGet.config.in"
      OutputPath="src\ChatWithCustomData\ChatWithCustomData.Web\NuGet.config" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="src\ChatWithCustomData\**\*" Exclude="**\bin\**;**\obj\**;**\node_modules\**;**\*.user;**\*.in;**\*.out.js;**\*.generated.css;**\package-lock.json;**\NuGet.Config;**\Directory.Build.targets" />
    <Compile Remove="**\*" />
  </ItemGroup>

  <Target Name="_ComputeGeneratedContentPropertiesHash">
    <PropertyGroup>
      <!-- Specify additional repo properties used by template content. -->
      <!-- We do this after the initial evaluation of this project file so all properties have been initialized. -->
      <_GeneratedContentRepoProperties>
        ArtifactsShippingPackagesDir=$(ArtifactsShippingPackagesDir);
        RepoPackageVersion=$(Version);
      </_GeneratedContentRepoProperties>
    </PropertyGroup>

    <PropertyGroup>
      <_GeneratedContentProperties>
        $(_GeneratedContentPackageVersionProperties);
        $(_GeneratedContentRepoProperties);
      </_GeneratedContentProperties>
    </PropertyGroup>

    <Hash ItemsToHash="$(_GeneratedContentProperties)">
      <Output TaskParameter="HashResult" PropertyName="_GeneratedContentPropertiesHash" />
    </Hash>

    <WriteLinesToFile Overwrite="true" Lines="$(_GeneratedContentPropertiesHash)" File="$(_GeneratedContentPropertiesHashFile)" WriteOnlyWhenDifferent="true" />
  </Target>

  <Target Name="_GenerateContent"
          DependsOnTargets="_ComputeGeneratedContentPropertiesHash"
          BeforeTargets="CoreCompile"
          Inputs="$(MSBuildAllProjects);$(_GeneratedContentPropertiesHashFile);@(_GeneratedContent)"
          Outputs="@(_GeneratedContent->'%(OutputPath)')">

    <GenerateFileFromTemplate
      TemplateFile="%(_GeneratedContent.Identity)"
      Properties="$(_GeneratedContentProperties);%(_GeneratedContent.AdditionalProperties)"
      OutputPath="%(_GeneratedContent.OutputPath)">

      <Output TaskParameter="ResolvedOutputPath" ItemName="FileWrites" />
      <Output TaskParameter="ResolvedOutputPath" ItemName="Content" />
    </GenerateFileFromTemplate>
  </Target>
</Project>
