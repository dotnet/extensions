# Created by DiagConfig, the diagnostic config generator
# Generated : 2023-05-24 21:09:54Z
# Max Tier  : 1
# Attributes: api, general, general_externalonly, performance, production
# Analyzers : ILLink.RoslynAnalyzer, Microsoft.AspNetCore.App.Analyzers, Microsoft.AspNetCore.Components.Analyzers, Microsoft.CodeAnalysis.CSharp.NetAnalyzers, Microsoft.CodeAnalysis.NetAnalyzers, Microsoft.Extensions.ExtraAnalyzers.Roslyn4.0, Microsoft.Extensions.LocalAnalyzers, Microsoft.VisualStudio.Threading.Analyzers, Microsoft.VisualStudio.Threading.Analyzers.CSharp, SonarAnalyzer.CSharp

is_global = true
global_level = -1

# Title    : Do not use model binding attributes with route handlers
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0003.severity = none

# Title    : Do not use action results with route handlers
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0004.severity = none

# Title    : Do not place attribute on method called by route handler lambda
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0005.severity = none

# Title    : Do not use non-literal sequence numbers
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0006.severity = none

# Title    : Route parameter and argument optionality is mismatched
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0007.severity = none

# Title    : Do not use ConfigureWebHost with WebApplicationBuilder.Host
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0008.severity = error

# Title    : Do not use Configure with WebApplicationBuilder.WebHost
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0009.severity = error

# Title    : Do not use UseStartup with WebApplicationBuilder.WebHost
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0010.severity = error

# Title    : Suggest using builder.Logging over Host.ConfigureLogging or WebHost.ConfigureLogging
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0011.severity = none

# Title    : Suggest using builder.Services over Host.ConfigureServices or WebHost.ConfigureServices
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0012.severity = none

# Title    : Suggest switching from using Configure methods to WebApplicationBuilder.Configuration
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0013.severity = none

# Title    : Suggest using top level route registrations
# Category : Usage
# Help Link: https://aka.ms/aspnet/analyzers
dotnet_diagnostic.ASP0014.severity = none

# Title    : Component parameter should have public setters.
# Category : Encapsulation
dotnet_diagnostic.BL0001.severity = error

# Title    : Component has multiple CaptureUnmatchedValues parameters
# Category : Usage
dotnet_diagnostic.BL0002.severity = warning

# Title    : Component parameter with CaptureUnmatchedValues has the wrong type
# Category : Usage
dotnet_diagnostic.BL0003.severity = warning

# Title    : Component parameter should be public.
# Category : Encapsulation
dotnet_diagnostic.BL0004.severity = error

# Title    : Component parameter should not be set outside of its component.
# Category : Usage
dotnet_diagnostic.BL0005.severity = warning

# Title    : Do not use RenderTree types
# Category : Usage
dotnet_diagnostic.BL0006.severity = warning

# Title    : Component parameters should be auto properties
# Category : Usage
dotnet_diagnostic.BL0007.severity = none

# Title    : Do not declare static members on generic types
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1000
dotnet_diagnostic.CA1000.severity = none

# Title    : Types that own disposable fields should be disposable
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1001
dotnet_diagnostic.CA1001.severity = none

# Title    : Do not expose generic lists
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1002
dotnet_diagnostic.CA1002.severity = none

# Title    : Use generic event handler instances
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1003
dotnet_diagnostic.CA1003.severity = none

# Title    : Avoid excessive parameters on generic types
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1005
dotnet_diagnostic.CA1005.severity = none

# Title    : Enums should have zero value
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1008
dotnet_diagnostic.CA1008.severity = none

# Title    : Generic interface should also be implemented
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1010
dotnet_diagnostic.CA1010.severity = none

# Title    : Abstract types should not have public constructors
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1012
dotnet_diagnostic.CA1012.severity = none

# Title    : Mark assemblies with CLSCompliant
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1014
dotnet_diagnostic.CA1014.severity = none

# Title    : Mark assemblies with assembly version
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1016
dotnet_diagnostic.CA1016.severity = none

# Title    : Mark assemblies with ComVisible
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1017
dotnet_diagnostic.CA1017.severity = none

# Title    : Mark attributes with AttributeUsageAttribute
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1018
dotnet_diagnostic.CA1018.severity = none

# Title    : Define accessors for attribute arguments
# Category : Design
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1019
dotnet_diagnostic.CA1019.severity = none

# Title    : Define accessors for attribute arguments
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1019
dotnet_diagnostic.CA1019.severity = none

# Title    : Avoid out parameters
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1021
dotnet_diagnostic.CA1021.severity = none

# Title    : Use properties where appropriate
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1024
dotnet_diagnostic.CA1024.severity = none

# Title    : Mark enums with FlagsAttribute
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1027
dotnet_diagnostic.CA1027.severity = none

# Title    : Enum Storage should be Int32
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1028
dotnet_diagnostic.CA1028.severity = none

# Title    : Use events where appropriate
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1030
dotnet_diagnostic.CA1030.severity = none

# Title    : Do not catch general exception types
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1031
dotnet_diagnostic.CA1031.severity = none

# Title    : Implement standard exception constructors
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1032
dotnet_diagnostic.CA1032.severity = none

# Title    : Interface methods should be callable by child types
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1033
dotnet_diagnostic.CA1033.severity = none

# Title    : Nested types should not be visible
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1034
dotnet_diagnostic.CA1034.severity = none

# Title    : Override methods on comparable types
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1036
dotnet_diagnostic.CA1036.severity = none

# Title    : Avoid empty interfaces
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1040
dotnet_diagnostic.CA1040.severity = none

# Title    : Provide ObsoleteAttribute message
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1041
dotnet_diagnostic.CA1041.severity = none

# Title    : Use Integral Or String Argument For Indexers
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1043
dotnet_diagnostic.CA1043.severity = none

# Title    : Properties should not be write only
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1044
dotnet_diagnostic.CA1044.severity = none

# Title    : Do not pass types by reference
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1045
dotnet_diagnostic.CA1045.severity = none

# Title    : Do not overload equality operator on reference types
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1046
dotnet_diagnostic.CA1046.severity = none

# Title    : Do not declare protected member in sealed type
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1047
dotnet_diagnostic.CA1047.severity = none

# Title    : Declare types in namespaces
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1050
dotnet_diagnostic.CA1050.severity = none

# Title    : Do not declare visible instance fields
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1051
dotnet_diagnostic.CA1051.severity = none

# Title    : Static holder types should be Static or NotInheritable
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1052
dotnet_diagnostic.CA1052.severity = none

# Title    : URI-like parameters should not be strings
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1054
dotnet_diagnostic.CA1054.severity = none

# Title    : URI-like return values should not be strings
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1055
dotnet_diagnostic.CA1055.severity = none

# Title    : URI-like properties should not be strings
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1056
dotnet_diagnostic.CA1056.severity = none

# Title    : Types should not extend certain base types
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1058
dotnet_diagnostic.CA1058.severity = none

# Title    : Move pinvokes to native methods class
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1060
dotnet_diagnostic.CA1060.severity = none

# Title    : Do not hide base class methods
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1061
dotnet_diagnostic.CA1061.severity = none

# Title    : Validate arguments of public methods
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1062
dotnet_diagnostic.CA1062.severity = none

# Title    : Implement IDisposable Correctly
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1063
dotnet_diagnostic.CA1063.severity = warning

# Title    : Exceptions should be public
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1064
dotnet_diagnostic.CA1064.severity = none

# Title    : Do not raise exceptions in unexpected locations
# Category : Design
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1065
dotnet_diagnostic.CA1065.severity = none

# Title    : Do not raise exceptions in unexpected locations
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1065
dotnet_diagnostic.CA1065.severity = none

# Title    : Implement IEquatable when overriding Object.Equals
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1066
dotnet_diagnostic.CA1066.severity = none

# Title    : Override Object.Equals(object) when implementing IEquatable<T>
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1067
dotnet_diagnostic.CA1067.severity = none

# Title    : CancellationToken parameters must come last
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1068
dotnet_diagnostic.CA1068.severity = none

# Title    : Enums values should not be duplicated
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1069
dotnet_diagnostic.CA1069.severity = none

# Title    : Do not declare event fields as virtual
# Category : Design
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1070
dotnet_diagnostic.CA1070.severity = none

# Title    : Avoid using cref tags with a prefix
# Category : Documentation
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1200
dotnet_diagnostic.CA1200.severity = none

# Title    : Do not pass literals as localized parameters
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1303
dotnet_diagnostic.CA1303.severity = none

# Title    : Specify CultureInfo
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1304
dotnet_diagnostic.CA1304.severity = none

# Title    : Specify IFormatProvider
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1305
dotnet_diagnostic.CA1305.severity = none

# Title    : Specify StringComparison for clarity
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1307
dotnet_diagnostic.CA1307.severity = none

# Title    : Normalize strings to uppercase
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1308
dotnet_diagnostic.CA1308.severity = none

# Title    : Use ordinal string comparison
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1309
dotnet_diagnostic.CA1309.severity = none

# Title    : Specify StringComparison for correctness
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1310
dotnet_diagnostic.CA1310.severity = none

# Title    : Specify a culture or use an invariant version
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1311
dotnet_diagnostic.CA1311.severity = none

# Title    : P/Invokes should not be visible
# Category : Interoperability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1401
dotnet_diagnostic.CA1401.severity = none

# Title    : Validate platform compatibility
# Category : Interoperability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1416
dotnet_diagnostic.CA1416.severity = none

# Title    : Do not use 'OutAttribute' on string parameters for P/Invokes
# Category : Interoperability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1417
dotnet_diagnostic.CA1417.severity = none

# Title    : Use valid platform string
# Category : Interoperability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1418
dotnet_diagnostic.CA1418.severity = none

# Title    : Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
# Category : Interoperability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1419
dotnet_diagnostic.CA1419.severity = none

# Title    : Property, type, or attribute requires runtime marshalling
# Category : Interoperability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1420
dotnet_diagnostic.CA1420.severity = none

# Title    : This method uses runtime marshalling even when the 'DisableRuntimeMarshallingAttribute' is applied
# Category : Interoperability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1421
dotnet_diagnostic.CA1421.severity = none

# Title    : Validate platform compatibility
# Category : Interoperability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1422
dotnet_diagnostic.CA1422.severity = none

# Title    : Avoid excessive inheritance
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1501
dotnet_diagnostic.CA1501.severity = none

# Title    : Avoid excessive complexity
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1502
dotnet_diagnostic.CA1502.severity = none

# Title    : Avoid unmaintainable code
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1505
dotnet_diagnostic.CA1505.severity = none

# Title    : Avoid excessive class coupling
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1506
dotnet_diagnostic.CA1506.severity = none

# Title    : Use nameof to express symbol names
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1507
dotnet_diagnostic.CA1507.severity = none

# Title    : Avoid dead conditional code
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1508
dotnet_diagnostic.CA1508.severity = none

# Title    : Invalid entry in code metrics rule specification file
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1509
dotnet_diagnostic.CA1509.severity = none

# Title    : Use ArgumentNullException throw helper
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1510
dotnet_diagnostic.CA1510.severity = suggestion

# Title    : Use ArgumentException throw helper
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1511
dotnet_diagnostic.CA1511.severity = suggestion

# Title    : Use ArgumentOutOfRangeException throw helper
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1512
dotnet_diagnostic.CA1512.severity = suggestion

# Title    : Use ObjectDisposedException throw helper
# Category : Maintainability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1513
dotnet_diagnostic.CA1513.severity = suggestion

# Title    : Do not name enum values 'Reserved'
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1700
dotnet_diagnostic.CA1700.severity = none

# Title    : Identifiers should not contain underscores
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1707
dotnet_diagnostic.CA1707.severity = none

# Title    : Identifiers should differ by more than case
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1708
dotnet_diagnostic.CA1708.severity = none

# Title    : Identifiers should have correct suffix
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1710
dotnet_diagnostic.CA1710.severity = none

# Title    : Identifiers should not have incorrect suffix
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1711
dotnet_diagnostic.CA1711.severity = none

# Title    : Do not prefix enum values with type name
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1712
dotnet_diagnostic.CA1712.severity = none

# Title    : Events should not have 'Before' or 'After' prefix
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1713
dotnet_diagnostic.CA1713.severity = none

# Title    : Identifiers should have correct prefix
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1715
dotnet_diagnostic.CA1715.severity = none

# Title    : Identifiers should not match keywords
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1716
dotnet_diagnostic.CA1716.severity = none

# Title    : Identifier contains type name
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1720
dotnet_diagnostic.CA1720.severity = none

# Title    : Property names should not match get methods
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1721
dotnet_diagnostic.CA1721.severity = none

# Title    : Type names should not match namespaces
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1724
dotnet_diagnostic.CA1724.severity = none

# Title    : Parameter names should match base declaration
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1725
dotnet_diagnostic.CA1725.severity = none

# Title    : Use PascalCase for named placeholders
# Category : Naming
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1727
dotnet_diagnostic.CA1727.severity = none

# Title    : Review unused parameters
# Category : Usage
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1801
dotnet_diagnostic.CA1801.severity = none

# Title    : Review unused parameters
# Category : Usage
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1801
dotnet_diagnostic.CA1801.severity = none

# Title    : Use literals where appropriate
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1802
dotnet_diagnostic.CA1802.severity = none

# Title    : Use literals where appropriate
# Category : Performance
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1802
dotnet_diagnostic.CA1802.severity = none

# Title    : Do not initialize unnecessarily
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1805
dotnet_diagnostic.CA1805.severity = none

# Title    : Do not initialize unnecessarily
# Category : Performance
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1805
dotnet_diagnostic.CA1805.severity = none

# Title    : Do not ignore method results
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1806
dotnet_diagnostic.CA1806.severity = none

# Title    : Initialize reference type static fields inline
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1810
dotnet_diagnostic.CA1810.severity = none

# Title    : Avoid uninstantiated internal classes
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1812
dotnet_diagnostic.CA1812.severity = none

# Title    : Avoid unsealed attributes
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1813
dotnet_diagnostic.CA1813.severity = none

# Title    : Prefer jagged arrays over multidimensional
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1814
dotnet_diagnostic.CA1814.severity = none

# Title    : Override equals and operator equals on value types
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1815
dotnet_diagnostic.CA1815.severity = none

# Title    : Dispose methods should call SuppressFinalize
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1816
dotnet_diagnostic.CA1816.severity = none

# Title    : Properties should not return arrays
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1819
dotnet_diagnostic.CA1819.severity = none

# Title    : Test for empty strings using string length
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1820
dotnet_diagnostic.CA1820.severity = none

# Title    : Remove empty Finalizers
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1821
dotnet_diagnostic.CA1821.severity = none

# Title    : Mark members as static
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822
dotnet_diagnostic.CA1822.severity = none

# Title    : Avoid unused private fields
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1823
dotnet_diagnostic.CA1823.severity = none

# Title    : Mark assemblies with NeutralResourcesLanguageAttribute
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1824
dotnet_diagnostic.CA1824.severity = none

# Title    : Avoid zero-length array allocations
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1825
dotnet_diagnostic.CA1825.severity = none

# Title    : Do not use Enumerable methods on indexable collections
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1826
dotnet_diagnostic.CA1826.severity = none

# Title    : Do not use Count() or LongCount() when Any() can be used
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1827
dotnet_diagnostic.CA1827.severity = none

# Title    : Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1828
dotnet_diagnostic.CA1828.severity = none

# Title    : Use Length/Count property instead of Count() when available
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1829
dotnet_diagnostic.CA1829.severity = none

# Title    : Prefer strongly-typed Append and Insert method overloads on StringBuilder
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1830
dotnet_diagnostic.CA1830.severity = none

# Title    : Use AsSpan or AsMemory instead of Range-based indexers when appropriate
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1831
dotnet_diagnostic.CA1831.severity = none

# Title    : Use AsSpan or AsMemory instead of Range-based indexers when appropriate
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1832
dotnet_diagnostic.CA1832.severity = none

# Title    : Use AsSpan or AsMemory instead of Range-based indexers when appropriate
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1833
dotnet_diagnostic.CA1833.severity = none

# Title    : Consider using 'StringBuilder.Append(char)' when applicable
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1834
dotnet_diagnostic.CA1834.severity = none

# Title    : Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1835
dotnet_diagnostic.CA1835.severity = none

# Title    : Prefer IsEmpty over Count
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1836
dotnet_diagnostic.CA1836.severity = none

# Title    : Use 'Environment.ProcessId'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1837
dotnet_diagnostic.CA1837.severity = none

# Title    : Avoid 'StringBuilder' parameters for P/Invokes
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1838
dotnet_diagnostic.CA1838.severity = none

# Title    : Use 'Environment.ProcessPath'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1839
dotnet_diagnostic.CA1839.severity = none

# Title    : Use 'Environment.CurrentManagedThreadId'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1840
dotnet_diagnostic.CA1840.severity = none

# Title    : Prefer Dictionary.Contains methods
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1841
dotnet_diagnostic.CA1841.severity = none

# Title    : Do not use 'WhenAll' with a single task
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1842
dotnet_diagnostic.CA1842.severity = none

# Title    : Do not use 'WaitAll' with a single task
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1843
dotnet_diagnostic.CA1843.severity = none

# Title    : Provide memory-based overrides of async methods when subclassing 'Stream'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1844
dotnet_diagnostic.CA1844.severity = none

# Title    : Use span-based 'string.Concat'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1845
dotnet_diagnostic.CA1845.severity = none

# Title    : Prefer 'AsSpan' over 'Substring'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1846
dotnet_diagnostic.CA1846.severity = none

# Title    : Use char literal for a single character lookup
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1847
dotnet_diagnostic.CA1847.severity = none

# Title    : Use the LoggerMessage delegates
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1848
dotnet_diagnostic.CA1848.severity = none

# Title    : Call async methods when in an async method
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1849
dotnet_diagnostic.CA1849.severity = warning

# Title    : Prefer static 'HashData' method over 'ComputeHash'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1850
dotnet_diagnostic.CA1850.severity = none

# Title    : Possible multiple enumerations of 'IEnumerable' collection
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1851
dotnet_diagnostic.CA1851.severity = suggestion

# Title    : Seal internal types
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1852
dotnet_diagnostic.CA1852.severity = none

# Title    : Unnecessary call to 'Dictionary.ContainsKey(key)'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1853
dotnet_diagnostic.CA1853.severity = suggestion

# Title    : Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1854
dotnet_diagnostic.CA1854.severity = warning

# Title    : Prefer 'Clear' over 'Fill'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1855
dotnet_diagnostic.CA1855.severity = none

# Title    : Incorrect usage of ConstantExpected attribute
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1856
dotnet_diagnostic.CA1856.severity = error

# Title    : A constant is expected for the parameter
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1857
dotnet_diagnostic.CA1857.severity = warning

# Title    : Use 'StartsWith' instead of 'IndexOf'
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1858
dotnet_diagnostic.CA1858.severity = suggestion

# Title    : Use concrete types when possible for improved performance
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1859
dotnet_diagnostic.CA1859.severity = suggestion

# Title    : Avoid using 'Enumerable.Any()' extension method
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860
dotnet_diagnostic.CA1860.severity = suggestion

# Title    : Avoid constant arrays as arguments
# Category : Performance
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1861
dotnet_diagnostic.CA1861.severity = suggestion

# Title    : Dispose objects before losing scope
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2000
dotnet_diagnostic.CA2000.severity = none

# Title    : Do not lock on objects with weak identity
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2002
dotnet_diagnostic.CA2002.severity = none

# Title    : Consider calling ConfigureAwait on the awaited task
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2007
dotnet_diagnostic.CA2007.severity = none

# Title    : Do not create tasks without passing a TaskScheduler
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2008
dotnet_diagnostic.CA2008.severity = none

# Title    : Do not call ToImmutableCollection on an ImmutableCollection value
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2009
dotnet_diagnostic.CA2009.severity = none

# Title    : Avoid infinite recursion
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2011
dotnet_diagnostic.CA2011.severity = none

# Title    : Use ValueTasks correctly
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2012
dotnet_diagnostic.CA2012.severity = none

# Title    : Do not use ReferenceEquals with value types
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2013
dotnet_diagnostic.CA2013.severity = none

# Title    : Do not use stackalloc in loops
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2014
dotnet_diagnostic.CA2014.severity = none

# Title    : Do not use stackalloc in loops
# Category : Reliability
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2014
dotnet_diagnostic.CA2014.severity = none

# Title    : Do not define finalizers for types derived from MemoryManager<T>
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2015
dotnet_diagnostic.CA2015.severity = none

# Title    : Forward the 'CancellationToken' parameter to methods
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2016
dotnet_diagnostic.CA2016.severity = warning

# Title    : Parameter count mismatch
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2017
dotnet_diagnostic.CA2017.severity = warning

# Title    : 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2018
dotnet_diagnostic.CA2018.severity = warning

# Title    : Improper 'ThreadStatic' field initialization
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2019
dotnet_diagnostic.CA2019.severity = none

# Title    : Prevent behavioral change
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2020
dotnet_diagnostic.CA2020.severity = none

# Title    : Do not call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types
# Category : Reliability
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2021
dotnet_diagnostic.CA2021.severity = warning

# Title    : Review SQL queries for security vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2100
dotnet_diagnostic.CA2100.severity = warning

# Title    : Specify marshaling for P/Invoke string arguments
# Category : Globalization
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2101
dotnet_diagnostic.CA2101.severity = none

# Title    : Review visible event handlers
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2109
dotnet_diagnostic.CA2109.severity = none

# Title    : Seal methods that satisfy private interfaces
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2119
dotnet_diagnostic.CA2119.severity = none

# Title    : Do Not Catch Corrupted State Exceptions
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2153
dotnet_diagnostic.CA2153.severity = warning

# Title    : Rethrow to preserve stack details
# Category : Usage
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2200
dotnet_diagnostic.CA2200.severity = warning

# Title    : Rethrow to preserve stack details
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2200
dotnet_diagnostic.CA2200.severity = warning

# Title    : Do not raise reserved exception types
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2201
dotnet_diagnostic.CA2201.severity = none

# Title    : Initialize value type static fields inline
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2207
dotnet_diagnostic.CA2207.severity = none

# Title    : Instantiate argument exceptions correctly
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208
dotnet_diagnostic.CA2208.severity = none

# Title    : Non-constant fields should not be visible
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2211
dotnet_diagnostic.CA2211.severity = none

# Title    : Disposable fields should be disposed
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2213
dotnet_diagnostic.CA2213.severity = warning

# Title    : Do not call overridable methods in constructors
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2214
dotnet_diagnostic.CA2214.severity = warning

# Title    : Dispose methods should call base class dispose
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2215
dotnet_diagnostic.CA2215.severity = none

# Title    : Disposable types should declare finalizer
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2216
dotnet_diagnostic.CA2216.severity = warning

# Title    : Do not mark enums with FlagsAttribute
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2217
dotnet_diagnostic.CA2217.severity = warning
dotnet_code_quality.CA2217.api_surface = all

# Title    : Do not raise exceptions in finally clauses
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2219
dotnet_diagnostic.CA2219.severity = none

# Title    : Operator overloads have named alternates
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2225
dotnet_diagnostic.CA2225.severity = none

# Title    : Operators should have symmetrical overloads
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2226
dotnet_diagnostic.CA2226.severity = none

# Title    : Collection properties should be read only
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2227
dotnet_diagnostic.CA2227.severity = warning

# Title    : Implement serialization constructors
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2229
dotnet_diagnostic.CA2229.severity = none

# Title    : Overload operator equals on overriding value type Equals
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2231
dotnet_diagnostic.CA2231.severity = none

# Title    : Pass system uri objects instead of strings
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2234
dotnet_diagnostic.CA2234.severity = none

# Title    : Mark all non-serializable fields
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2235
dotnet_diagnostic.CA2235.severity = none

# Title    : Mark ISerializable types with serializable
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2237
dotnet_diagnostic.CA2237.severity = none

# Title    : Provide correct arguments to formatting methods
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2241
dotnet_diagnostic.CA2241.severity = warning

# Title    : Test for NaN correctly
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2242
dotnet_diagnostic.CA2242.severity = warning

# Title    : Attribute string literals should parse correctly
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2243
dotnet_diagnostic.CA2243.severity = none

# Title    : Do not duplicate indexed element initializations
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2244
dotnet_diagnostic.CA2244.severity = none

# Title    : Do not assign a property to itself
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2245
dotnet_diagnostic.CA2245.severity = none

# Title    : Assigning symbol and its member in the same statement
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2246
dotnet_diagnostic.CA2246.severity = none

# Title    : Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2247
dotnet_diagnostic.CA2247.severity = none

# Title    : Provide correct 'enum' argument to 'Enum.HasFlag'
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2248
dotnet_diagnostic.CA2248.severity = none

# Title    : Consider using 'string.Contains' instead of 'string.IndexOf'
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2249
dotnet_diagnostic.CA2249.severity = none

# Title    : Use 'ThrowIfCancellationRequested'
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2250
dotnet_diagnostic.CA2250.severity = suggestion

# Title    : Use 'string.Equals'
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2251
dotnet_diagnostic.CA2251.severity = none

# Title    : This API requires opting into preview features
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2252
dotnet_diagnostic.CA2252.severity = error

# Title    : Named placeholders should not be numeric values
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2253
dotnet_diagnostic.CA2253.severity = none

# Title    : Template should be a static expression
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254
dotnet_diagnostic.CA2254.severity = none

# Title    : The 'ModuleInitializer' attribute should not be used in libraries
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2255
dotnet_diagnostic.CA2255.severity = none

# Title    : All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2256
dotnet_diagnostic.CA2256.severity = none

# Title    : Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2257
dotnet_diagnostic.CA2257.severity = none

# Title    : Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2258
dotnet_diagnostic.CA2258.severity = none

# Title    : 'ThreadStatic' only affects static fields
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2259
dotnet_diagnostic.CA2259.severity = none

# Title    : Use correct type parameter
# Category : Usage
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2260
dotnet_diagnostic.CA2260.severity = none

# Title    : Do not use insecure deserializer BinaryFormatter
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2300
dotnet_diagnostic.CA2300.severity = warning

# Title    : Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2301
dotnet_diagnostic.CA2301.severity = warning

# Title    : Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2302
dotnet_diagnostic.CA2302.severity = warning

# Title    : Do not use insecure deserializer LosFormatter
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2305
dotnet_diagnostic.CA2305.severity = warning

# Title    : Do not use insecure deserializer NetDataContractSerializer
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2310
dotnet_diagnostic.CA2310.severity = warning

# Title    : Do not deserialize without first setting NetDataContractSerializer.Binder
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2311
dotnet_diagnostic.CA2311.severity = warning

# Title    : Ensure NetDataContractSerializer.Binder is set before deserializing
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2312
dotnet_diagnostic.CA2312.severity = warning

# Title    : Do not use insecure deserializer ObjectStateFormatter
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2315
dotnet_diagnostic.CA2315.severity = warning

# Title    : Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2321
dotnet_diagnostic.CA2321.severity = warning

# Title    : Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2322
dotnet_diagnostic.CA2322.severity = warning

# Title    : Do not use TypeNameHandling values other than None
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2326
dotnet_diagnostic.CA2326.severity = warning

# Title    : Do not use insecure JsonSerializerSettings
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2327
dotnet_diagnostic.CA2327.severity = warning

# Title    : Ensure that JsonSerializerSettings are secure
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2328
dotnet_diagnostic.CA2328.severity = warning

# Title    : Do not deserialize with JsonSerializer using an insecure configuration
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2329
dotnet_diagnostic.CA2329.severity = warning

# Title    : Ensure that JsonSerializer has a secure configuration when deserializing
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2330
dotnet_diagnostic.CA2330.severity = warning

# Title    : Do not use DataTable.ReadXml() with untrusted data
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2350
dotnet_diagnostic.CA2350.severity = warning

# Title    : Do not use DataSet.ReadXml() with untrusted data
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2351
dotnet_diagnostic.CA2351.severity = warning

# Title    : Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2352
dotnet_diagnostic.CA2352.severity = warning

# Title    : Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
# Category : Security
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2352
dotnet_diagnostic.CA2352.severity = warning

# Title    : Unsafe DataSet or DataTable in serializable type
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2353
dotnet_diagnostic.CA2353.severity = warning

# Title    : Unsafe DataSet or DataTable in serializable type
# Category : Security
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2353
dotnet_diagnostic.CA2353.severity = warning

# Title    : Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2354
dotnet_diagnostic.CA2354.severity = warning

# Title    : Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
# Category : Security
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2354
dotnet_diagnostic.CA2354.severity = warning

# Title    : Unsafe DataSet or DataTable type found in deserializable object graph
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2355
dotnet_diagnostic.CA2355.severity = warning

# Title    : Unsafe DataSet or DataTable type found in deserializable object graph
# Category : Security
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2355
dotnet_diagnostic.CA2355.severity = warning

# Title    : Unsafe DataSet or DataTable type in web deserializable object graph
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2356
dotnet_diagnostic.CA2356.severity = warning

# Title    : Unsafe DataSet or DataTable type in web deserializable object graph
# Category : Security
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2356
dotnet_diagnostic.CA2356.severity = warning

# Title    : Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2361
dotnet_diagnostic.CA2361.severity = warning

# Title    : Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2362
dotnet_diagnostic.CA2362.severity = warning

# Title    : Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks
# Category : Security
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2362
dotnet_diagnostic.CA2362.severity = warning

# Title    : Review code for SQL injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3001
dotnet_diagnostic.CA3001.severity = warning

# Title    : Review code for XSS vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3002
dotnet_diagnostic.CA3002.severity = warning

# Title    : Review code for file path injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3003
dotnet_diagnostic.CA3003.severity = warning

# Title    : Review code for information disclosure vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3004
dotnet_diagnostic.CA3004.severity = warning

# Title    : Review code for LDAP injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3005
dotnet_diagnostic.CA3005.severity = warning

# Title    : Review code for process command injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3006
dotnet_diagnostic.CA3006.severity = warning

# Title    : Review code for open redirect vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3007
dotnet_diagnostic.CA3007.severity = warning

# Title    : Review code for XPath injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3008
dotnet_diagnostic.CA3008.severity = warning

# Title    : Review code for XML injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3009
dotnet_diagnostic.CA3009.severity = warning

# Title    : Review code for XAML injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3010
dotnet_diagnostic.CA3010.severity = warning

# Title    : Review code for DLL injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3011
dotnet_diagnostic.CA3011.severity = warning

# Title    : Review code for regex injection vulnerabilities
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3012
dotnet_diagnostic.CA3012.severity = warning

# Title    : Do Not Add Schema By URL
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3061
dotnet_diagnostic.CA3061.severity = silent

# Title    : Insecure DTD processing in XML
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3075
dotnet_diagnostic.CA3075.severity = warning

# Title    : Insecure XSLT script processing.
# Category : Security
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3076
dotnet_diagnostic.CA3076.severity = warning

# Title    : Insecure XSLT script processing
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3076
dotnet_diagnostic.CA3076.severity = warning

# Title    : Insecure Processing in API Design, XmlDocument and XmlTextReader
# Category : Security
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3077
dotnet_diagnostic.CA3077.severity = warning

# Title    : Insecure Processing in API Design, XmlDocument and XmlTextReader
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3077
dotnet_diagnostic.CA3077.severity = warning

# Title    : Mark Verb Handlers With Validate Antiforgery Token
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3147
dotnet_diagnostic.CA3147.severity = warning

# Title    : Do Not Use Weak Cryptographic Algorithms
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5350
dotnet_diagnostic.CA5350.severity = error

# Title    : Do Not Use Broken Cryptographic Algorithms
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5351
dotnet_diagnostic.CA5351.severity = error

# Title    : Review cipher mode usage with cryptography experts
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5358
dotnet_diagnostic.CA5358.severity = warning

# Title    : Do Not Disable Certificate Validation
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5359
dotnet_diagnostic.CA5359.severity = warning

# Title    : Do Not Call Dangerous Methods In Deserialization
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5360
dotnet_diagnostic.CA5360.severity = warning

# Title    : Do Not Disable SChannel Use of Strong Crypto
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5361
dotnet_diagnostic.CA5361.severity = warning

# Title    : Potential reference cycle in deserialized object graph
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5362
dotnet_diagnostic.CA5362.severity = warning

# Title    : Do Not Disable Request Validation
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5363
dotnet_diagnostic.CA5363.severity = warning

# Title    : Do Not Use Deprecated Security Protocols
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5364
dotnet_diagnostic.CA5364.severity = warning

# Title    : Do Not Disable HTTP Header Checking
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5365
dotnet_diagnostic.CA5365.severity = warning

# Title    : Use XmlReader for 'DataSet.ReadXml()'
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5366
dotnet_diagnostic.CA5366.severity = warning

# Title    : Do Not Serialize Types With Pointer Fields
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5367
dotnet_diagnostic.CA5367.severity = warning

# Title    : Set ViewStateUserKey For Classes Derived From Page
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5368
dotnet_diagnostic.CA5368.severity = warning

# Title    : Use XmlReader for 'XmlSerializer.Deserialize()'
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5369
dotnet_diagnostic.CA5369.severity = warning

# Title    : Use XmlReader for XmlValidatingReader constructor
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5370
dotnet_diagnostic.CA5370.severity = warning

# Title    : Use XmlReader for 'XmlSchema.Read()'
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5371
dotnet_diagnostic.CA5371.severity = warning

# Title    : Use XmlReader for XPathDocument constructor
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5372
dotnet_diagnostic.CA5372.severity = warning

# Title    : Do not use obsolete key derivation function
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5373
dotnet_diagnostic.CA5373.severity = warning

# Title    : Do Not Use XslTransform
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5374
dotnet_diagnostic.CA5374.severity = warning

# Title    : Do Not Use Account Shared Access Signature
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5375
dotnet_diagnostic.CA5375.severity = warning

# Title    : Use SharedAccessProtocol HttpsOnly
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5376
dotnet_diagnostic.CA5376.severity = warning

# Title    : Use Container Level Access Policy
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5377
dotnet_diagnostic.CA5377.severity = warning

# Title    : Do not disable ServicePointManagerSecurityProtocols
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5378
dotnet_diagnostic.CA5378.severity = warning

# Title    : Ensure Key Derivation Function algorithm is sufficiently strong
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5379
dotnet_diagnostic.CA5379.severity = warning

# Title    : Do Not Add Certificates To Root Store
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5380
dotnet_diagnostic.CA5380.severity = warning

# Title    : Ensure Certificates Are Not Added To Root Store
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5381
dotnet_diagnostic.CA5381.severity = warning

# Title    : Use Secure Cookies In ASP.NET Core
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5382
dotnet_diagnostic.CA5382.severity = warning

# Title    : Ensure Use Secure Cookies In ASP.NET Core
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5383
dotnet_diagnostic.CA5383.severity = warning

# Title    : Do Not Use Digital Signature Algorithm (DSA)
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5384
dotnet_diagnostic.CA5384.severity = warning

# Title    : Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5385
dotnet_diagnostic.CA5385.severity = warning

# Title    : Avoid hardcoding SecurityProtocolType value
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5386
dotnet_diagnostic.CA5386.severity = warning

# Title    : Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5387
dotnet_diagnostic.CA5387.severity = warning

# Title    : Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5388
dotnet_diagnostic.CA5388.severity = warning

# Title    : Do Not Add Archive Item's Path To The Target File System Path
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5389
dotnet_diagnostic.CA5389.severity = warning

# Title    : Do not hard-code encryption key
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5390
dotnet_diagnostic.CA5390.severity = warning

# Title    : Use antiforgery tokens in ASP.NET Core MVC controllers
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5391
dotnet_diagnostic.CA5391.severity = warning

# Title    : Use DefaultDllImportSearchPaths attribute for P/Invokes
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5392
dotnet_diagnostic.CA5392.severity = warning

# Title    : Do not use unsafe DllImportSearchPath value
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5393
dotnet_diagnostic.CA5393.severity = warning

# Title    : Do not use insecure randomness
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5394
dotnet_diagnostic.CA5394.severity = warning

# Title    : Miss HttpVerb attribute for action methods
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5395
dotnet_diagnostic.CA5395.severity = warning

# Title    : Set HttpOnly to true for HttpCookie
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5396
dotnet_diagnostic.CA5396.severity = warning

# Title    : Do not use deprecated SslProtocols values
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5397
dotnet_diagnostic.CA5397.severity = warning

# Title    : Avoid hardcoded SslProtocols values
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5398
dotnet_diagnostic.CA5398.severity = warning

# Title    : HttpClients should enable certificate revocation list checks
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5399
dotnet_diagnostic.CA5399.severity = warning

# Title    : Ensure HttpClient certificate revocation list check is not disabled
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5400
dotnet_diagnostic.CA5400.severity = warning

# Title    : Do not use CreateEncryptor with non-default IV
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5401
dotnet_diagnostic.CA5401.severity = warning

# Title    : Use CreateEncryptor with the default IV 
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5402
dotnet_diagnostic.CA5402.severity = warning

# Title    : Do not hard-code certificate
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5403
dotnet_diagnostic.CA5403.severity = warning

# Title    : Do not disable token validation checks
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5404
dotnet_diagnostic.CA5404.severity = warning

# Title    : Do not always skip token validation in delegates
# Category : Security
# Help Link: https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5405
dotnet_diagnostic.CA5405.severity = warning

# Title    : Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code
# Category : Trimming
dotnet_diagnostic.IL2026.severity = warning

# Title    : The value passed as the assembly name or type name to the CreateInstance method can't be statically analyzed.
# Category : Trimming
dotnet_diagnostic.IL2032.severity = none

# Title    : The 'DynamicallyAccessedMembersAttribute' is not allowed on methods. It is allowed on method return value or method parameters.
# Category : Trimming
dotnet_diagnostic.IL2041.severity = none

# Title    : 'DynamicallyAccessedMembersAttribute' on property conflicts with the same attribute on its accessor.
# Category : Trimming
dotnet_diagnostic.IL2043.severity = none

# Title    : 'RequiresUnreferencedCodeAttribute' annotations must match across all interface implementations or overrides.
# Category : Trimming
dotnet_diagnostic.IL2046.severity = warning

# Title    : Correctness of COM interop cannot be guaranteed after trimming. Interfaces and interface members might be removed.
# Category : Trimming
dotnet_diagnostic.IL2050.severity = none

# Title    : Either the type on which the MakeGenericType is called can't be statically determined, or the type parameters to be used for generic arguments can't be statically determined.
# Category : Trimming
dotnet_diagnostic.IL2055.severity = warning

# Title    : Unrecognized value passed to the parameter of method. It's not possible to guarantee the availability of the target type.
# Category : Trimming
dotnet_diagnostic.IL2057.severity = none

# Title    : Parameters passed to method cannot be analyzed. Consider using methods 'System.Type.GetType' and `System.Activator.CreateInstance` instead.
# Category : Trimming
dotnet_diagnostic.IL2058.severity = none

# Title    : The type passed to the RunClassConstructor is not statically known, Trimmer can't make sure that its static constructor is available.
# Category : Trimming
dotnet_diagnostic.IL2059.severity = none

# Title    : Call to 'System.Reflection.MethodInfo.MakeGenericMethod' can not be statically analyzed. It's not possible to guarantee the availability of requirements of the generic method.
# Category : Trimming
dotnet_diagnostic.IL2060.severity = warning

# Title    : The parameter of method has a DynamicallyAccessedMembersAttribute, but the value passed to it can not be statically analyzed.
# Category : Trimming
dotnet_diagnostic.IL2062.severity = warning

# Title    : The return value of method has a DynamicallyAccessedMembersAttribute, but the value returned from the method can not be statically analyzed.
# Category : Trimming
dotnet_diagnostic.IL2063.severity = warning

# Title    : The field has a DynamicallyAccessedMembersAttribute, but the value assigned to it can not be statically analyzed.
# Category : Trimming
dotnet_diagnostic.IL2064.severity = warning

# Title    : The method has a DynamicallyAccessedMembersAttribute (which applies to the implicit 'this' parameter), but the value used for the 'this' parameter can not be statically analyzed.
# Category : Trimming
dotnet_diagnostic.IL2065.severity = warning

# Title    : The generic parameter of type or method has a DynamicallyAccessedMembersAttribute, but the value used for it can not be statically analyzed.
# Category : Trimming
dotnet_diagnostic.IL2066.severity = warning

# Title    : Target parameter argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The parameter of method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2067.severity = none

# Title    : Target method return value does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The parameter of method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2068.severity = none

# Title    : Value stored in field does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The parameter of method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2069.severity = none

# Title    : 'this' argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The parameter of method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2070.severity = warning

# Title    : Generic argument does not satisfy 'DynamicallyAccessedMembersAttribute' in target method or type. The parameter of method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2071.severity = warning

# Title    : Target parameter argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The return value of the source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2072.severity = warning

# Title    : Target method return value does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The return value of the source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2073.severity = warning

# Title    : Value stored in field does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The return value of the source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2074.severity = warning

# Title    : 'this' argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The return value of the source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2075.severity = warning

# Title    : Target generic argument does not satisfy 'DynamicallyAccessedMembersAttribute' in target method or type. The return value of the source method does not have matching annotations. The source value must declare at least the same requirements as those declared on the target location it is assigned to.
# Category : Trimming
dotnet_diagnostic.IL2076.severity = warning

# Title    : Target parameter argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The source field does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2077.severity = warning

# Title    : Target method return value does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The source field does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2078.severity = warning

# Title    : Value stored in target field does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The source field does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2079.severity = warning

# Title    : 'this' argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The source field does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2080.severity = warning

# Title    : Target generic argument does not satisfy 'DynamicallyAccessedMembersAttribute' in target method or type. The source field does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2081.severity = warning

# Title    : Target parameter argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The implicit 'this' argument of source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2082.severity = warning

# Title    : Target method return value does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The implicit 'this' argument of source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2083.severity = warning

# Title    : Value stored in target field does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The implicit 'this' argument of source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2084.severity = warning

# Title    : 'this' argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The implicit 'this' argument of source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2085.severity = warning

# Title    : Target generic argument does not satisfy 'DynamicallyAccessedMembersAttribute' in target method or type. The implicit 'this' argument of source method does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2086.severity = warning

# Title    : Target parameter argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The generic parameter of the source method or type does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2087.severity = warning

# Title    : Target method return value does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The generic parameter of the source method or type does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2088.severity = warning

# Title    : Value stored in target field does not satisfy 'DynamicallyAccessedMembersAttribute' requirements. The generic parameter of the source method or type does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2089.severity = warning

# Title    : 'this' argument does not satisfy 'DynamicallyAccessedMembersAttribute' in call to target method. The generic parameter of the source method or type does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2090.severity = warning

# Title    : Target generic argument does not satisfy 'DynamicallyAccessedMembersAttribute' in target method or type. The generic parameter of the source method or type does not have matching annotations.
# Category : Trimming
dotnet_diagnostic.IL2091.severity = warning

# Title    : 'DynamicallyAccessedMemberTypes' on the parameter of method don't match overridden parameter of method. All overridden members must have the same 'DynamicallyAccessedMembersAttribute' usage.
# Category : Trimming
dotnet_diagnostic.IL2092.severity = warning

# Title    : 'DynamicallyAccessedMemberTypes' on the return value of method don't match overridden return value of method. All overridden members must have the same 'DynamicallyAccessedMembersAttribute' usage.
# Category : Trimming
dotnet_diagnostic.IL2093.severity = warning

# Title    : 'DynamicallyAccessedMemberTypes' on the implicit 'this' parameter of method don't match overridden implicit 'this' parameter of method. All overridden members must have the same 'DynamicallyAccessedMembersAttribute' usage.
# Category : Trimming
dotnet_diagnostic.IL2094.severity = warning

# Title    : 'DynamicallyAccessedMemberTypes' on the generic parameter of method or type don't match overridden generic parameter method or type. All overridden members must have the same 'DynamicallyAccessedMembersAttribute' usage.
# Category : Trimming
dotnet_diagnostic.IL2095.severity = warning

# Title    : Call to 'Type.GetType' method can perform case insensitive lookup of the type, currently ILLink can not guarantee presence of all the matching types.
# Category : Trimming
dotnet_diagnostic.IL2096.severity = none

# Title    : Field has 'DynamicallyAccessedMembersAttribute', but that attribute can only be applied to fields of type 'System.Type' or 'System.String'.
# Category : Trimming
dotnet_diagnostic.IL2097.severity = warning

# Title    : Parameter of method has 'DynamicallyAccessedMembersAttribute', but that attribute can only be applied to parameters of type 'System.Type' or 'System.String'.
# Category : Trimming
dotnet_diagnostic.IL2098.severity = warning

# Title    : Property has 'DynamicallyAccessedMembersAttribute', but that attribute can only be applied to properties of type 'System.Type' or 'System.String'.
# Category : Trimming
dotnet_diagnostic.IL2099.severity = warning

# Title    : Value passed to the parameter of method cannot be statically determined as a property accessor.
# Category : Trimming
dotnet_diagnostic.IL2103.severity = none

# Title    : Return type of method has 'DynamicallyAccessedMembersAttribute', but that attribute can only be applied to properties of type 'System.Type' or 'System.String'.
# Category : Trimming
dotnet_diagnostic.IL2106.severity = warning

# Title    : Types that derive from a base class with 'RequiresUnreferencedCodeAttribute' need to explicitly use the 'RequiresUnreferencedCodeAttribute' or suppress this warning
# Category : Trimming
dotnet_diagnostic.IL2109.severity = warning

# Title    : Field with 'DynamicallyAccessedMembersAttribute' is accessed via reflection. Trimmer can't guarantee availability of the requirements of the field.
# Category : Trimming
dotnet_diagnostic.IL2110.severity = warning

# Title    : Method with parameters or return value with `DynamicallyAccessedMembersAttribute` is accessed via reflection. Trimmer can't guarantee availability of the requirements of the method.
# Category : Trimming
dotnet_diagnostic.IL2111.severity = warning

# Title    : The use of 'RequiresUnreferencedCodeAttribute' on static constructors is disallowed since is a method not callable by the user, is only called by the runtime. Placing the attribute directly on the static constructor will have no effect, instead use 'RequiresUnreferencedCodeAttribute' on the type which will handle warning and silencing from the static constructor.
# Category : Trimming
dotnet_diagnostic.IL2116.severity = warning

# Title    : Avoid accessing Assembly file path when publishing as a single file
# Category : SingleFile
dotnet_diagnostic.IL3000.severity = none

# Title    : Avoid using accessing Assembly file path when publishing as a single-file
# Category : Publish
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/il3000
dotnet_diagnostic.IL3000.severity = none

# Title    : Avoid accessing Assembly file path when publishing as a single file
# Category : SingleFile
dotnet_diagnostic.IL3001.severity = none

# Title    : Avoid using accessing Assembly file path when publishing as a single-file
# Category : Publish
# Help Link: https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/il3001
dotnet_diagnostic.IL3001.severity = none

# Title    : Avoid calling members marked with 'RequiresAssemblyFilesAttribute' when publishing as a single-file
# Category : SingleFile
dotnet_diagnostic.IL3002.severity = none

# Title    : 'RequiresAssemblyFilesAttribute' annotations must match across all interface implementations or overrides.
# Category : SingleFile
dotnet_diagnostic.IL3003.severity = warning

# Title    : The use of 'RequiresAssemblyFilesAttribute' on static constructors is disallowed since is a method not callable by the user, is only called by the runtime. Placing the attribute directly on the static constructor will have no effect, instead use 'RequiresUnreferencedCodeAttribute' on the type which will handle warning and silencing from the static constructor.
# Category : SingleFile
dotnet_diagnostic.IL3004.severity = none

# Title    : Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.
# Category : AOT
dotnet_diagnostic.IL3050.severity = warning

# Title    : 'RequiresDynamicCodeAttribute' annotations must match across all interface implementations or overrides.
# Category : AOT
dotnet_diagnostic.IL3051.severity = warning

# Title    : The use of 'RequiresDynamicCodeAttribute' on static constructors is disallowed since is a method not callable by the user, is only called by the runtime. Placing the attribute directly on the static constructor will have no effect, instead use 'RequiresUnreferencedCodeAttribute' on the type which will handle warning and silencing from the static constructor.
# Category : AOT
dotnet_diagnostic.IL3056.severity = warning

# Title    : Use source generated logging methods for improved performance
# Category : Performance
# Help Link: https://TODO/r9a000
dotnet_diagnostic.R9A000.severity = warning

# Title    : Use the 'Microsoft.Shared.Diagnostics.Throws' class instead of explicitly throwing exception for improved performance
# Category : Performance
# Help Link: https://TODO/r9a014
dotnet_diagnostic.R9A014.severity = warning

# Title    : Use the 'Microsoft.Shared.Diagnostics.Throws' class instead of explicitly throwing exception for improved performance
# Category : Performance
# Help Link: https://TODO/r9a015
dotnet_diagnostic.R9A015.severity = warning

# Title    : Use 'System.Text.CompositeFormat' instead of 'string.Format' for improved performance
# Category : Performance
# Help Link: https://TODO/r9a018
dotnet_diagnostic.R9A018.severity = warning

# Title    : Remove unnecessary dictionary lookups
# Category : Performance
# Help Link: https://TODO/r9a019
dotnet_diagnostic.R9A019.severity = warning

# Title    : Remove unnecessary set lookups
# Category : Performance
# Help Link: https://TODO/r9a020
dotnet_diagnostic.R9A020.severity = warning

# Title    : Perform message formatting in the body of the logging method
# Category : Performance
# Help Link: https://TODO/r9a021
dotnet_diagnostic.R9A021.severity = warning

# Title    : Use 'System.TimeProvider' to make the code easier to test
# Category : Reliability
# Help Link: https://TODO/r9a022
dotnet_diagnostic.R9A022.severity = warning

# Title    : Using experimental API
# Category : Reliability
# Help Link: https://TODO/r9a029
dotnet_diagnostic.R9A029.severity = warning

# Title    : Use the character-based overloads of 'String.StartsWith' or 'String.EndsWith'
# Category : Performance
# Help Link: https://TODO/r9a030
dotnet_diagnostic.R9A030.severity = warning

# Title    : Make types declared in an executable internal
# Category : Performance
# Help Link: https://TODO/r9a031
dotnet_diagnostic.R9A031.severity = warning

# Title    : Consider using an array instead of a collection
# Category : Performance
# Help Link: https://TODO/r9a032
dotnet_diagnostic.R9A032.severity = none

# Title    : Replace uses of 'Enum.GetName' and 'Enum.ToString' for improved performance
# Category : Performance
# Help Link: https://TODO/r9a033
dotnet_diagnostic.R9A033.severity = warning

# Title    : Use 'Microsoft.Shared.Text.NumericExtensions.ToInvariantString' for improved performance
# Category : Performance
# Help Link: https://TODO/r9a036
dotnet_diagnostic.R9A036.severity = warning

# Title    : Use 'System.ValueTuple' instead of 'System.Tuple' for improved performance
# Category : Performance
# Help Link: https://TODO/r9a037
dotnet_diagnostic.R9A037.severity = warning

# Title    : Use generic collections instead of legacy collections for improved performance
# Category : Performance
# Help Link: https://TODO/r9a040
dotnet_diagnostic.R9A040.severity = warning

# Title    : Use 'System.MemoryExtensions.Split' for improved performance
# Category : Performance
# Help Link: https://TODO/r9a043
dotnet_diagnostic.R9A043.severity = warning

# Title    : Assign array of literal values to a static field for improved performance
# Category : Performance
# Help Link: https://TODO/r9a044
dotnet_diagnostic.R9A044.severity = warning

# Title    : Newly added symbols must be marked as experimental
# Category : Correctness
# Help Link: https://TODO/r9a049
dotnet_diagnostic.R9A049.severity = warning

# Title    : Experimental symbols cannot be marked as obsolete
# Category : Correctness
# Help Link: https://TODO/r9a050
dotnet_diagnostic.R9A050.severity = warning

# Title    : Published symbols cannot be marked experimental
# Category : Correctness
# Help Link: https://TODO/r9a051
dotnet_diagnostic.R9A051.severity = warning

# Title    : Published symbols cannot be deleted to maintain compatibility
# Category : Correctness
# Help Link: https://TODO/r9a052
dotnet_diagnostic.R9A052.severity = warning

# Title    : A deprecated API is not annotated with the obsolete attribute
# Category : Correctness
# Help Link: https://eng.ms/docs/experiences-devices/r9-sdk/docs/static-analysis/analyzers/r9a053
dotnet_diagnostic.R9A053.severity = warning

# Title    : A deprecated API is marked as experimental
# Category : Correctness
# Help Link: https://eng.ms/docs/experiences-devices/r9-sdk/docs/static-analysis/analyzers/r9a054
dotnet_diagnostic.R9A054.severity = warning

# Title    : Published symbols cannot be changed to maintain compatibility
# Category : Correctness
# Help Link: https://TODO/r9a055
dotnet_diagnostic.R9A055.severity = warning

# Title    : Fire-and-forget async call inside a 'using' block
# Category : Correctness
# Help Link: https://TODO/r9a056
dotnet_diagnostic.R9A056.severity = warning

# Title    : Consider removing unnecessary conditional access operator (?)
# Category : Performance
# Help Link: https://TODO/r9a058
dotnet_diagnostic.R9A058.severity = suggestion

# Title    : Consider removing unnecessary null coalescing assignment (??=)
# Category : Performance
# Help Link: https://TODO/r9a059
dotnet_diagnostic.R9A059.severity = suggestion

# Title    : Consider removing unnecessary null coalescing operator (??)
# Category : Performance
# Help Link: https://TODO/r9a060
dotnet_diagnostic.R9A060.severity = suggestion

# Title    : The async method doesn't support cancellation
# Category : Resilience
# Help Link: https://TODO/r9a061
dotnet_diagnostic.R9A061.severity = warning

# Title    : Methods and properties should be named in PascalCase
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-100
dotnet_diagnostic.S100.severity = none

# Title    : Method overrides should not change parameter defaults
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1006
dotnet_diagnostic.S1006.severity = warning

# Title    : Types should be named in PascalCase
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-101
dotnet_diagnostic.S101.severity = none

# Title    : Lines should not be too long
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-103
dotnet_diagnostic.S103.severity = none

# Title    : Files should not have too many lines of code
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-104
dotnet_diagnostic.S104.severity = none

# Title    : Destructors should not throw exceptions
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1048
# Redundant: CA1065
dotnet_diagnostic.S1048.severity = none

# Title    : Tabulation characters should not be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-105
dotnet_diagnostic.S105.severity = none

# Title    : Standard outputs should not be used directly to log anything
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-106
dotnet_diagnostic.S106.severity = none

# Title    : Collapsible "if" statements should be merged
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1066
dotnet_diagnostic.S1066.severity = none

# Title    : Expressions should not be too complex
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1067
dotnet_diagnostic.S1067.severity = none

# Title    : Methods should not have too many parameters
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-107
dotnet_diagnostic.S107.severity = none

# Title    : URIs should not be hardcoded
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1075
dotnet_diagnostic.S1075.severity = none

# Title    : Nested blocks of code should not be left empty
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-108
dotnet_diagnostic.S108.severity = none

# Title    : Magic numbers should not be used
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-109
dotnet_diagnostic.S109.severity = none

# Title    : Inheritance tree of classes should not be too deep
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-110
dotnet_diagnostic.S110.severity = none

# Title    : Fields should not have public accessibility
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1104
dotnet_diagnostic.S1104.severity = none

# Title    : A close curly brace should be located at the beginning of a line
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1109
dotnet_diagnostic.S1109.severity = none

# Title    : Redundant pairs of parentheses should be removed
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1110
dotnet_diagnostic.S1110.severity = none

# Title    : Empty statements should be removed
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1116
dotnet_diagnostic.S1116.severity = none

# Title    : Local variables should not shadow class fields
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1117
dotnet_diagnostic.S1117.severity = warning

# Title    : Utility classes should not have public constructors
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1118
dotnet_diagnostic.S1118.severity = none

# Title    : General exceptions should never be thrown
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-112
dotnet_diagnostic.S112.severity = none

# Title    : Assignments should not be made from within sub-expressions
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1121
dotnet_diagnostic.S1121.severity = warning

# Title    : "Obsolete" attributes should include explanations
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1123
dotnet_diagnostic.S1123.severity = none

# Title    : Boolean literals should not be redundant
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1125
dotnet_diagnostic.S1125.severity = none

# Title    : Unused "using" should be removed
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1128
dotnet_diagnostic.S1128.severity = none

# Title    : Files should contain an empty newline at the end
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-113
dotnet_diagnostic.S113.severity = none

# Title    : Track uses of "FIXME" tags
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1134
dotnet_diagnostic.S1134.severity = none

# Title    : Track uses of "TODO" tags
# Category : Info Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1135
dotnet_diagnostic.S1135.severity = warning

# Title    : Unused private types or members should be removed
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1144
dotnet_diagnostic.S1144.severity = none

# Title    : Useless "if(true) {...}" and "if(false){...}" blocks should be removed
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1145
dotnet_diagnostic.S1145.severity = warning

# Title    : Exit methods should not be called
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1147
dotnet_diagnostic.S1147.severity = none

# Title    : "switch case" clauses should not have too many lines of code
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1151
dotnet_diagnostic.S1151.severity = none

# Title    : "Any()" should be used to test for emptiness
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1155
dotnet_diagnostic.S1155.severity = none

# Title    : Exceptions should not be thrown in finally blocks
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1163
# Redundant: CA2219
dotnet_diagnostic.S1163.severity = none

# Title    : Empty arrays and collections should be returned instead of null
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1168
dotnet_diagnostic.S1168.severity = none

# Title    : Unused method parameters should be removed
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1172
dotnet_diagnostic.S1172.severity = none

# Title    : Overriding members should do more than simply call the same member in the base class
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1185
dotnet_diagnostic.S1185.severity = none

# Title    : Methods should not be empty
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1186
dotnet_diagnostic.S1186.severity = none

# Title    : String literals should not be duplicated
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1192
dotnet_diagnostic.S1192.severity = none

# Title    : Nested code blocks should not be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1199
dotnet_diagnostic.S1199.severity = none

# Title    : Classes should not be coupled to too many other classes (Single Responsibility Principle)
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1200
dotnet_diagnostic.S1200.severity = none

# Title    : "Equals(Object)" and "GetHashCode()" should be overridden in pairs
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1206
dotnet_diagnostic.S1206.severity = none

# Title    : Control structures should use curly braces
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-121
dotnet_diagnostic.S121.severity = none

# Title    : "Equals" and the comparison operators should be overridden when implementing "IComparable"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1210
dotnet_diagnostic.S1210.severity = none

# Title    : "GC.Collect" should not be called
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1215
dotnet_diagnostic.S1215.severity = warning

# Title    : Statements should be on separate lines
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-122
dotnet_diagnostic.S122.severity = none

# Title    : Method parameters, caught exceptions and foreach variables' initial values should not be ignored
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1226
dotnet_diagnostic.S1226.severity = warning

# Title    : break statements should not be used except for switch cases
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1227
dotnet_diagnostic.S1227.severity = none

# Title    : Floating point numbers should not be tested for equality
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1244
dotnet_diagnostic.S1244.severity = error

# Title    : Sections of code should not be commented out
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-125
dotnet_diagnostic.S125.severity = none

# Title    : "if ... else if" constructs should end with "else" clauses
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-126
dotnet_diagnostic.S126.severity = none

# Title    : A "while" loop should be used instead of a "for" loop
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1264
dotnet_diagnostic.S1264.severity = none

# Title    : "for" loop stop conditions should be invariant
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-127
dotnet_diagnostic.S127.severity = warning

# Title    : "switch" statements should have at least 3 "case" clauses
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1301
dotnet_diagnostic.S1301.severity = none

# Title    : Track uses of in-source issue suppressions
# Category : Info Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1309
# Comment  : Suppressions are frequently necessary.
dotnet_diagnostic.S1309.severity = none

# Title    : "switch/Select" statements should contain a "default/Case Else" clauses
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-131
dotnet_diagnostic.S131.severity = none

# Title    : Using hardcoded IP addresses is security-sensitive
# Category : Major Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1313
dotnet_diagnostic.S1313.severity = warning

# Title    : Control flow statements "if", "switch", "for", "foreach", "while", "do"  and "try" should not be nested too deeply
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-134
dotnet_diagnostic.S134.severity = none

# Title    : Functions should not have too many lines of code
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-138
dotnet_diagnostic.S138.severity = none

# Title    : Culture should be specified for "string" operations
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1449
dotnet_diagnostic.S1449.severity = none

# Title    : Private fields only used as local variables in methods should become local variables
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1450
dotnet_diagnostic.S1450.severity = none

# Title    : Track lack of copyright and license headers
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1451
# Redundant: IDE0073
dotnet_diagnostic.S1451.severity = none

# Title    : "switch" statements should not have too many "case" clauses
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1479
dotnet_diagnostic.S1479.severity = none

# Title    : Unused local variables should be removed
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1481
dotnet_diagnostic.S1481.severity = none

# Title    : Methods and properties should not be too complex
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1541
dotnet_diagnostic.S1541.severity = none

# Title    : Tests should not be ignored
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1607
dotnet_diagnostic.S1607.severity = none

# Title    : Strings should not be concatenated using '+' in a loop
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1643
dotnet_diagnostic.S1643.severity = none

# Title    : Variables should not be self-assigned
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1656
dotnet_diagnostic.S1656.severity = warning

# Title    : Multiple variables should not be declared on the same line
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1659
dotnet_diagnostic.S1659.severity = none

# Title    : An abstract class should have both abstract and concrete methods
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1694
dotnet_diagnostic.S1694.severity = none

# Title    : NullReferenceException should not be caught
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1696
dotnet_diagnostic.S1696.severity = warning

# Title    : Short-circuit logic should be used to prevent null pointer dereferences in conditionals
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1697
dotnet_diagnostic.S1697.severity = warning

# Title    : "==" should not be used when "Equals" is overridden
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1698
dotnet_diagnostic.S1698.severity = none

# Title    : Constructors should only call non-overridable methods
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1699
dotnet_diagnostic.S1699.severity = warning

# Title    : Loops with at most one iteration should be refactored
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1751
dotnet_diagnostic.S1751.severity = warning

# Title    : Identical expressions should not be used on both sides of a binary operator
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1764
dotnet_diagnostic.S1764.severity = warning

# Title    : "switch" statements should not be nested
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1821
dotnet_diagnostic.S1821.severity = none

# Title    : Objects should not be created to be dropped immediately without being used
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1848
dotnet_diagnostic.S1848.severity = warning

# Title    : Unused assignments should be removed
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1854
# Redundant: IDE0059
dotnet_diagnostic.S1854.severity = none

# Title    : "ToString()" calls should not be redundant
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1858
dotnet_diagnostic.S1858.severity = none

# Title    : Related "if/else if" statements should not have the same condition
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1862
dotnet_diagnostic.S1862.severity = none

# Title    : Two branches in a conditional structure should not have exactly the same implementation
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1871
dotnet_diagnostic.S1871.severity = warning

# Title    : Redundant casts should not be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1905
dotnet_diagnostic.S1905.severity = none

# Title    : Inheritance list should not be redundant
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1939
dotnet_diagnostic.S1939.severity = none

# Title    : Boolean checks should not be inverted
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1940
dotnet_diagnostic.S1940.severity = none

# Title    : Inappropriate casts should not be made
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1944
dotnet_diagnostic.S1944.severity = warning

# Title    : "for" loop increment clauses should modify the loops' counters
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-1994
dotnet_diagnostic.S1994.severity = warning

# Title    : Hashes should include an unpredictable salt
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2053
# Comment  : Analysis is too slow
dotnet_diagnostic.S2053.severity = none

# Title    : Hard-coded credentials are security-sensitive
# Category : Blocker Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2068
dotnet_diagnostic.S2068.severity = warning

# Title    : SHA-1 and Message-Digest hash algorithms should not be used in secure contexts
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2070
# Redundant: CA5350
dotnet_diagnostic.S2070.severity = none

# Title    : Formatting SQL queries is security-sensitive
# Category : Major Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2077
dotnet_diagnostic.S2077.severity = warning

# Title    : Creating cookies without the "secure" flag is security-sensitive
# Category : Minor Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2092
dotnet_diagnostic.S2092.severity = none

# Title    : Collections should not be passed as arguments to their own methods
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2114
dotnet_diagnostic.S2114.severity = warning

# Title    : A secure password should be used when connecting to a database
# Category : Blocker Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2115
dotnet_diagnostic.S2115.severity = warning

# Title    : Values should not be uselessly incremented
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2123
dotnet_diagnostic.S2123.severity = warning

# Title    : Underscores should be used to make large numbers readable
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2148
dotnet_diagnostic.S2148.severity = none

# Title    : "sealed" classes should not have "protected" members
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2156
dotnet_diagnostic.S2156.severity = none

# Title    : Short-circuit logic should be used in boolean contexts
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2178
dotnet_diagnostic.S2178.severity = warning

# Title    : Integral numbers should not be shifted by zero or more than their number of bits-1
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2183
dotnet_diagnostic.S2183.severity = none

# Title    : Results of integer division should not be assigned to floating point variables
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2184
dotnet_diagnostic.S2184.severity = none

# Title    : TestCases should contain tests
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2187
dotnet_diagnostic.S2187.severity = none

# Title    : Recursion should not be infinite
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2190
dotnet_diagnostic.S2190.severity = none

# Title    : Modulus results should not be checked for direct equality
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2197
dotnet_diagnostic.S2197.severity = warning

# Title    : Return values from functions without side effects should not be ignored
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2201
# Redundant: CA1806
dotnet_diagnostic.S2201.severity = none

# Title    : Runtime type checking should be simplified
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2219
dotnet_diagnostic.S2219.severity = none

# Title    : "Exception" should not be caught
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2221
dotnet_diagnostic.S2221.severity = none

# Title    : Locks should be released on all paths
# Category : Critical Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2222
dotnet_diagnostic.S2222.severity = warning

# Title    : Non-constant static fields should not be visible
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2223
dotnet_diagnostic.S2223.severity = none

# Title    : "ToString()" method should not return null
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2225
dotnet_diagnostic.S2225.severity = warning

# Title    : Console logging should not be used
# Category : Minor Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2228
dotnet_diagnostic.S2228.severity = none

# Title    : Parameters should be passed in the correct order
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2234
dotnet_diagnostic.S2234.severity = warning

# Title    : Using pseudorandom number generators (PRNGs) is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2245
dotnet_diagnostic.S2245.severity = warning

# Title    : A "for" loop update clause should move the counter in the right direction
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2251
dotnet_diagnostic.S2251.severity = warning

# Title    : For-loop conditions should be true at least once
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2252
dotnet_diagnostic.S2252.severity = warning

# Title    : Writing cookies is security-sensitive
# Category : Minor Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2255
dotnet_diagnostic.S2255.severity = none

# Title    : Using non-standard cryptographic algorithms is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2257
dotnet_diagnostic.S2257.severity = warning

# Title    : Null pointers should not be dereferenced
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2259
# Comment  : Redundant, covered by modern C# compiler
dotnet_diagnostic.S2259.severity = none

# Title    : Composite format strings should not lead to unexpected behavior at runtime
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2275
dotnet_diagnostic.S2275.severity = warning

# Title    : Neither DES (Data Encryption Standard) nor DESede (3DES) should be used
# Category : Blocker Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2278
dotnet_diagnostic.S2278.severity = warning

# Title    : Field-like events should not be virtual
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2290
dotnet_diagnostic.S2290.severity = warning

# Title    : Overflow checking should not be disabled for "Enumerable.Sum"
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2291
dotnet_diagnostic.S2291.severity = warning

# Title    : Trivial properties should be auto-implemented
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2292
dotnet_diagnostic.S2292.severity = none

# Title    : "nameof" should be used
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2302
dotnet_diagnostic.S2302.severity = none

# Title    : "async" and "await" should not be used as identifiers
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2306
dotnet_diagnostic.S2306.severity = none

# Title    : Methods and properties that don't access instance data should be static
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2325
dotnet_diagnostic.S2325.severity = none

# Title    : Unused type parameters should be removed
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2326
# Comment  : Valid pattern used in a number of places
dotnet_diagnostic.S2326.severity = none

# Title    : "try" statements with identical "catch" and/or "finally" blocks should be merged
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2327
dotnet_diagnostic.S2327.severity = warning

# Title    : "GetHashCode" should not reference mutable fields
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2328
dotnet_diagnostic.S2328.severity = none

# Title    : Array covariance should not be used
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2330
dotnet_diagnostic.S2330.severity = warning

# Title    : Redundant modifiers should not be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2333
dotnet_diagnostic.S2333.severity = none

# Title    : Public constant members should not be used
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2339
dotnet_diagnostic.S2339.severity = none

# Title    : Enumeration types should comply with a naming convention
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2342
dotnet_diagnostic.S2342.severity = none

# Title    : Enumeration type names should not have "Flags" or "Enum" suffixes
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2344
dotnet_diagnostic.S2344.severity = none

# Title    : Flags enumerations should explicitly initialize all their members
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2345
dotnet_diagnostic.S2345.severity = none

# Title    : Flags enumerations zero-value members should be named "None"
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2346
# Redundant: CA1008
dotnet_diagnostic.S2346.severity = none

# Title    : Fields should be private
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2357
# Redundant: CA1051
dotnet_diagnostic.S2357.severity = none

# Title    : Optional parameters should not be used
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2360
dotnet_diagnostic.S2360.severity = none

# Title    : Properties should not make collection or array copies
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2365
dotnet_diagnostic.S2365.severity = none

# Title    : Public methods should not have multidimensional array parameters
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2368
dotnet_diagnostic.S2368.severity = none

# Title    : Exceptions should not be thrown from property getters
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2372
dotnet_diagnostic.S2372.severity = none

# Title    : Write-only properties should not be used
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2376
dotnet_diagnostic.S2376.severity = none

# Title    : Mutable fields should not be "public static"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2386
dotnet_diagnostic.S2386.severity = none

# Title    : Child class fields should not shadow parent class fields
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2387
dotnet_diagnostic.S2387.severity = warning

# Title    : Types and methods should not have too many generic parameters
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2436
dotnet_diagnostic.S2436.severity = none

# Title    : Silly bit operations should not be performed
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2437
dotnet_diagnostic.S2437.severity = warning

# Title    : Whitespace and control characters in string literals should be explicit
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2479
dotnet_diagnostic.S2479.severity = none

# Title    : Generic exceptions should not be ignored
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2486
dotnet_diagnostic.S2486.severity = none

# Title    : Shared resources should not be used for locking
# Category : Critical Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2551
dotnet_diagnostic.S2551.severity = warning

# Title    : Conditionally executed code should be reachable
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2583
# Redundant: CA1508
dotnet_diagnostic.S2583.severity = none

# Title    : Boolean expressions should not be gratuitous
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2589
dotnet_diagnostic.S2589.severity = warning

# Title    : Setting loose file permissions is security-sensitive
# Category : Major Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2612
dotnet_diagnostic.S2612.severity = warning

# Title    : The length returned from a stream read should be checked
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2674
dotnet_diagnostic.S2674.severity = none

# Title    : Multiline blocks should be enclosed in curly braces
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2681
dotnet_diagnostic.S2681.severity = none

# Title    : "NaN" should not be used in comparisons
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2688
dotnet_diagnostic.S2688.severity = warning

# Title    : "IndexOf" checks should not be for positive numbers
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2692
dotnet_diagnostic.S2692.severity = warning

# Title    : Instance members should not write to "static" fields
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2696
dotnet_diagnostic.S2696.severity = warning

# Title    : Tests should include assertions
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2699
dotnet_diagnostic.S2699.severity = none

# Title    : Literal boolean values should not be used in assertions
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2701
dotnet_diagnostic.S2701.severity = none

# Title    : "catch" clauses should do more than rethrow
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2737
dotnet_diagnostic.S2737.severity = none

# Title    : Static fields should not be used in generic types
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2743
dotnet_diagnostic.S2743.severity = none

# Title    : XML parsers should not be vulnerable to XXE attacks
# Category : Blocker Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2755
dotnet_diagnostic.S2755.severity = warning

# Title    : "=+" should not be used instead of "+="
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2757
dotnet_diagnostic.S2757.severity = warning

# Title    : The ternary operator should not return the same value regardless of the condition
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2758
dotnet_diagnostic.S2758.severity = warning

# Title    : Sequential tests should not check the same condition
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2760
dotnet_diagnostic.S2760.severity = none

# Title    : Doubled prefix operators "!!" and "~~" should not be used
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2761
dotnet_diagnostic.S2761.severity = warning

# Title    : SQL keywords should be delimited by whitespace
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2857
dotnet_diagnostic.S2857.severity = warning

# Title    : "IDisposables" should be disposed
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2930
# Redundant: CA2000
dotnet_diagnostic.S2930.severity = none

# Title    : Classes with "IDisposable" members should implement "IDisposable"
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2931
# Redundant: CA1001
dotnet_diagnostic.S2931.severity = none

# Title    : Fields that are only assigned in the constructor should be "readonly"
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2933
# Redundant: IDE0044
dotnet_diagnostic.S2933.severity = none

# Title    : Property assignments should not be made for "readonly" fields not constrained to reference types
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2934
dotnet_diagnostic.S2934.severity = none

# Title    : Classes should "Dispose" of members from the classes' own "Dispose" methods
# Category : Critical Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2952
dotnet_diagnostic.S2952.severity = warning

# Title    : Methods named "Dispose" should implement "IDisposable.Dispose"
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2953
dotnet_diagnostic.S2953.severity = warning

# Title    : Generic parameters not constrained to reference types should not be compared to "null"
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2955
dotnet_diagnostic.S2955.severity = none

# Title    : "IEnumerable" LINQs should be simplified
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2971
dotnet_diagnostic.S2971.severity = none

# Title    : "Object.ReferenceEquals" should not be used for value types
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2995
dotnet_diagnostic.S2995.severity = warning

# Title    : "ThreadStatic" fields should not be initialized
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2996
dotnet_diagnostic.S2996.severity = warning

# Title    : "IDisposables" created in a "using" statement should not be returned
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-2997
dotnet_diagnostic.S2997.severity = warning

# Title    : "ThreadStatic" should not be used on non-static fields
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3005
dotnet_diagnostic.S3005.severity = warning

# Title    : Static fields should not be updated in constructors
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3010
dotnet_diagnostic.S3010.severity = warning

# Title    : Reflection should not be used to increase accessibility of classes, methods, or fields
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3011
dotnet_diagnostic.S3011.severity = warning

# Title    : Members should not be initialized to default values
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3052
dotnet_diagnostic.S3052.severity = none

# Title    : Types should not have members with visibility set higher than the type's visibility
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3059
dotnet_diagnostic.S3059.severity = none

# Title    : "is" should not be used with "this"
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3060
dotnet_diagnostic.S3060.severity = none

# Title    : "async" methods should not return "void"
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3168
# Redundant: VSTHRD100
dotnet_diagnostic.S3168.severity = none

# Title    : Multiple "OrderBy" calls should not be used
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3169
dotnet_diagnostic.S3169.severity = warning

# Title    : Delegates should not be subtracted
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3172
dotnet_diagnostic.S3172.severity = warning

# Title    : "interface" instances should not be cast to concrete types
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3215
dotnet_diagnostic.S3215.severity = none

# Title    : "ConfigureAwait(false)" should be used
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3216
dotnet_diagnostic.S3216.severity = none

# Title    : "Explicit" conversions of "foreach" loops should not be used
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3217
dotnet_diagnostic.S3217.severity = warning

# Title    : Inner class members should not shadow outer class "static" or type members
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3218
dotnet_diagnostic.S3218.severity = warning

# Title    : Method calls should not resolve ambiguously to overloads with "params"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3220
dotnet_diagnostic.S3220.severity = none

# Title    : "GC.SuppressFinalize" should not be invoked for types without destructors
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3234
dotnet_diagnostic.S3234.severity = none

# Title    : Redundant parentheses should not be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3235
dotnet_diagnostic.S3235.severity = none

# Title    : Caller information arguments should not be provided explicitly
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3236
dotnet_diagnostic.S3236.severity = none

# Title    : "value" parameters should be used
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3237
dotnet_diagnostic.S3237.severity = warning

# Title    : The simplest possible condition syntax should be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3240
dotnet_diagnostic.S3240.severity = none

# Title    : Methods should not return values that are never used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3241
dotnet_diagnostic.S3241.severity = none

# Title    : Method parameters should be declared with base types
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3242
dotnet_diagnostic.S3242.severity = none

# Title    : Anonymous delegates should not be used to unsubscribe from Events
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3244
dotnet_diagnostic.S3244.severity = warning

# Title    : Generic type parameters should be co/contravariant when possible
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3246
dotnet_diagnostic.S3246.severity = warning

# Title    : Duplicate casts should not be made
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3247
dotnet_diagnostic.S3247.severity = none

# Title    : Classes directly extending "object" should not call "base" in "GetHashCode" or "Equals"
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3249
dotnet_diagnostic.S3249.severity = warning

# Title    : Implementations should be provided for "partial" methods
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3251
dotnet_diagnostic.S3251.severity = none

# Title    : Constructor and destructor declarations should not be redundant
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3253
dotnet_diagnostic.S3253.severity = none

# Title    : Default parameter values should not be passed as arguments
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3254
dotnet_diagnostic.S3254.severity = none

# Title    : "string.IsNullOrEmpty" should be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3256
dotnet_diagnostic.S3256.severity = none

# Title    : Declarations and initializations should be as concise as possible
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3257
dotnet_diagnostic.S3257.severity = none

# Title    : Non-derived "private" classes and records should be "sealed"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3260
dotnet_diagnostic.S3260.severity = none

# Title    : Namespaces should not be empty
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3261
dotnet_diagnostic.S3261.severity = none

# Title    : "params" should be used on overrides
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3262
dotnet_diagnostic.S3262.severity = warning

# Title    : Static fields should appear in the order they must be initialized 
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3263
dotnet_diagnostic.S3263.severity = warning

# Title    : Events should be invoked
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3264
dotnet_diagnostic.S3264.severity = warning

# Title    : Non-flags enums should not be used in bitwise operations
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3265
dotnet_diagnostic.S3265.severity = warning

# Title    : Loops should be simplified with "LINQ" expressions
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3267
dotnet_diagnostic.S3267.severity = none

# Title    : Cipher Block Chaining IVs should be unpredictable
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3329
# Comment  : Analysis is too slow
dotnet_diagnostic.S3329.severity = none

# Title    : Creating cookies without the "HttpOnly" flag is security-sensitive
# Category : Minor Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3330
dotnet_diagnostic.S3330.severity = none

# Title    : Caller information parameters should come at the end of the parameter list
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3343
dotnet_diagnostic.S3343.severity = warning

# Title    : Expressions used in "Debug.Assert" should not produce side effects
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3346
dotnet_diagnostic.S3346.severity = none

# Title    : Unchanged local variables should be "const"
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3353
dotnet_diagnostic.S3353.severity = warning

# Title    : Ternary operators should not be nested
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3358
dotnet_diagnostic.S3358.severity = warning

# Title    : "this" should not be exposed from constructors
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3366
dotnet_diagnostic.S3366.severity = warning

# Title    : Attribute, EventArgs, and Exception type names should end with the type being extended
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3376
# Redundant: CA1710
dotnet_diagnostic.S3376.severity = none

# Title    : "base.Equals" should not be used to check for reference equality in "Equals" if "base" is not "object"
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3397
dotnet_diagnostic.S3397.severity = none

# Title    : Methods should not return constants
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3400
dotnet_diagnostic.S3400.severity = none

# Title    : Assertion arguments should be passed in the correct order
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3415
dotnet_diagnostic.S3415.severity = warning

# Title    : Method overloads with default parameter values should not overlap 
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3427
dotnet_diagnostic.S3427.severity = warning

# Title    : "[ExpectedException]" should not be used
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3431
dotnet_diagnostic.S3431.severity = warning

# Title    : Test method signatures should be correct
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3433
dotnet_diagnostic.S3433.severity = none

# Title    : Variables should not be checked against the values they're about to be assigned
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3440
dotnet_diagnostic.S3440.severity = none

# Title    : Redundant property names should be omitted in anonymous classes
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3441
dotnet_diagnostic.S3441.severity = none

# Title    : "abstract" classes should not have "public" constructors
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3442
dotnet_diagnostic.S3442.severity = warning

# Title    : Type should not be examined on "System.Type" instances
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3443
dotnet_diagnostic.S3443.severity = none

# Title    : Interfaces should not simply inherit from base interfaces with colliding members
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3444
dotnet_diagnostic.S3444.severity = none

# Title    : Exceptions should not be explicitly rethrown
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3445
dotnet_diagnostic.S3445.severity = none

# Title    : "[Optional]" should not be used on "ref" or "out" parameters
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3447
dotnet_diagnostic.S3447.severity = warning

# Title    : Right operands of shift operators should be integers
# Category : Critical Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3449
dotnet_diagnostic.S3449.severity = warning

# Title    : Parameters with "[DefaultParameterValue]" attributes should also be marked "[Optional]"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3450
dotnet_diagnostic.S3450.severity = none

# Title    : "[DefaultValue]" should not be used when "[DefaultParameterValue]" is meant
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3451
dotnet_diagnostic.S3451.severity = warning

# Title    : Classes should not have only "private" constructors
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3453
dotnet_diagnostic.S3453.severity = none

# Title    : "string.ToCharArray()" and "ReadOnlySpan<T>.ToArray()" should not be called redundantly
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3456
dotnet_diagnostic.S3456.severity = none

# Title    : Composite format strings should be used correctly
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3457
dotnet_diagnostic.S3457.severity = warning

# Title    : Empty "case" clauses that fall through to the "default" should be omitted
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3458
dotnet_diagnostic.S3458.severity = none

# Title    : Unassigned members should be removed
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3459
dotnet_diagnostic.S3459.severity = none

# Title    : Type inheritance should not be recursive
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3464
dotnet_diagnostic.S3464.severity = warning

# Title    : Optional parameters should be passed to "base" calls
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3466
dotnet_diagnostic.S3466.severity = warning

# Title    : Empty "default" clauses should be removed
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3532
dotnet_diagnostic.S3532.severity = none

# Title    : "ServiceContract" and "OperationContract" attributes should be used together
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3597
dotnet_diagnostic.S3597.severity = none

# Title    : One-way "OperationContract" methods should have "void" return type
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3598
dotnet_diagnostic.S3598.severity = none

# Title    : "params" should not be introduced on overrides
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3600
dotnet_diagnostic.S3600.severity = warning

# Title    : Methods with "Pure" attribute should return a value 
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3603
dotnet_diagnostic.S3603.severity = none

# Title    : Member initializer values should not be redundant
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3604
dotnet_diagnostic.S3604.severity = none

# Title    : Nullable type comparison should not be redundant
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3610
dotnet_diagnostic.S3610.severity = warning

# Title    : Jump statements should not be redundant
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3626
dotnet_diagnostic.S3626.severity = none

# Title    : Empty nullable value should not be accessed
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3655
dotnet_diagnostic.S3655.severity = warning

# Title    : Exception constructors should not throw exceptions
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3693
dotnet_diagnostic.S3693.severity = warning

# Title    : Track use of "NotImplementedException"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3717
dotnet_diagnostic.S3717.severity = none

# Title    : Cognitive Complexity of methods should not be too high
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3776
dotnet_diagnostic.S3776.severity = none

# Title    : "SafeHandle.DangerousGetHandle" should not be called
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3869
dotnet_diagnostic.S3869.severity = warning

# Title    : Exception types should be "public"
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3871
# Redundant: CA1064
dotnet_diagnostic.S3871.severity = none

# Title    : Parameter names should not duplicate the names of their methods
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3872
dotnet_diagnostic.S3872.severity = none

# Title    : "out" and "ref" parameters should not be used
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3874
dotnet_diagnostic.S3874.severity = none

# Title    : "operator==" should not be overloaded on reference types
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3875
dotnet_diagnostic.S3875.severity = warning

# Title    : Strings or integral types should be used for indexers
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3876
dotnet_diagnostic.S3876.severity = none

# Title    : Exceptions should not be thrown from unexpected methods
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3877
dotnet_diagnostic.S3877.severity = warning

# Title    : Finalizers should not be empty
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3880
dotnet_diagnostic.S3880.severity = none

# Title    : "IDisposable" should be implemented correctly
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3881
dotnet_diagnostic.S3881.severity = none

# Title    : "CoSetProxyBlanket" and "CoInitializeSecurity" should not be used
# Category : Blocker Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3884
dotnet_diagnostic.S3884.severity = warning

# Title    : "Assembly.Load" should be used
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3885
dotnet_diagnostic.S3885.severity = warning

# Title    : Mutable, non-private fields should not be "readonly"
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3887
dotnet_diagnostic.S3887.severity = warning

# Title    : Neither "Thread.Resume" nor "Thread.Suspend" should be used
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3889
dotnet_diagnostic.S3889.severity = warning

# Title    : Classes that provide "Equals(<T>)" should implement "IEquatable<T>"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3897
dotnet_diagnostic.S3897.severity = none

# Title    : Value types should implement "IEquatable<T>"
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3898
dotnet_diagnostic.S3898.severity = none

# Title    : Arguments of public methods should be validated against null
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3900
# Redundant: CA1062
dotnet_diagnostic.S3900.severity = none

# Title    : "Assembly.GetExecutingAssembly" should not be called
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3902
dotnet_diagnostic.S3902.severity = warning

# Title    : Types should be defined in named namespaces
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3903
# Comment  : Doesn't work with file-scoped namespaces, so disabling for now.
dotnet_diagnostic.S3903.severity = none

# Title    : Assemblies should have version information
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3904
dotnet_diagnostic.S3904.severity = none

# Title    : Event Handlers should have the correct signature
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3906
dotnet_diagnostic.S3906.severity = warning

# Title    : Generic event handlers should be used
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3908
dotnet_diagnostic.S3908.severity = warning

# Title    : Collections should implement the generic interface
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3909
# Redundant: CA1010
dotnet_diagnostic.S3909.severity = none

# Title    : All branches in a conditional structure should not have exactly the same implementation
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3923
dotnet_diagnostic.S3923.severity = warning

# Title    : "ISerializable" should be implemented correctly
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3925
# Comment  : TODO - is ISerializable still relevant?
dotnet_diagnostic.S3925.severity = none

# Title    : Deserialization methods should be provided for "OptionalField" members
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3926
dotnet_diagnostic.S3926.severity = warning

# Title    : Serialization event handlers should be implemented correctly
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3927
dotnet_diagnostic.S3927.severity = warning

# Title    : Parameter names used into ArgumentException constructors should match an existing one 
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3928
dotnet_diagnostic.S3928.severity = warning

# Title    : Number patterns should be regular
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3937
dotnet_diagnostic.S3937.severity = none

# Title    : Calculations should not overflow
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3949
dotnet_diagnostic.S3949.severity = suggestion

# Title    : "Generic.List" instances should not be part of public APIs
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3956
# Redundant: CA1002
dotnet_diagnostic.S3956.severity = none

# Title    : "static readonly" constants should be "const" instead
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3962
dotnet_diagnostic.S3962.severity = none

# Title    : "static" fields should be initialized inline
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3963
dotnet_diagnostic.S3963.severity = none

# Title    : Objects should not be disposed more than once
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3966
dotnet_diagnostic.S3966.severity = warning

# Title    : Multidimensional arrays should not be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3967
dotnet_diagnostic.S3967.severity = none

# Title    : "GC.SuppressFinalize" should not be called
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3971
dotnet_diagnostic.S3971.severity = warning

# Title    : Conditionals should start on new lines
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3972
dotnet_diagnostic.S3972.severity = none

# Title    : A conditionally executed single line should be denoted by indentation
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3973
dotnet_diagnostic.S3973.severity = none

# Title    : Collection sizes and array length comparisons should make sense
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3981
dotnet_diagnostic.S3981.severity = warning

# Title    : Exceptions should not be created without being thrown
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3984
dotnet_diagnostic.S3984.severity = none

# Title    : Assemblies should be marked as CLS compliant
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3990
dotnet_diagnostic.S3990.severity = none

# Title    : Assemblies should explicitly specify COM visibility
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3992
dotnet_diagnostic.S3992.severity = none

# Title    : Custom attributes should be marked with "System.AttributeUsageAttribute"
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3993
dotnet_diagnostic.S3993.severity = none

# Title    : URI Parameters should not be strings
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3994
dotnet_diagnostic.S3994.severity = none

# Title    : URI return values should not be strings
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3995
dotnet_diagnostic.S3995.severity = none

# Title    : URI properties should not be strings
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3996
dotnet_diagnostic.S3996.severity = none

# Title    : String URI overloads should call "System.Uri" overloads
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3997
dotnet_diagnostic.S3997.severity = none

# Title    : Threads should not lock on objects with weak identity
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-3998
dotnet_diagnostic.S3998.severity = warning

# Title    : Pointers to unmanaged memory should not be visible
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4000
dotnet_diagnostic.S4000.severity = warning

# Title    : Disposable types should declare finalizers
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4002
dotnet_diagnostic.S4002.severity = warning

# Title    : Collection properties should be readonly
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4004
# Redundant: CA2227
dotnet_diagnostic.S4004.severity = none

# Title    : "System.Uri" arguments should be used instead of strings
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4005
dotnet_diagnostic.S4005.severity = none

# Title    : Inherited member visibility should not be decreased
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4015
dotnet_diagnostic.S4015.severity = warning

# Title    : Enumeration members should not be named "Reserved"
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4016
dotnet_diagnostic.S4016.severity = warning

# Title    : Method signatures should not contain nested generic types
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4017
dotnet_diagnostic.S4017.severity = none

# Title    : All type parameters should be used in the parameter list to enable type inference
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4018
dotnet_diagnostic.S4018.severity = none

# Title    : Base class methods should not be hidden
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4019
dotnet_diagnostic.S4019.severity = warning

# Title    : Enumerations should have "Int32" storage
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4022
dotnet_diagnostic.S4022.severity = none

# Title    : Interfaces should not be empty
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4023
dotnet_diagnostic.S4023.severity = none

# Title    : Child class fields should not differ from parent class fields only by capitalization
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4025
dotnet_diagnostic.S4025.severity = warning

# Title    : Assemblies should be marked with "NeutralResourcesLanguageAttribute"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4026
dotnet_diagnostic.S4026.severity = none

# Title    : Exceptions should provide standard constructors
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4027
dotnet_diagnostic.S4027.severity = none

# Title    : Classes implementing "IEquatable<T>" should be sealed
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4035
dotnet_diagnostic.S4035.severity = none

# Title    : Searching OS commands in PATH is security-sensitive
# Category : Minor Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4036
dotnet_diagnostic.S4036.severity = none

# Title    : Interface methods should be callable by derived types
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4039
dotnet_diagnostic.S4039.severity = warning

# Title    : Strings should be normalized to uppercase
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4040
dotnet_diagnostic.S4040.severity = none

# Title    : Type names should not match namespaces
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4041
dotnet_diagnostic.S4041.severity = none

# Title    : Generics should be used when appropriate
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4047
dotnet_diagnostic.S4047.severity = none

# Title    : Properties should be preferred
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4049
dotnet_diagnostic.S4049.severity = none

# Title    : Operators should be overloaded consistently
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4050
dotnet_diagnostic.S4050.severity = warning

# Title    : Types should not extend outdated base types
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4052
dotnet_diagnostic.S4052.severity = none

# Title    : Literals should not be passed as localized parameters
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4055
dotnet_diagnostic.S4055.severity = none

# Title    : Overloads with a "CultureInfo" or an "IFormatProvider" parameter should be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4056
dotnet_diagnostic.S4056.severity = none

# Title    : Locales should be set for data types
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4057
dotnet_diagnostic.S4057.severity = warning

# Title    : Overloads with a "StringComparison" parameter should be used
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4058
dotnet_diagnostic.S4058.severity = none

# Title    : Property names should not match get methods
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4059
dotnet_diagnostic.S4059.severity = warning

# Title    : Non-abstract attributes should be sealed
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4060
dotnet_diagnostic.S4060.severity = none

# Title    : "params" should be used instead of "varargs"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4061
dotnet_diagnostic.S4061.severity = none

# Title    : Operator overloads should have named alternatives
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4069
dotnet_diagnostic.S4069.severity = none

# Title    : Non-flags enums should not be marked with "FlagsAttribute"
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4070
# Redundant: CA2217
dotnet_diagnostic.S4070.severity = none

# Title    : Method overloads should be grouped together
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4136
dotnet_diagnostic.S4136.severity = none

# Title    : Duplicate values should not be passed as arguments
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4142
dotnet_diagnostic.S4142.severity = warning

# Title    : Collection elements should not be replaced unconditionally
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4143
dotnet_diagnostic.S4143.severity = warning

# Title    : Methods should not have identical implementations
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4144
dotnet_diagnostic.S4144.severity = none

# Title    : Empty collections should not be accessed or iterated
# Category : Minor Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4158
dotnet_diagnostic.S4158.severity = none

# Title    : Classes should implement their "ExportAttribute" interfaces
# Category : Blocker Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4159
dotnet_diagnostic.S4159.severity = warning

# Title    : Native methods should be wrapped
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4200
dotnet_diagnostic.S4200.severity = warning

# Title    : Null checks should not be used with "is"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4201
dotnet_diagnostic.S4201.severity = none

# Title    : Windows Forms entry points should be marked with STAThread
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4210
dotnet_diagnostic.S4210.severity = warning

# Title    : Members should not have conflicting transparency annotations
# Category : Major Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4211
dotnet_diagnostic.S4211.severity = warning

# Title    : Serialization constructors should be secured
# Category : Major Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4212
dotnet_diagnostic.S4212.severity = warning

# Title    : "P/Invoke" methods should not be visible
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4214
dotnet_diagnostic.S4214.severity = warning

# Title    : Events should have proper arguments
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4220
dotnet_diagnostic.S4220.severity = warning

# Title    : Extension methods should not extend "object"
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4225
dotnet_diagnostic.S4225.severity = none

# Title    : Extensions should be in separate namespaces
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4226
dotnet_diagnostic.S4226.severity = none

# Title    : "ConstructorArgument" parameters should exist in constructors
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4260
dotnet_diagnostic.S4260.severity = warning

# Title    : Methods should be named according to their synchronicities
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4261
dotnet_diagnostic.S4261.severity = none

# Title    : Getters and setters should access the expected fields
# Category : Critical Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4275
dotnet_diagnostic.S4275.severity = warning

# Title    : "Shared" parts should not be created with "new"
# Category : Critical Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4277
dotnet_diagnostic.S4277.severity = warning

# Title    : Weak SSL/TLS protocols should not be used
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4423
dotnet_diagnostic.S4423.severity = warning

# Title    : Cryptographic keys should be robust
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4426
dotnet_diagnostic.S4426.severity = warning

# Title    : "PartCreationPolicyAttribute" should be used with "ExportAttribute"
# Category : Major Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4428
dotnet_diagnostic.S4428.severity = warning

# Title    : AES encryption algorithm should be used with secured mode
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4432
dotnet_diagnostic.S4432.severity = warning

# Title    : LDAP connections should be authenticated
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4433
dotnet_diagnostic.S4433.severity = warning

# Title    : Parameter validation in yielding methods should be wrapped
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4456
dotnet_diagnostic.S4456.severity = warning

# Title    : Parameter validation in "async"/"await" methods should be wrapped
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4457
dotnet_diagnostic.S4457.severity = warning

# Title    : Calls to "async" methods should not be blocking
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4462
# Redundant: VSTHRD002
dotnet_diagnostic.S4462.severity = none

# Title    : Unread "private" fields should be removed
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4487
# Redundant: IDE0052
dotnet_diagnostic.S4487.severity = none

# Title    : Disabling CSRF protections is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4502
dotnet_diagnostic.S4502.severity = warning

# Title    : Delivering code in production with debug features activated is security-sensitive
# Category : Minor Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4507
dotnet_diagnostic.S4507.severity = none

# Title    : "default" clauses should be first or last
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4524
dotnet_diagnostic.S4524.severity = warning

# Title    : ASP.NET HTTP request validation feature should not be disabled
# Category : Major Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4564
dotnet_diagnostic.S4564.severity = warning

# Title    : "new Guid()" should not be used
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4581
dotnet_diagnostic.S4581.severity = none

# Title    : Calls to delegate's method "BeginInvoke" should be paired with calls to "EndInvoke"
# Category : Critical Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4583
dotnet_diagnostic.S4583.severity = warning

# Title    : Non-async "Task/Task<T>" methods should not return null
# Category : Critical Bug
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4586
dotnet_diagnostic.S4586.severity = warning

# Title    : String offset-based methods should be preferred for finding substrings from offsets
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4635
dotnet_diagnostic.S4635.severity = warning

# Title    : Using regular expressions is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4784
dotnet_diagnostic.S4784.severity = none

# Title    : Encrypting data is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4787
dotnet_diagnostic.S4787.severity = none

# Title    : Using weak hashing algorithms is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4790
dotnet_diagnostic.S4790.severity = warning

# Title    : Configuring loggers is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4792
dotnet_diagnostic.S4792.severity = none

# Title    : Using Sockets is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4818
dotnet_diagnostic.S4818.severity = warning

# Title    : Using command line arguments is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4823
dotnet_diagnostic.S4823.severity = none

# Title    : Reading the Standard Input is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4829
dotnet_diagnostic.S4829.severity = none

# Title    : Server certificates should be verified during SSL/TLS connections
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4830
# Redundant: CA5359
dotnet_diagnostic.S4830.severity = none

# Title    : Controlling permissions is security-sensitive
# Category : Minor Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-4834
dotnet_diagnostic.S4834.severity = none

# Title    : "ValueTask" should be consumed correctly
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5034
dotnet_diagnostic.S5034.severity = warning

# Title    : Expanding archive files without controlling resource consumption is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5042
dotnet_diagnostic.S5042.severity = warning

# Title    : Having a permissive Cross-Origin Resource Sharing policy is security-sensitive
# Category : Minor Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5122
dotnet_diagnostic.S5122.severity = none

# Title    : Using clear-text protocols is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5332
dotnet_diagnostic.S5332.severity = warning

# Title    : Using publicly writable directories is security-sensitive
# Category : Critical Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5443
dotnet_diagnostic.S5443.severity = none

# Title    : Insecure temporary file creation methods should not be used
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5445
dotnet_diagnostic.S5445.severity = none

# Title    : Encryption algorithms should be used with secure mode and padding scheme
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5542
dotnet_diagnostic.S5542.severity = warning

# Title    : Cipher algorithms should be robust
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5547
dotnet_diagnostic.S5547.severity = warning

# Title    : JWT should be signed and verified with strong cipher algorithms
# Category : Critical Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5659
dotnet_diagnostic.S5659.severity = warning

# Title    : Allowing requests with excessive content length is security-sensitive
# Category : Major Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5693
dotnet_diagnostic.S5693.severity = warning

# Title    : Disabling ASP.NET "Request Validation" feature is security-sensitive
# Category : Major Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5753
dotnet_diagnostic.S5753.severity = warning

# Title    : Deserializing objects without performing data validation is security-sensitive
# Category : Major Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5766
dotnet_diagnostic.S5766.severity = warning

# Title    : Types allowed to be deserialized should be restricted
# Category : Major Vulnerability
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-5773
dotnet_diagnostic.S5773.severity = none

# Title    : Use a testable date/time provider
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-6354
# Redundant: R9A022
dotnet_diagnostic.S6354.severity = none

# Title    : Azure Functions should be stateless
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-6419
dotnet_diagnostic.S6419.severity = none

# Title    : Client instances should not be recreated on each Azure Function invocation
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-6420
dotnet_diagnostic.S6420.severity = none

# Title    : Azure Functions should use Structured Error Handling
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-6421
dotnet_diagnostic.S6421.severity = none

# Title    : Calls to "async" methods should not be blocking in Azure Functions
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-6422
dotnet_diagnostic.S6422.severity = none

# Title    : Azure Functions should log all failures
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-6423
dotnet_diagnostic.S6423.severity = none

# Title    : Interfaces for durable entities should satisfy the restrictions
# Category : Blocker Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-6424
dotnet_diagnostic.S6424.severity = none

# Title    : Not specifying a timeout for regular expressions is security-sensitive
# Category : Major Security Hotspot
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-6444
dotnet_diagnostic.S6444.severity = warning

# Title    : Literal suffixes should be upper case
# Category : Minor Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-818
dotnet_diagnostic.S818.severity = none

# Title    : Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-881
dotnet_diagnostic.S881.severity = suggestion

# Title    : "goto" statement should not be used
# Category : Major Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-907
dotnet_diagnostic.S907.severity = warning

# Title    : Parameter names should match base declaration and other partial definitions
# Category : Critical Code Smell
# Help Link: https://rules.sonarsource.com/csharp/RSPEC-927
# Redundant: CA1725
dotnet_diagnostic.S927.severity = none

# Title    : Copy-paste token calculator
# Category : 
dotnet_diagnostic.S9999-cpd.severity = warning

# Title    : Log generator
# Category : 
dotnet_diagnostic.S9999-log.severity = none

# Title    : File metadata generator
# Category : 
dotnet_diagnostic.S9999-metadata.severity = warning

# Title    : Metrics calculator
# Category : 
dotnet_diagnostic.S9999-metrics.severity = warning

# Title    : Symbol reference calculator
# Category : 
dotnet_diagnostic.S9999-symbolRef.severity = warning

# Title    : Token type calculator
# Category : 
dotnet_diagnostic.S9999-token-type.severity = warning

# Title    : Avoid legacy thread switching APIs
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD001.md
dotnet_diagnostic.VSTHRD001.severity = warning

# Title    : Avoid problematic synchronous waits
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD002.md
dotnet_diagnostic.VSTHRD002.severity = warning

# Title    : Avoid awaiting foreign Tasks
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD003.md
dotnet_diagnostic.VSTHRD003.severity = warning

# Title    : Await SwitchToMainThreadAsync
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD004.md
dotnet_diagnostic.VSTHRD004.severity = error

# Title    : Invoke single-threaded types on Main thread
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD010.md
dotnet_diagnostic.VSTHRD010.severity = warning

# Title    : Use AsyncLazy<T>
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD011.md
dotnet_diagnostic.VSTHRD011.severity = error

# Title    : Provide JoinableTaskFactory where allowed
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD012.md
dotnet_diagnostic.VSTHRD012.severity = none

# Title    : Avoid async void methods
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD100.md
dotnet_diagnostic.VSTHRD100.severity = none

# Title    : Avoid unsupported async delegates
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD101.md
dotnet_diagnostic.VSTHRD101.severity = error

# Title    : Implement internal logic asynchronously
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD102.md
dotnet_diagnostic.VSTHRD102.severity = none

# Title    : Call async methods when in an async method
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD103.md
dotnet_diagnostic.VSTHRD103.severity = warning

# Title    : Offer async methods
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD104.md
dotnet_diagnostic.VSTHRD104.severity = none

# Title    : Avoid method overloads that assume TaskScheduler.Current
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD105.md
dotnet_diagnostic.VSTHRD105.severity = warning

# Title    : Use InvokeAsync to raise async events
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD106.md
dotnet_diagnostic.VSTHRD106.severity = warning

# Title    : Await Task within using expression
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD107.md
dotnet_diagnostic.VSTHRD107.severity = error

# Title    : Assert thread affinity unconditionally
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD108.md
dotnet_diagnostic.VSTHRD108.severity = warning

# Title    : Switch instead of assert in async methods
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD109.md
dotnet_diagnostic.VSTHRD109.severity = error

# Title    : Observe result of async calls
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD110.md
# Redundant: CS4014, IDE0058
dotnet_diagnostic.VSTHRD110.severity = none

# Title    : Use ConfigureAwait(bool)
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD111.md
dotnet_diagnostic.VSTHRD111.severity = none

# Title    : Implement System.IAsyncDisposable
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD112.md
dotnet_diagnostic.VSTHRD112.severity = none

# Title    : Check for System.IAsyncDisposable
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD113.md
dotnet_diagnostic.VSTHRD113.severity = none

# Title    : Avoid returning a null Task
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD114.md
dotnet_diagnostic.VSTHRD114.severity = warning

# Title    : Avoid returning a null Task
# Category : Usage
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD114.md
dotnet_diagnostic.VSTHRD114.severity = error

# Title    : Use "Async" suffix for async methods
# Category : Style
# Help Link: https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD200.md
dotnet_diagnostic.VSTHRD200.severity = none

