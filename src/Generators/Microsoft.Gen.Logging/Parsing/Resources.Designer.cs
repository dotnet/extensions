//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Gen.Logging {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Gen.Logging.Parsing.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &quot;{0}&quot; is not referenced from the logging message.
        /// </summary>
        internal static string ArgumentHasNoCorrespondingTemplateMessage {
            get {
                return ResourceManager.GetString("ArgumentHasNoCorrespondingTemplateMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter isn&apos;t referenced from the logging message.
        /// </summary>
        internal static string ArgumentHasNoCorrespondingTemplateTitle {
            get {
                return ResourceManager.GetString("ArgumentHasNoCorrespondingTemplateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method &quot;{0}&quot; doesn&apos;t have anything to be logged.
        /// </summary>
        internal static string EmptyLoggingMethodMessage {
            get {
                return ResourceManager.GetString("EmptyLoggingMethodMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method doesn&apos;t log anything.
        /// </summary>
        internal static string EmptyLoggingMethodTitle {
            get {
                return ResourceManager.GetString("EmptyLoggingMethodTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method names can&apos;t start with _.
        /// </summary>
        internal static string InvalidLoggingMethodNameMessage {
            get {
                return ResourceManager.GetString("InvalidLoggingMethodNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method names can&apos;t start with an underscore.
        /// </summary>
        internal static string InvalidLoggingMethodNameTitle {
            get {
                return ResourceManager.GetString("InvalidLoggingMethodNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameter names cannot start with _.
        /// </summary>
        internal static string InvalidLoggingMethodParameterNameMessage {
            get {
                return ResourceManager.GetString("InvalidLoggingMethodParameterNameMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameter names can&apos;t start with an underscore.
        /// </summary>
        internal static string InvalidLoggingMethodParameterNameTitle {
            get {
                return ResourceManager.GetString("InvalidLoggingMethodParameterNameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t log properties of parameters of type &quot;{0}&quot;.
        /// </summary>
        internal static string InvalidTypeToLogPropertiesMessage {
            get {
                return ResourceManager.GetString("InvalidTypeToLogPropertiesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t log properties of a logging parameter.
        /// </summary>
        internal static string InvalidTypeToLogPropertiesTitle {
            get {
                return ResourceManager.GetString("InvalidTypeToLogPropertiesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods can&apos;t have a body.
        /// </summary>
        internal static string LoggingMethodHasBodyMessage {
            get {
                return ResourceManager.GetString("LoggingMethodHasBodyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods can&apos;t have a body.
        /// </summary>
        internal static string LoggingMethodHasBodyTitle {
            get {
                return ResourceManager.GetString("LoggingMethodHasBodyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods can&apos;t be generic.
        /// </summary>
        internal static string LoggingMethodIsGenericMessage {
            get {
                return ResourceManager.GetString("LoggingMethodIsGenericMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods can&apos;t be generic.
        /// </summary>
        internal static string LoggingMethodIsGenericTitle {
            get {
                return ResourceManager.GetString("LoggingMethodIsGenericTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must be partial.
        /// </summary>
        internal static string LoggingMethodMustBePartialMessage {
            get {
                return ResourceManager.GetString("LoggingMethodMustBePartialMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must be partial.
        /// </summary>
        internal static string LoggingMethodMustBePartialTitle {
            get {
                return ResourceManager.GetString("LoggingMethodMustBePartialTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must return void.
        /// </summary>
        internal static string LoggingMethodMustReturnVoidMessage {
            get {
                return ResourceManager.GetString("LoggingMethodMustReturnVoidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must return void.
        /// </summary>
        internal static string LoggingMethodMustReturnVoidTitle {
            get {
                return ResourceManager.GetString("LoggingMethodMustReturnVoidTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method &quot;{0}&quot; has parameter &quot;{1}&quot; with either &quot;ref&quot; or &quot;out&quot; modifier.
        /// </summary>
        internal static string LoggingMethodParameterRefKindMessage {
            get {
                return ResourceManager.GetString("LoggingMethodParameterRefKindMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameters can&apos;t have &quot;ref&quot; or &quot;out&quot; modifiers.
        /// </summary>
        internal static string LoggingMethodParameterRefKindTitle {
            get {
                return ResourceManager.GetString("LoggingMethodParameterRefKindTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must be static.
        /// </summary>
        internal static string LoggingMethodShouldBeStaticMessage {
            get {
                return ResourceManager.GetString("LoggingMethodShouldBeStaticMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging methods must be static.
        /// </summary>
        internal static string LoggingMethodShouldBeStaticTitle {
            get {
                return ResourceManager.GetString("LoggingMethodShouldBeStaticTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &quot;{0}&quot; annotated for properties logging within logging method &quot;{3}&quot; has type with a cycle in its hierarchy: {1} ⇆ {2}.
        /// </summary>
        internal static string LogPropertiesCycleDetectedMessage {
            get {
                return ResourceManager.GetString("LogPropertiesCycleDetectedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameter type has cycles in its type hierarchy.
        /// </summary>
        internal static string LogPropertiesCycleDetectedTitle {
            get {
                return ResourceManager.GetString("LogPropertiesCycleDetectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &quot;{0}&quot; of logging method &quot;{1}&quot; has a property &quot;{2}&quot; within its type that hides another property from its base type.
        /// </summary>
        internal static string LogPropertiesHiddenPropertyDetectedMessage {
            get {
                return ResourceManager.GetString("LogPropertiesHiddenPropertyDetectedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameter&apos;s type has a hidden property.
        /// </summary>
        internal static string LogPropertiesHiddenPropertyDetectedTitle {
            get {
                return ResourceManager.GetString("LogPropertiesHiddenPropertyDetectedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &quot;{0}&quot; is annotated for property logging but it has special semantics (ILogger, LogLevel, Exception, etc.).
        /// </summary>
        internal static string LogPropertiesInvalidUsageMessage {
            get {
                return ResourceManager.GetString("LogPropertiesInvalidUsageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method parameter can&apos;t be used for properties logging.
        /// </summary>
        internal static string LogPropertiesInvalidUsageTitle {
            get {
                return ResourceManager.GetString("LogPropertiesInvalidUsageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &quot;{0}&quot; causes name conflict with name &quot;{1}&quot; within logging method &quot;{2}&quot;.
        /// </summary>
        internal static string LogPropertiesNameCollisionMessage {
            get {
                return ResourceManager.GetString("LogPropertiesNameCollisionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A logging method parameter causes name conflicts.
        /// </summary>
        internal static string LogPropertiesNameCollisionTitle {
            get {
                return ResourceManager.GetString("LogPropertiesNameCollisionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &quot;{0}&quot; used with parameter &quot;{1}&quot; doesn&apos;t have any public properties to log.
        /// </summary>
        internal static string LogPropertiesParameterSkippedMessage {
            get {
                return ResourceManager.GetString("LogPropertiesParameterSkippedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameter type has no public properties to log.
        /// </summary>
        internal static string LogPropertiesParameterSkippedTitle {
            get {
                return ResourceManager.GetString("LogPropertiesParameterSkippedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property provider method &quot;{0}&quot; in type &quot;{1}&quot; is not accessible, increase its visibility.
        /// </summary>
        internal static string LogPropertiesProviderMethodInaccessibleMessage {
            get {
                return ResourceManager.GetString("LogPropertiesProviderMethodInaccessibleMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property provider method is inaccessible.
        /// </summary>
        internal static string LogPropertiesProviderMethodInaccessibleTitle {
            get {
                return ResourceManager.GetString("LogPropertiesProviderMethodInaccessibleTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property provider method &quot;{0}&quot; in type &quot;{1}&quot; doesn&apos;t have a signature compatible with &quot;{2}&quot;.
        /// </summary>
        internal static string LogPropertiesProviderMethodInvalidSignatureMessage {
            get {
                return ResourceManager.GetString("LogPropertiesProviderMethodInvalidSignatureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property provider method has an invalid signature.
        /// </summary>
        internal static string LogPropertiesProviderMethodInvalidSignatureTitle {
            get {
                return ResourceManager.GetString("LogPropertiesProviderMethodInvalidSignatureTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find property provider method &quot;{0}&quot; in type &quot;{1}&quot;.
        /// </summary>
        internal static string LogPropertiesProviderMethodNotFoundMessage {
            get {
                return ResourceManager.GetString("LogPropertiesProviderMethodNotFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property provider method not found.
        /// </summary>
        internal static string LogPropertiesProviderMethodNotFoundTitle {
            get {
                return ResourceManager.GetString("LogPropertiesProviderMethodNotFoundTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &quot;{0}&quot; has a custom property provider and hence will not be redacted.
        /// </summary>
        internal static string LogPropertiesProviderWithRedactionMessage {
            get {
                return ResourceManager.GetString("LogPropertiesProviderWithRedactionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters with a custom property provider are not subject to redaciton.
        /// </summary>
        internal static string LogPropertiesProviderWithRedactionTitle {
            get {
                return ResourceManager.GetString("LogPropertiesProviderWithRedactionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more parameters of the logging method &quot;{0}&quot; must be annotated with a data classification attribute.
        /// </summary>
        internal static string MissingDataClassificationArgumentMessage {
            get {
                return ResourceManager.GetString("MissingDataClassificationArgumentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method parameters must be annotated with a data classification attribute.
        /// </summary>
        internal static string MissingDataClassificationArgumentTitle {
            get {
                return ResourceManager.GetString("MissingDataClassificationArgumentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the parameters to a static logging method must implement the &quot;Microsoft.Extensions.Logging.ILogger&quot; interface.
        /// </summary>
        internal static string MissingLoggerArgumentMessage {
            get {
                return ResourceManager.GetString("MissingLoggerArgumentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A static logging method must have a parameter that implements the &quot;Microsoft.Extensions.Logging.ILogger&quot; interface.
        /// </summary>
        internal static string MissingLoggerArgumentTitle {
            get {
                return ResourceManager.GetString("MissingLoggerArgumentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a field of type &quot;Microsoft.Extensions.Logging.ILogger&quot; in type &quot;{0}&quot;.
        /// </summary>
        internal static string MissingLoggerFieldMessage {
            get {
                return ResourceManager.GetString("MissingLoggerFieldMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a field of type &quot;Microsoft.Extensions.Logging.ILogger&quot;.
        /// </summary>
        internal static string MissingLoggerFieldTitle {
            get {
                return ResourceManager.GetString("MissingLoggerFieldTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &quot;LogLevel&quot; value must be supplied in the &quot;LoggerMethod&quot; attribute or as a parameter to the logging method.
        /// </summary>
        internal static string MissingLogLevelMessage {
            get {
                return ResourceManager.GetString("MissingLogLevelMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A &quot;LogLevel&quot; value must be supplied.
        /// </summary>
        internal static string MissingLogLevelTitle {
            get {
                return ResourceManager.GetString("MissingLogLevelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the parameters to a logging method that performs redaction must implement the Microsoft.Extensions.Redaction.IRedactorProvider interface.
        /// </summary>
        internal static string MissingRedactorProviderArgumentMessage {
            get {
                return ResourceManager.GetString("MissingRedactorProviderArgumentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter to a logging method must implement the &quot;IRedactorProvider&quot; interface.
        /// </summary>
        internal static string MissingRedactorProviderArgumentTitle {
            get {
                return ResourceManager.GetString("MissingRedactorProviderArgumentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a field of type &quot;Microsoft.Extensions.Redaction.IRedactorProvider&quot; in type &quot;{0}&quot;.
        /// </summary>
        internal static string MissingRedactorProviderFieldMessage {
            get {
                return ResourceManager.GetString("MissingRedactorProviderFieldMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a field of type &quot;Microsoft.Extensions.Redaction.IRedactorProvider&quot;.
        /// </summary>
        internal static string MissingRedactorProviderFieldTitle {
            get {
                return ResourceManager.GetString("MissingRedactorProviderFieldTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a definition for required type &quot;{0}&quot;.
        /// </summary>
        internal static string MissingRequiredTypeMessage {
            get {
                return ResourceManager.GetString("MissingRequiredTypeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find a required type definition.
        /// </summary>
        internal static string MissingRequiredTypeTitle {
            get {
                return ResourceManager.GetString("MissingRequiredTypeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t have multiple data classification attributes for a single data value.
        /// </summary>
        internal static string MultipleDataClassificationAttributesMessage {
            get {
                return ResourceManager.GetString("MultipleDataClassificationAttributesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t have multiple data classification attributes for a single data value.
        /// </summary>
        internal static string MultipleDataClassificationAttributesTitle {
            get {
                return ResourceManager.GetString("MultipleDataClassificationAttributesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found multiple fields of type &quot;Microsoft.Extensions.Logging.ILogger&quot; in type &quot;{0}&quot;.
        /// </summary>
        internal static string MultipleLoggerFieldsMessage {
            get {
                return ResourceManager.GetString("MultipleLoggerFieldsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple fields of type &quot;Microsoft.Extensions.Logging.ILogger&quot; were found.
        /// </summary>
        internal static string MultipleLoggerFieldsTitle {
            get {
                return ResourceManager.GetString("MultipleLoggerFieldsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found multiple fields of type &quot;Microsoft.Extensions.Redaction.IRedactorProvider&quot; in type &quot;{0}&quot;.
        /// </summary>
        internal static string MultipleRedactorProviderFieldsMessage {
            get {
                return ResourceManager.GetString("MultipleRedactorProviderFieldsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple fields of type &quot;Microsoft.Extensions.Redaction.IRedactorProvider&quot; were found.
        /// </summary>
        internal static string MultipleRedactorProviderFieldsTitle {
            get {
                return ResourceManager.GetString("MultipleRedactorProviderFieldsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove redundant qualifier (Info:, Warning:, Error:, etc) from the logging message since it is implicit in the specified log level..
        /// </summary>
        internal static string RedundantQualifierInMessageMessage {
            get {
                return ResourceManager.GetString("RedundantQualifierInMessageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redundant qualifier in the logging message.
        /// </summary>
        internal static string RedundantQualifierInMessageTitle {
            get {
                return ResourceManager.GetString("RedundantQualifierInMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include a template for parameter &quot;{0}&quot; in the logging message, exceptions are automatically delivered without being listed in the logging message.
        /// </summary>
        internal static string ShouldntMentionExceptionInMessageMessage {
            get {
                return ResourceManager.GetString("ShouldntMentionExceptionInMessageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include exception parameters as templates in the logging message.
        /// </summary>
        internal static string ShouldntMentionExceptionInMessageTitle {
            get {
                return ResourceManager.GetString("ShouldntMentionExceptionInMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include a template for &quot;{0}&quot; in the logging message.
        /// </summary>
        internal static string ShouldntMentionLoggerInMessageMessage {
            get {
                return ResourceManager.GetString("ShouldntMentionLoggerInMessageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include logger parameters as templates.
        /// </summary>
        internal static string ShouldntMentionLoggerInMessageTitle {
            get {
                return ResourceManager.GetString("ShouldntMentionLoggerInMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include a template for parameter &quot;{0}&quot; in the logging message.
        /// </summary>
        internal static string ShouldntMentionLogLevelInMessageMessage {
            get {
                return ResourceManager.GetString("ShouldntMentionLogLevelInMessageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t include log level parameters as templates.
        /// </summary>
        internal static string ShouldntMentionLogLevelInMessageTitle {
            get {
                return ResourceManager.GetString("ShouldntMentionLogLevelInMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple logging methods are using event id &quot;{0}&quot; in type &quot;{1}&quot;.
        /// </summary>
        internal static string ShouldntReuseEventIdsMessage {
            get {
                return ResourceManager.GetString("ShouldntReuseEventIdsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each logging method should use a unique event id.
        /// </summary>
        internal static string ShouldntReuseEventIdsTitle {
            get {
                return ResourceManager.GetString("ShouldntReuseEventIdsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple logging methods are using event name &quot;{0}&quot; in type &quot;{1}&quot;.
        /// </summary>
        internal static string ShouldntReuseEventNamesMessage {
            get {
                return ResourceManager.GetString("ShouldntReuseEventNamesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple logging methods shouldn&apos;t use the same event name.
        /// </summary>
        internal static string ShouldntReuseEventNamesTitle {
            get {
                return ResourceManager.GetString("ShouldntReuseEventNamesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template &quot;{0}&quot; is not provided as parameter to the logging method.
        /// </summary>
        internal static string TemplateHasNoCorrespondingArgumentMessage {
            get {
                return ResourceManager.GetString("TemplateHasNoCorrespondingArgumentMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logging template has no corresponding method parameter.
        /// </summary>
        internal static string TemplateHasNoCorrespondingArgumentTitle {
            get {
                return ResourceManager.GetString("TemplateHasNoCorrespondingArgumentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging method &quot;{0}&quot; has template(s) that start with &quot;@&quot;: {1}.
        /// </summary>
        internal static string TemplateStartsWithAtSymbolMessage {
            get {
                return ResourceManager.GetString("TemplateStartsWithAtSymbolMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A logging message template starts with &quot;@&quot;.
        /// </summary>
        internal static string TemplateStartsWithAtSymbolTitle {
            get {
                return ResourceManager.GetString("TemplateStartsWithAtSymbolTitle", resourceCulture);
            }
        }
    }
}
