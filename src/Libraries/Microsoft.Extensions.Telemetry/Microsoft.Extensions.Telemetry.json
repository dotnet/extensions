{
  "Name": "Microsoft.Extensions.Telemetry, Version=9.7.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "static class Microsoft.Extensions.DependencyInjection.ApplicationEnricherServiceCollectionExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.ApplicationEnricherServiceCollectionExtensions.AddServiceLogEnricher(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.ApplicationEnricherServiceCollectionExtensions.AddServiceLogEnricher(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.Extensions.Diagnostics.Enrichment.ApplicationLogEnricherOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.ApplicationEnricherServiceCollectionExtensions.AddServiceLogEnricher(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Diagnostics.Enrichment.ApplicationEnricherTags",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "const string Microsoft.Extensions.Diagnostics.Enrichment.ApplicationEnricherTags.ApplicationName",
          "Stage": "Stable",
          "Value": "service.name"
        },
        {
          "Member": "const string Microsoft.Extensions.Diagnostics.Enrichment.ApplicationEnricherTags.BuildVersion",
          "Stage": "Stable",
          "Value": "service.version"
        },
        {
          "Member": "const string Microsoft.Extensions.Diagnostics.Enrichment.ApplicationEnricherTags.DeploymentRing",
          "Stage": "Stable",
          "Value": "DeploymentRing"
        },
        {
          "Member": "const string Microsoft.Extensions.Diagnostics.Enrichment.ApplicationEnricherTags.EnvironmentName",
          "Stage": "Stable",
          "Value": "deployment.environment"
        }
      ],
      "Properties": [
        {
          "Member": "static System.Collections.Generic.IReadOnlyList<string> Microsoft.Extensions.Diagnostics.Enrichment.ApplicationEnricherTags.DimensionNames { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Diagnostics.Enrichment.ApplicationLogEnricherOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Diagnostics.Enrichment.ApplicationLogEnricherOptions.ApplicationLogEnricherOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Enrichment.ApplicationLogEnricherOptions.ApplicationName { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Enrichment.ApplicationLogEnricherOptions.BuildVersion { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Enrichment.ApplicationLogEnricherOptions.DeploymentRing { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Enrichment.ApplicationLogEnricherOptions.EnvironmentName { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer(this Microsoft.Extensions.Logging.ILoggingBuilder builder, Microsoft.Extensions.Configuration.IConfiguration configuration);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer(this Microsoft.Extensions.Logging.ILoggingBuilder builder, System.Action<Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.GlobalBufferLoggingBuilderExtensions.AddGlobalBuffer(this Microsoft.Extensions.Logging.ILoggingBuilder builder, Microsoft.Extensions.Logging.LogLevel? logLevel = null);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions.GlobalLogBufferingOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.TimeSpan Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions.AutoFlushDuration { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "int Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions.MaxBufferSizeInBytes { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "int Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions.MaxLogRecordSizeInBytes { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule> Microsoft.Extensions.Diagnostics.Buffering.GlobalLogBufferingOptions.Rules { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.DependencyInjection.LatencyConsoleExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.LatencyConsoleExtensions.AddConsoleLatencyDataExporter(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.LatencyConsoleExtensions.AddConsoleLatencyDataExporter(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.Extensions.Diagnostics.Latency.LatencyConsoleOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.LatencyConsoleExtensions.AddConsoleLatencyDataExporter(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Diagnostics.Latency.LatencyConsoleOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Diagnostics.Latency.LatencyConsoleOptions.LatencyConsoleOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Latency.LatencyConsoleOptions.OutputCheckpoints { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Latency.LatencyConsoleOptions.OutputMeasures { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Latency.LatencyConsoleOptions.OutputTags { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.DependencyInjection.LatencyContextExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.LatencyContextExtensions.AddLatencyContext(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.LatencyContextExtensions.AddLatencyContext(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.Extensions.Diagnostics.Latency.LatencyContextOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.LatencyContextExtensions.AddLatencyContext(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Diagnostics.Latency.LatencyContextOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Diagnostics.Latency.LatencyContextOptions.LatencyContextOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Latency.LatencyContextOptions.ThrowOnUnregisteredNames { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.LogBufferingFilterRule(string? categoryName = null, Microsoft.Extensions.Logging.LogLevel? logLevel = null, int? eventId = null, string? eventName = null, System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<string, object?>>? attributes = null);",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IReadOnlyList<System.Collections.Generic.KeyValuePair<string, object?>>? Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.Attributes { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "string? Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.CategoryName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "int? Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.EventId { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "string? Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.EventName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Logging.LogLevel? Microsoft.Extensions.Diagnostics.Buffering.LogBufferingFilterRule.LogLevel { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Logging.LoggerEnrichmentOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Logging.LoggerEnrichmentOptions.LoggerEnrichmentOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Logging.LoggerEnrichmentOptions.CaptureStackTraces { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.Extensions.Logging.LoggerEnrichmentOptions.IncludeExceptionMessage { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "int Microsoft.Extensions.Logging.LoggerEnrichmentOptions.MaxStackTraceLength { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.Extensions.Logging.LoggerEnrichmentOptions.UseFileInfoForStackTraces { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Logging.LoggerRedactionOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Logging.LoggerRedactionOptions.LoggerRedactionOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Logging.LoggerRedactionOptions.ApplyDiscriminator { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Logging.LoggingEnrichmentExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.LoggingEnrichmentExtensions.EnableEnrichment(this Microsoft.Extensions.Logging.ILoggingBuilder builder);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.LoggingEnrichmentExtensions.EnableEnrichment(this Microsoft.Extensions.Logging.ILoggingBuilder builder, System.Action<Microsoft.Extensions.Logging.LoggerEnrichmentOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.LoggingEnrichmentExtensions.EnableEnrichment(this Microsoft.Extensions.Logging.ILoggingBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Logging.LoggingRedactionExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.LoggingRedactionExtensions.EnableRedaction(this Microsoft.Extensions.Logging.ILoggingBuilder builder);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.LoggingRedactionExtensions.EnableRedaction(this Microsoft.Extensions.Logging.ILoggingBuilder builder, System.Action<Microsoft.Extensions.Logging.LoggerRedactionOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.LoggingRedactionExtensions.EnableRedaction(this Microsoft.Extensions.Logging.ILoggingBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.DependencyInjection.ProcessEnricherServiceCollectionExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.ProcessEnricherServiceCollectionExtensions.AddProcessLogEnricher(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.ProcessEnricherServiceCollectionExtensions.AddProcessLogEnricher(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.Extensions.Diagnostics.Enrichment.ProcessLogEnricherOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.ProcessEnricherServiceCollectionExtensions.AddProcessLogEnricher(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Diagnostics.Enrichment.ProcessEnricherTagNames",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "const string Microsoft.Extensions.Diagnostics.Enrichment.ProcessEnricherTagNames.ProcessId",
          "Stage": "Stable",
          "Value": "process.pid"
        },
        {
          "Member": "const string Microsoft.Extensions.Diagnostics.Enrichment.ProcessEnricherTagNames.ThreadId",
          "Stage": "Stable",
          "Value": "thread.id"
        }
      ],
      "Properties": [
        {
          "Member": "static System.Collections.Generic.IReadOnlyList<string> Microsoft.Extensions.Diagnostics.Enrichment.ProcessEnricherTagNames.DimensionNames { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Diagnostics.Enrichment.ProcessLogEnricherOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Diagnostics.Enrichment.ProcessLogEnricherOptions.ProcessLogEnricherOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Enrichment.ProcessLogEnricherOptions.ProcessId { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.Extensions.Diagnostics.Enrichment.ProcessLogEnricherOptions.ThreadId { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule : Microsoft.Extensions.Diagnostics.Sampling.ILogSamplingFilterRule",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.RandomProbabilisticSamplerFilterRule(double probability, string? categoryName = null, Microsoft.Extensions.Logging.LogLevel? logLevel = null, int? eventId = null, string? eventName = null);",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "string? Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.CategoryName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "int? Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.EventId { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "string? Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.EventName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Logging.LogLevel? Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.LogLevel { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "double Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule.Probability { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerOptions.RandomProbabilisticSamplerOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerFilterRule> Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerOptions.Rules { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Logging.SamplingLoggerBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.SamplingLoggerBuilderExtensions.AddRandomProbabilisticSampler(this Microsoft.Extensions.Logging.ILoggingBuilder builder, Microsoft.Extensions.Configuration.IConfiguration configuration);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.SamplingLoggerBuilderExtensions.AddRandomProbabilisticSampler(this Microsoft.Extensions.Logging.ILoggingBuilder builder, System.Action<Microsoft.Extensions.Diagnostics.Sampling.RandomProbabilisticSamplerOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.SamplingLoggerBuilderExtensions.AddRandomProbabilisticSampler(this Microsoft.Extensions.Logging.ILoggingBuilder builder, double probability, Microsoft.Extensions.Logging.LogLevel? level = null);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.SamplingLoggerBuilderExtensions.AddSampler<T>(this Microsoft.Extensions.Logging.ILoggingBuilder builder);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.SamplingLoggerBuilderExtensions.AddSampler(this Microsoft.Extensions.Logging.ILoggingBuilder builder, Microsoft.Extensions.Logging.LoggingSampler sampler);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Logging.ILoggingBuilder Microsoft.Extensions.Logging.SamplingLoggerBuilderExtensions.AddTraceBasedSampler(this Microsoft.Extensions.Logging.ILoggingBuilder builder);",
          "Stage": "Stable"
        }
      ]
    }
  ]
}