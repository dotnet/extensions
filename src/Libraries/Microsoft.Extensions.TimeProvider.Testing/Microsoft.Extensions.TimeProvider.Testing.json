{
  "Name": "Microsoft.Extensions.TimeProvider.Testing, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "class Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider : System.TimeProvider",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.FakeTimeProvider();",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.FakeTimeProvider(System.DateTimeOffset startDateTime);",
          "Stage": "Stable"
        },
        {
          "Member": "void Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.Advance(System.TimeSpan delta);",
          "Stage": "Stable"
        },
        {
          "Member": "override System.Threading.ITimer Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.CreateTimer(System.Threading.TimerCallback callback, object? state, System.TimeSpan dueTime, System.TimeSpan period);",
          "Stage": "Stable"
        },
        {
          "Member": "override long Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.GetTimestamp();",
          "Stage": "Stable"
        },
        {
          "Member": "override System.DateTimeOffset Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.GetUtcNow();",
          "Stage": "Stable"
        },
        {
          "Member": "void Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.SetLocalTimeZone(System.TimeZoneInfo localTimeZone);",
          "Stage": "Stable"
        },
        {
          "Member": "void Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.SetUtcNow(System.DateTimeOffset value);",
          "Stage": "Stable"
        },
        {
          "Member": "override string Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.ToString();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.TimeSpan Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.AutoAdvanceAmount { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "override System.TimeZoneInfo Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.LocalTimeZone { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.DateTimeOffset Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.Start { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "override long Microsoft.Extensions.TimeProvider.Testing.FakeTimeProvider.TimestampFrequency { get; }",
          "Stage": "Stable"
        }
      ]
    }
  ]
}
