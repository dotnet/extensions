{
  "Name": "System.Cloud.Messaging.Abstractions, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "static class System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddMessageMiddleware<TMiddleware>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddMessageMiddleware<TMiddleware>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TMiddleware> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddNamedSingleton<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddNamedSingleton<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, T> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddNamedSingleton<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, string pipelineName, System.Func<System.IServiceProvider, T> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageConsumer<TConsumer>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageConsumer<TConsumer>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TConsumer> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageDestination<TDestination>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageDestination<TDestination>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TDestination> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageDestination<TDestination>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, string pipelineName, System.Func<System.IServiceProvider, TDestination> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageSource<TSource>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageSource<TSource>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TSource> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureTerminalMessageDelegate<TDelegate>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureTerminalMessageDelegate<TDelegate>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TDelegate> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.RunConsumerAsBackgroundService(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "class System.Cloud.Messaging.BaseMessageConsumer : System.Cloud.Messaging.IMessageConsumer",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Cloud.Messaging.BaseMessageConsumer.BaseMessageConsumer(System.Cloud.Messaging.IMessageSource messageSource, System.Cloud.Messaging.IMessageDelegate messageDelegate, Microsoft.Extensions.Logging.ILogger logger);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.BaseMessageConsumer.ExecuteAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.BaseMessageConsumer.FetchAndProcessMessageAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask<System.Cloud.Messaging.MessageContext> System.Cloud.Messaging.BaseMessageConsumer.FetchMessageAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.BaseMessageConsumer.OnMessageProcessingCompletionAsync(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.BaseMessageConsumer.OnMessageProcessingFailureAsync(System.Cloud.Messaging.MessageContext context, System.Exception exception);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.BaseMessageConsumer.ProcessingStepAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.BaseMessageConsumer.ProcessMessageAsync(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual void System.Cloud.Messaging.BaseMessageConsumer.ReleaseContext(System.Cloud.Messaging.MessageContext messageContext);",
          "Stage": "Experimental"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Logging.ILogger System.Cloud.Messaging.BaseMessageConsumer.Logger { get; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Cloud.Messaging.IMessageDelegate System.Cloud.Messaging.BaseMessageConsumer.MessageDelegate { get; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Cloud.Messaging.IMessageSource System.Cloud.Messaging.BaseMessageConsumer.MessageSource { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IAsyncProcessingPipelineBuilder",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "string System.Cloud.Messaging.IAsyncProcessingPipelineBuilder.PipelineName { get; }",
          "Stage": "Experimental"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection System.Cloud.Messaging.IAsyncProcessingPipelineBuilder.Services { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageCompleteActionFeature",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessageCompleteActionFeature.MarkCompleteAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageConsumer",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessageConsumer.ExecuteAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageDelegate",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessageDelegate.InvokeAsync(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageDestination",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessageDestination.WriteAsync(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageDestinationFeatures",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "Microsoft.AspNetCore.Http.Features.IFeatureCollection System.Cloud.Messaging.IMessageDestinationFeatures.Features { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageMiddleware",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessageMiddleware.InvokeAsync(System.Cloud.Messaging.MessageContext context, System.Cloud.Messaging.IMessageDelegate nextHandler);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessagePayloadFeature",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "System.ReadOnlyMemory<byte> System.Cloud.Messaging.IMessagePayloadFeature.Payload { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessagePostponeActionFeature",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessagePostponeActionFeature.PostponeAsync(System.TimeSpan delay, System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageSource",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask<System.Cloud.Messaging.MessageContext> System.Cloud.Messaging.IMessageSource.ReadAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "void System.Cloud.Messaging.IMessageSource.Release(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageSourceFeatures",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "Microsoft.AspNetCore.Http.Features.IFeatureCollection System.Cloud.Messaging.IMessageSourceFeatures.Features { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageVisibilityDelayFeature",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "System.TimeSpan System.Cloud.Messaging.IMessageVisibilityDelayFeature.VisibilityDelay { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IPipelineDelegateFactory",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Cloud.Messaging.IMessageDelegate System.Cloud.Messaging.IPipelineDelegateFactory.Create(string pipelineName);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.ISerializedMessagePayloadFeature<out T> where T : notnull",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "T System.Cloud.Messaging.ISerializedMessagePayloadFeature<T>.Payload { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions.AddLatencyContextMiddleware(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions.AddLatencyContextMiddleware<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, T> implementationFactory, System.Func<System.IServiceProvider, System.Collections.Generic.IEnumerable<Microsoft.Extensions.Telemetry.Latency.ILatencyDataExporter>> exporterFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions.AddLatencyRecorderMessageMiddleware(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, Microsoft.Extensions.Telemetry.Latency.MeasureToken successMeasureToken, Microsoft.Extensions.Telemetry.Latency.MeasureToken failureMeasureToken);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageCancelledTokenFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static void System.Cloud.Messaging.MessageCancelledTokenFeatureExtensions.SetMessageCancelledTokenSource(this System.Cloud.Messaging.MessageContext context, System.Threading.CancellationTokenSource cancellationTokenSource);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageCancelledTokenFeatureExtensions.TryGetMessageCancelledTokenSource(this System.Cloud.Messaging.MessageContext context, out System.Threading.CancellationTokenSource? cancellationTokenSource);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageCompleteActionFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageCompleteActionFeatureExtensions.MarkCompleteAsync(this System.Cloud.Messaging.MessageContext context, System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.MessageCompleteActionFeatureExtensions.SetMessageCompleteActionFeature(this System.Cloud.Messaging.MessageContext context, System.Cloud.Messaging.IMessageCompleteActionFeature messageCompleteActionFeature);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "sealed class System.Cloud.Messaging.MessageContext",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Cloud.Messaging.MessageContext.MessageContext(Microsoft.AspNetCore.Http.Features.IFeatureCollection features);",
          "Stage": "Experimental"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.AspNetCore.Http.Features.IFeatureCollection System.Cloud.Messaging.MessageContext.Features { get; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Threading.CancellationToken System.Cloud.Messaging.MessageContext.MessageCancelledToken { get; set; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageDestinationFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static void System.Cloud.Messaging.MessageDestinationFeatureExtensions.SetMessageDestinationFeatures(this System.Cloud.Messaging.MessageContext context, Microsoft.AspNetCore.Http.Features.IFeatureCollection destinationFeatures);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageDestinationFeatureExtensions.TryGetMessageDestinationFeatures(this System.Cloud.Messaging.MessageContext context, out Microsoft.AspNetCore.Http.Features.IFeatureCollection? destinationFeatures);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageDestinationPayloadFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.ReadOnlyMemory<byte> System.Cloud.Messaging.MessageDestinationPayloadFeatureExtensions.GetDestinationPayload(this System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.MessageDestinationPayloadFeatureExtensions.SetDestinationPayload(this System.Cloud.Messaging.MessageContext context, System.ReadOnlyMemory<byte> payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.MessageDestinationPayloadFeatureExtensions.SetDestinationPayload(this System.Cloud.Messaging.MessageContext context, byte[] payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageDestinationPayloadFeatureExtensions.TryGetDestinationPayload(this System.Cloud.Messaging.MessageContext context, out System.ReadOnlyMemory<byte>? payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageDestinationPayloadFeatureExtensions.TryGetDestinationPayloadAsUTF8String(this System.Cloud.Messaging.MessageContext context, out string utf8StringPayload);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageLatencyContextFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static void System.Cloud.Messaging.MessageLatencyContextFeatureExtensions.SetLatencyContext(this System.Cloud.Messaging.MessageContext context, Microsoft.Extensions.Telemetry.Latency.ILatencyContext latencyContext);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageLatencyContextFeatureExtensions.TryGetLatencyContext(this System.Cloud.Messaging.MessageContext context, out Microsoft.Extensions.Telemetry.Latency.ILatencyContext? latencyContext);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessagePostponeActionFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessagePostponeActionFeatureExtensions.PostponeAsync(this System.Cloud.Messaging.MessageContext context, System.TimeSpan delay, System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.MessagePostponeActionFeatureExtensions.SetMessagePostponeActionFeature(this System.Cloud.Messaging.MessageContext context, System.Cloud.Messaging.IMessagePostponeActionFeature messagePostponeActionFeature);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageSourceFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static void System.Cloud.Messaging.MessageSourceFeatureExtensions.SetMessageSourceFeatures(this System.Cloud.Messaging.MessageContext context, Microsoft.AspNetCore.Http.Features.IFeatureCollection sourceFeatures);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageSourceFeatureExtensions.TryGetMessageSourceFeatures(this System.Cloud.Messaging.MessageContext context, out Microsoft.AspNetCore.Http.Features.IFeatureCollection? sourceFeatures);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageSourcePayloadFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.ReadOnlyMemory<byte> System.Cloud.Messaging.MessageSourcePayloadFeatureExtensions.GetSourcePayload(this System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.MessageSourcePayloadFeatureExtensions.SetSourcePayload(this System.Cloud.Messaging.MessageContext context, System.ReadOnlyMemory<byte> payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.MessageSourcePayloadFeatureExtensions.SetSourcePayload(this System.Cloud.Messaging.MessageContext context, byte[] payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageSourcePayloadFeatureExtensions.TryGetSourcePayload(this System.Cloud.Messaging.MessageContext context, out System.ReadOnlyMemory<byte>? payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageSourcePayloadFeatureExtensions.TryGetSourcePayloadAsUTF8String(this System.Cloud.Messaging.MessageContext context, out string utf8StringPayload);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageVisibilityDelayFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static void System.Cloud.Messaging.MessageVisibilityDelayFeatureExtensions.SetVisibilityDelay(this System.Cloud.Messaging.MessageContext context, System.TimeSpan visibilityDelay);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageVisibilityDelayFeatureExtensions.TryGetVisibilityDelay(this System.Cloud.Messaging.MessageContext context, out System.Cloud.Messaging.IMessageVisibilityDelayFeature? visibilityDelay);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.SerializedMessagePayloadFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static T System.Cloud.Messaging.SerializedMessagePayloadFeatureExtensions.GetSerializedPayload<T>(this System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.SerializedMessagePayloadFeatureExtensions.SetSerializedPayload<T>(this System.Cloud.Messaging.MessageContext context, T payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.SerializedMessagePayloadFeatureExtensions.TryGetSerializedPayload<T>(this System.Cloud.Messaging.MessageContext context, out T? payload);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.ServiceCollectionExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.ServiceCollectionExtensions.AddAsyncPipeline(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string pipelineName);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection System.Cloud.Messaging.ServiceCollectionExtensions.WithPipelineDelegateFactory(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Func<System.IServiceProvider, System.Cloud.Messaging.IPipelineDelegateFactory> factory);",
          "Stage": "Experimental"
        }
      ]
    }
  ]
}