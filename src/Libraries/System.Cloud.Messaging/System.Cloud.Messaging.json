{
  "Name": "System.Cloud.Messaging, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "static class System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddMessageMiddleware<TMiddleware>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddMessageMiddleware<TMiddleware>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TMiddleware> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddNamedSingleton<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddNamedSingleton<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, T> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.AddNamedSingleton<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, string name, System.Func<System.IServiceProvider, T> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageConsumer<TConsumer>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageConsumer<TConsumer>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TConsumer> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageDestination<TDestination>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageDestination<TDestination>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TDestination> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageDestination<TDestination>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, string name, System.Func<System.IServiceProvider, TDestination> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageSource<TSource>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureMessageSource<TSource>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, TSource> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureTerminalMessageDelegate(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.ConfigureTerminalMessageDelegate(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, System.Cloud.Messaging.MessageDelegate> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.AsyncProcessingPipelineBuilderExtensions.RunConsumerAsBackgroundService(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "sealed class System.Cloud.Messaging.DefaultMessageConsumer : System.Cloud.Messaging.MessageConsumer",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Cloud.Messaging.DefaultMessageConsumer.DefaultMessageConsumer(System.Cloud.Messaging.IMessageSource messageSource, System.Collections.Generic.IReadOnlyList<System.Cloud.Messaging.IMessageMiddleware> middlewares, System.Cloud.Messaging.MessageDelegate messageDelegate, Microsoft.Extensions.Logging.ILogger logger);",
          "Stage": "Experimental"
        },
        {
          "Member": "override System.Threading.Tasks.ValueTask System.Cloud.Messaging.DefaultMessageConsumer.HandleMessageProcessingFailureAsync(System.Cloud.Messaging.MessageContext context, System.Exception exception);",
          "Stage": "Experimental"
        },
        {
          "Member": "override System.Threading.Tasks.ValueTask System.Cloud.Messaging.DefaultMessageConsumer.ProcessingStepAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IAsyncProcessingPipelineBuilder",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "string System.Cloud.Messaging.IAsyncProcessingPipelineBuilder.PipelineName { get; }",
          "Stage": "Experimental"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection System.Cloud.Messaging.IAsyncProcessingPipelineBuilder.Services { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageDestination",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessageDestination.WriteAsync(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageMiddleware",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessageMiddleware.InvokeAsync(System.Cloud.Messaging.MessageContext context, System.Cloud.Messaging.MessageDelegate nextHandler);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessagePostponeFeature",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask System.Cloud.Messaging.IMessagePostponeFeature.PostponeAsync(System.TimeSpan delay, System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageSource",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Threading.Tasks.ValueTask<System.Cloud.Messaging.MessageContext> System.Cloud.Messaging.IMessageSource.ReadAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "void System.Cloud.Messaging.IMessageSource.Release(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.IMessageVisibilityDelayFeature",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "System.TimeSpan System.Cloud.Messaging.IMessageVisibilityDelayFeature.VisibilityDelay { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "interface System.Cloud.Messaging.ISerializedMessagePayloadFeature<out T> where T : notnull",
      "Stage": "Experimental",
      "Properties": [
        {
          "Member": "T System.Cloud.Messaging.ISerializedMessagePayloadFeature<T>.Payload { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions.AddLatencyContextMiddleware(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions.AddLatencyContextMiddleware<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, T> implementationFactory, System.Func<System.IServiceProvider, System.Collections.Generic.IEnumerable<Microsoft.Extensions.Telemetry.Latency.ILatencyDataExporter>> exporterFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions.AddLatencyContextMiddleware<T>(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, System.Func<System.IServiceProvider, T> implementationFactory);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.LatencyRecorderMiddlewareExtensions.AddLatencyRecorderMessageMiddleware(this System.Cloud.Messaging.IAsyncProcessingPipelineBuilder pipelineBuilder, Microsoft.Extensions.Telemetry.Latency.MeasureToken successMeasureToken, Microsoft.Extensions.Telemetry.Latency.MeasureToken failureMeasureToken);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "abstract class System.Cloud.Messaging.MessageConsumer",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Cloud.Messaging.MessageConsumer.MessageConsumer(System.Cloud.Messaging.IMessageSource messageSource, System.Collections.Generic.IReadOnlyList<System.Cloud.Messaging.IMessageMiddleware> messageMiddlewares, System.Cloud.Messaging.MessageDelegate terminalDelegate, Microsoft.Extensions.Logging.ILogger logger);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageConsumer.ExecuteAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageConsumer.FetchAndProcessMessageAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask<System.Cloud.Messaging.MessageContext> System.Cloud.Messaging.MessageConsumer.FetchMessageAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageConsumer.HandleMessageProcessingCompletionAsync(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        },
        {
          "Member": "abstract System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageConsumer.HandleMessageProcessingFailureAsync(System.Cloud.Messaging.MessageContext context, System.Exception exception);",
          "Stage": "Experimental"
        },
        {
          "Member": "abstract System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageConsumer.ProcessingStepAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageConsumer.ProcessMessageAsync(System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual void System.Cloud.Messaging.MessageConsumer.ReleaseContext(System.Cloud.Messaging.MessageContext messageContext);",
          "Stage": "Experimental"
        },
        {
          "Member": "virtual bool System.Cloud.Messaging.MessageConsumer.ShouldStopConsumer(System.Cloud.Messaging.MessageContext messageContext);",
          "Stage": "Experimental"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Logging.ILogger System.Cloud.Messaging.MessageConsumer.Logger { get; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Cloud.Messaging.IMessageSource System.Cloud.Messaging.MessageConsumer.MessageSource { get; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Cloud.Messaging.MessageDelegate System.Cloud.Messaging.MessageConsumer.PipelineDelegate { get; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "abstract class System.Cloud.Messaging.MessageContext",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "System.Cloud.Messaging.MessageContext.MessageContext(Microsoft.AspNetCore.Http.Features.IFeatureCollection features, System.ReadOnlyMemory<byte> sourcePayload);",
          "Stage": "Experimental"
        },
        {
          "Member": "void System.Cloud.Messaging.MessageContext.AddDestinationFeature<T>(T feature);",
          "Stage": "Experimental"
        },
        {
          "Member": "void System.Cloud.Messaging.MessageContext.AddFeature<T>(T feature);",
          "Stage": "Experimental"
        },
        {
          "Member": "void System.Cloud.Messaging.MessageContext.AddSourceFeature<T>(T feature);",
          "Stage": "Experimental"
        },
        {
          "Member": "string System.Cloud.Messaging.MessageContext.GetUTF8SourcePayloadAsString();",
          "Stage": "Experimental"
        },
        {
          "Member": "abstract System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageContext.MarkCompleteAsync(System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "void System.Cloud.Messaging.MessageContext.SetDestinationPayload(System.ReadOnlyMemory<byte> payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "bool System.Cloud.Messaging.MessageContext.TryGetUTF8DestinationPayloadAsString(out string? payload);",
          "Stage": "Experimental"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.AspNetCore.Http.Features.IFeatureCollection? System.Cloud.Messaging.MessageContext.DestinationFeatures { get; private set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.ReadOnlyMemory<byte>? System.Cloud.Messaging.MessageContext.DestinationPayload { get; private set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "Microsoft.AspNetCore.Http.Features.IFeatureCollection System.Cloud.Messaging.MessageContext.Features { get; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Threading.CancellationToken System.Cloud.Messaging.MessageContext.MessageCancelledToken { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "Microsoft.AspNetCore.Http.Features.IFeatureCollection? System.Cloud.Messaging.MessageContext.SourceFeatures { get; private set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.ReadOnlyMemory<byte> System.Cloud.Messaging.MessageContext.SourcePayload { get; private set; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "delegate System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessageDelegate(System.Cloud.Messaging.MessageContext context)",
      "Stage": "Experimental"
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageLatencyContextFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static void System.Cloud.Messaging.MessageLatencyContextFeatureExtensions.SetLatencyContext(this System.Cloud.Messaging.MessageContext context, Microsoft.Extensions.Telemetry.Latency.ILatencyContext latencyContext);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageLatencyContextFeatureExtensions.TryGetLatencyContext(this System.Cloud.Messaging.MessageContext context, out Microsoft.Extensions.Telemetry.Latency.ILatencyContext? latencyContext);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessagePostponeFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Threading.Tasks.ValueTask System.Cloud.Messaging.MessagePostponeFeatureExtensions.PostponeAsync(this System.Cloud.Messaging.MessageContext context, System.TimeSpan delay, System.Threading.CancellationToken cancellationToken);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.MessagePostponeFeatureExtensions.SetMessagePostponeFeature(this System.Cloud.Messaging.MessageContext context, System.Cloud.Messaging.IMessagePostponeFeature messagePostponeFeature);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.MessageVisibilityDelayFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static void System.Cloud.Messaging.MessageVisibilityDelayFeatureExtensions.SetVisibilityDelay(this System.Cloud.Messaging.MessageContext context, System.TimeSpan visibilityDelay);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.MessageVisibilityDelayFeatureExtensions.TryGetVisibilityDelay(this System.Cloud.Messaging.MessageContext context, out System.Cloud.Messaging.IMessageVisibilityDelayFeature? visibilityDelay);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.SerializedMessagePayloadFeatureExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static T System.Cloud.Messaging.SerializedMessagePayloadFeatureExtensions.GetSerializedPayload<T>(this System.Cloud.Messaging.MessageContext context);",
          "Stage": "Experimental"
        },
        {
          "Member": "static void System.Cloud.Messaging.SerializedMessagePayloadFeatureExtensions.SetSerializedPayload<T>(this System.Cloud.Messaging.MessageContext context, T payload);",
          "Stage": "Experimental"
        },
        {
          "Member": "static bool System.Cloud.Messaging.SerializedMessagePayloadFeatureExtensions.TryGetSerializedPayload<T>(this System.Cloud.Messaging.MessageContext context, out T? payload);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.ServiceCollectionExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Cloud.Messaging.IAsyncProcessingPipelineBuilder System.Cloud.Messaging.ServiceCollectionExtensions.AddAsyncPipeline(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, string pipelineName);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class System.Cloud.Messaging.ServiceProviderExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static System.Cloud.Messaging.MessageDelegate System.Cloud.Messaging.ServiceProviderExtensions.GetMessageDelegate(this System.IServiceProvider serviceProvider, string pipelineName);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Collections.Generic.IReadOnlyList<System.Cloud.Messaging.IMessageMiddleware> System.Cloud.Messaging.ServiceProviderExtensions.GetMessageMiddlewares(this System.IServiceProvider serviceProvider, string pipelineName);",
          "Stage": "Experimental"
        },
        {
          "Member": "static System.Cloud.Messaging.IMessageSource System.Cloud.Messaging.ServiceProviderExtensions.GetMessageSource(this System.IServiceProvider serviceProvider, string pipelineName);",
          "Stage": "Experimental"
        }
      ]
    }
  ]
}