{
  "Name": "Microsoft.AspNetCore.Telemetry.Middleware, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "static class Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.Duration",
          "Stage": "Stable",
          "Value": "duration"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.Host",
          "Stage": "Stable",
          "Value": "httpHost"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.Method",
          "Stage": "Stable",
          "Value": "httpMethod"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.Path",
          "Stage": "Stable",
          "Value": "httpPath"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.RequestBody",
          "Stage": "Stable",
          "Value": "httpRequestBody"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.RequestHeaderPrefix",
          "Stage": "Stable",
          "Value": "httpRequestHeader_"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.ResponseBody",
          "Stage": "Stable",
          "Value": "httpResponseBody"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.ResponseHeaderPrefix",
          "Stage": "Stable",
          "Value": "httpResponseHeader_"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.StatusCode",
          "Stage": "Stable",
          "Value": "httpStatusCode"
        }
      ],
      "Properties": [
        {
          "Member": "static System.Collections.Generic.IReadOnlyList<string> Microsoft.AspNetCore.Telemetry.HttpLoggingDimensions.DimensionNames { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.AspNetCore.Telemetry.HttpLoggingServiceExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.HttpLoggingServiceExtensions.AddHttpLogEnricher<T>(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.HttpLoggingServiceExtensions.AddHttpLogging(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.HttpLoggingServiceExtensions.AddHttpLogging(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.Telemetry.LoggingOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.HttpLoggingServiceExtensions.AddHttpLogging(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.AspNetCore.Builder.IApplicationBuilder Microsoft.AspNetCore.Telemetry.HttpLoggingServiceExtensions.UseHttpLoggingMiddleware(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder.HttpMeteringBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder.Services { get; private set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddHttpMetering(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddHttpMetering(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder>? build);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddMetricEnricher<T>(this Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder builder);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.AddMetricEnricher(this Microsoft.AspNetCore.Telemetry.HttpMeteringBuilder builder, Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher enricher);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.AspNetCore.Builder.IApplicationBuilder Microsoft.AspNetCore.Telemetry.HttpMeteringExtensions.UseHttpMetering(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.AspNetCore.Telemetry.IHttpLogEnricher",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "void Microsoft.AspNetCore.Telemetry.IHttpLogEnricher.Enrich(Microsoft.Extensions.Telemetry.Enrichment.IEnrichmentPropertyBag enrichmentBag, Microsoft.AspNetCore.Http.HttpRequest request, Microsoft.AspNetCore.Http.HttpResponse response);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher : Microsoft.Extensions.Telemetry.Enrichment.IMetricEnricher",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "System.Collections.Generic.IReadOnlyList<string> Microsoft.AspNetCore.Telemetry.IIncomingRequestMetricEnricher.DimensionNames { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "enum Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode.IncomingPathLoggingMode();",
          "Stage": "Stable"
        }
      ],
      "Fields": [
        {
          "Member": "const Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode.Formatted",
          "Stage": "Stable",
          "Value": "0"
        },
        {
          "Member": "const Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode.Structured",
          "Stage": "Stable",
          "Value": "1"
        }
      ]
    },
    {
      "Type": "class Microsoft.AspNetCore.Telemetry.LoggingOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.AspNetCore.Telemetry.LoggingOptions.LoggingOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "int Microsoft.AspNetCore.Telemetry.LoggingOptions.BodySizeLimit { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.Collections.Generic.ISet<string> Microsoft.AspNetCore.Telemetry.LoggingOptions.ExcludePathStartsWith { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "bool Microsoft.AspNetCore.Telemetry.LoggingOptions.LogBody { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "bool Microsoft.AspNetCore.Telemetry.LoggingOptions.LogRequestStart { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.Collections.Generic.ISet<string> Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestBodyContentTypes { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.TimeSpan Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestBodyReadTimeout { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.Collections.Generic.IDictionary<string, Microsoft.Extensions.Compliance.Classification.DataClassification> Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestHeadersDataClasses { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.AspNetCore.Telemetry.IncomingPathLoggingMode Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestPathLoggingMode { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Telemetry.HttpRouteParameterRedactionMode Microsoft.AspNetCore.Telemetry.LoggingOptions.RequestPathParameterRedactionMode { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Collections.Generic.ISet<string> Microsoft.AspNetCore.Telemetry.LoggingOptions.ResponseBodyContentTypes { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.Collections.Generic.IDictionary<string, Microsoft.Extensions.Compliance.Classification.DataClassification> Microsoft.AspNetCore.Telemetry.LoggingOptions.ResponseHeadersDataClasses { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.Collections.Generic.IDictionary<string, Microsoft.Extensions.Compliance.Classification.DataClassification> Microsoft.AspNetCore.Telemetry.LoggingOptions.RouteParameterDataClasses { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.AspNetCore.Telemetry.RequestCheckpointConstants",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.RequestCheckpointConstants.ElapsedResponseProcessed",
          "Stage": "Stable",
          "Value": "eltrspproc"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.RequestCheckpointConstants.ElapsedTillEntryMiddleware",
          "Stage": "Stable",
          "Value": "eltenm"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.RequestCheckpointConstants.ElapsedTillFinished",
          "Stage": "Stable",
          "Value": "eltltf"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.RequestCheckpointConstants.ElapsedTillHeaders",
          "Stage": "Stable",
          "Value": "elthdr"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Telemetry.RequestCheckpointConstants.ElapsedTillPipelineExitMiddleware",
          "Stage": "Stable",
          "Value": "eltexm"
        }
      ]
    },
    {
      "Type": "static class Microsoft.AspNetCore.Telemetry.RequestCheckpointExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.RequestCheckpointExtensions.AddRequestCheckpoint(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.AspNetCore.Builder.IApplicationBuilder Microsoft.AspNetCore.Telemetry.RequestCheckpointExtensions.UseRequestCheckpoint(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryExtensions.AddRequestLatencyTelemetry(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryExtensions.AddRequestLatencyTelemetry(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryExtensions.AddRequestLatencyTelemetry(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.AspNetCore.Builder.IApplicationBuilder Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryExtensions.UseRequestLatencyTelemetry(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryOptions.RequestLatencyTelemetryOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.TimeSpan Microsoft.AspNetCore.Telemetry.RequestLatencyTelemetryOptions.LatencyDataExportTimeout { get; set; }",
          "Stage": "Stable"
        }
      ]
    }
  ]
}