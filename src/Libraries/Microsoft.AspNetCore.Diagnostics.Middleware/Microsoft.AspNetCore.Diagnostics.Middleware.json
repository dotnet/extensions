{
  "Name": "Microsoft.AspNetCore.Diagnostics.Middleware, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "static class Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLogEnricher<T>(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLoggingRedaction(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions>? configure = null);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.HttpLoggingServiceCollectionExtensions.AddHttpLoggingRedaction(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.Duration",
          "Stage": "Stable",
          "Value": "Duration"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.Host",
          "Stage": "Stable",
          "Value": "Host"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.Method",
          "Stage": "Stable",
          "Value": "Method"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.Path",
          "Stage": "Stable",
          "Value": "Path"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.RequestBody",
          "Stage": "Stable",
          "Value": "RequestBody"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.RequestHeaderPrefix",
          "Stage": "Stable",
          "Value": "RequestHeader."
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.ResponseBody",
          "Stage": "Stable",
          "Value": "ResponseBody"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.ResponseHeaderPrefix",
          "Stage": "Stable",
          "Value": "ResponseHeader."
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.StatusCode",
          "Stage": "Stable",
          "Value": "StatusCode"
        }
      ],
      "Properties": [
        {
          "Member": "static System.Collections.Generic.IReadOnlyList<string> Microsoft.AspNetCore.Diagnostics.Logging.HttpLoggingTagNames.DimensionNames { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.AspNetCore.Diagnostics.Logging.IHttpLogEnricher",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "void Microsoft.AspNetCore.Diagnostics.Logging.IHttpLogEnricher.Enrich(Microsoft.Extensions.Diagnostics.Enrichment.IEnrichmentTagCollector collector, Microsoft.AspNetCore.Http.HttpContext httpContext);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "enum Microsoft.AspNetCore.Diagnostics.Logging.IncomingPathLoggingMode",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.AspNetCore.Diagnostics.Logging.IncomingPathLoggingMode.IncomingPathLoggingMode();",
          "Stage": "Stable"
        }
      ],
      "Fields": [
        {
          "Member": "const Microsoft.AspNetCore.Diagnostics.Logging.IncomingPathLoggingMode Microsoft.AspNetCore.Diagnostics.Logging.IncomingPathLoggingMode.Formatted",
          "Stage": "Stable",
          "Value": "0"
        },
        {
          "Member": "const Microsoft.AspNetCore.Diagnostics.Logging.IncomingPathLoggingMode Microsoft.AspNetCore.Diagnostics.Logging.IncomingPathLoggingMode.Structured",
          "Stage": "Stable",
          "Value": "1"
        }
      ]
    },
    {
      "Type": "class Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions.LoggingRedactionOptions();",
          "Stage": "Experimental"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.ISet<string> Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions.ExcludePathStartsWith { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Collections.Generic.IDictionary<string, Microsoft.Extensions.Compliance.Classification.DataClassification> Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions.RequestHeadersDataClasses { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "Microsoft.AspNetCore.Diagnostics.Logging.IncomingPathLoggingMode Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions.RequestPathLoggingMode { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "Microsoft.Extensions.Http.Diagnostics.HttpRouteParameterRedactionMode Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions.RequestPathParameterRedactionMode { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Collections.Generic.IDictionary<string, Microsoft.Extensions.Compliance.Classification.DataClassification> Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions.ResponseHeadersDataClasses { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "System.Collections.Generic.IDictionary<string, Microsoft.Extensions.Compliance.Classification.DataClassification> Microsoft.AspNetCore.Diagnostics.Logging.LoggingRedactionOptions.RouteParameterDataClasses { get; set; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class Microsoft.AspNetCore.Diagnostics.Latency.RequestCheckpointConstants",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Latency.RequestCheckpointConstants.ElapsedResponseProcessed",
          "Stage": "Stable",
          "Value": "eltrspproc"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Latency.RequestCheckpointConstants.ElapsedTillEntryMiddleware",
          "Stage": "Stable",
          "Value": "eltenm"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Latency.RequestCheckpointConstants.ElapsedTillFinished",
          "Stage": "Stable",
          "Value": "eltltf"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Latency.RequestCheckpointConstants.ElapsedTillHeaders",
          "Stage": "Stable",
          "Value": "elthdr"
        },
        {
          "Member": "const string Microsoft.AspNetCore.Diagnostics.Latency.RequestCheckpointConstants.ElapsedTillPipelineExitMiddleware",
          "Stage": "Stable",
          "Value": "eltexm"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.DependencyInjection.RequestHeadersEnricherServiceCollectionExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.RequestHeadersEnricherServiceCollectionExtensions.AddRequestHeadersLogEnricher(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.RequestHeadersEnricherServiceCollectionExtensions.AddRequestHeadersLogEnricher(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.Diagnostics.Logging.RequestHeadersLogEnricherOptions> configure);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.AspNetCore.Diagnostics.Logging.RequestHeadersLogEnricherOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.AspNetCore.Diagnostics.Logging.RequestHeadersLogEnricherOptions.RequestHeadersLogEnricherOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IDictionary<string, Microsoft.Extensions.Compliance.Classification.DataClassification> Microsoft.AspNetCore.Diagnostics.Logging.RequestHeadersLogEnricherOptions.HeadersDataClasses { get; set; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class Microsoft.AspNetCore.Builder.RequestLatencyTelemetryApplicationBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.AspNetCore.Builder.IApplicationBuilder Microsoft.AspNetCore.Builder.RequestLatencyTelemetryApplicationBuilderExtensions.UseRequestCheckpoint(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.AspNetCore.Builder.IApplicationBuilder Microsoft.AspNetCore.Builder.RequestLatencyTelemetryApplicationBuilderExtensions.UseRequestLatencyTelemetry(this Microsoft.AspNetCore.Builder.IApplicationBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.AspNetCore.Diagnostics.Latency.RequestLatencyTelemetryOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.AspNetCore.Diagnostics.Latency.RequestLatencyTelemetryOptions.RequestLatencyTelemetryOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.TimeSpan Microsoft.AspNetCore.Diagnostics.Latency.RequestLatencyTelemetryOptions.LatencyDataExportTimeout { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.DependencyInjection.RequestLatencyTelemetryServiceCollectionExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.RequestLatencyTelemetryServiceCollectionExtensions.AddRequestCheckpoint(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.RequestLatencyTelemetryServiceCollectionExtensions.AddRequestLatencyTelemetry(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.RequestLatencyTelemetryServiceCollectionExtensions.AddRequestLatencyTelemetry(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.Diagnostics.Latency.RequestLatencyTelemetryOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.DependencyInjection.RequestLatencyTelemetryServiceCollectionExtensions.AddRequestLatencyTelemetry(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        }
      ]
    }
  ]
}