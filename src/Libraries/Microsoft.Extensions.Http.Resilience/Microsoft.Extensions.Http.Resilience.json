{
  "Name": "Microsoft.Extensions.Http.Resilience, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.FaultInjection.ContextExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static Polly.Context Microsoft.Extensions.Http.Resilience.FaultInjection.ContextExtensions.WithCallingRequestMessage(this Polly.Context context, System.Net.Http.HttpRequestMessage request);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.Endpoint",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.Endpoint.Endpoint();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Uri? Microsoft.Extensions.Http.Resilience.Endpoint.Uri { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.EndpointGroup",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.EndpointGroup.EndpointGroup();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.WeightedEndpoint> Microsoft.Extensions.Http.Resilience.EndpointGroup.Endpoints { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.HedgingEndpointOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.CircuitBreakerOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.RateLimiterOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.TimeoutOptions { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions : Polly.CircuitBreaker.AdvancedCircuitBreakerStrategyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions.HttpCircuitBreakerStrategyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string strategyName, System.Action<Polly.ResilienceStrategyBuilder<System.Net.Http.HttpResponseMessage>> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string strategyName, System.Action<Polly.ResilienceStrategyBuilder<System.Net.Http.HttpResponseMessage>, Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardHedgingHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardHedgingHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddFaultInjectionPolicyHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder httpClientBuilder, string chaosPolicyOptionsGroupName);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfiguration section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddWeightedFaultInjectionPolicyHandlers(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder httpClientBuilder, System.Action<Microsoft.Extensions.Resilience.FaultInjection.FaultPolicyWeightAssignmentsOptions> weightAssignmentsConfig);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddWeightedFaultInjectionPolicyHandlers(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder httpClientBuilder, Microsoft.Extensions.Configuration.IConfigurationSection weightAssignmentsConfigSection);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "static readonly System.Predicate<System.Exception> Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates.IsTransientHttpException",
          "Stage": "Stable"
        },
        {
          "Member": "static readonly System.Predicate<Polly.Outcome<System.Net.Http.HttpResponseMessage>> Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates.IsTransientHttpOutcome",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "static readonly System.Predicate<System.Exception> Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransientHttpException",
          "Stage": "Stable"
        },
        {
          "Member": "static readonly System.Predicate<System.Net.Http.HttpResponseMessage> Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransientHttpFailure",
          "Stage": "Stable"
        },
        {
          "Member": "static readonly System.Predicate<Polly.Outcome<System.Net.Http.HttpResponseMessage>> Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransientHttpOutcome",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.HttpFaultInjectionOptionsBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.AddException(string key, System.Exception exception);",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.AddHttpContent(string key, System.Net.Http.HttpContent content);",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure();",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure(Microsoft.Extensions.Configuration.IConfiguration section);",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure(System.Action<Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions> configureOptions);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions : Polly.Hedging.HedgingStrategyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions.HttpHedgingStrategyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions : Polly.RateLimiting.RateLimiterStrategyOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions.HttpRateLimiterStrategyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpRequestMessageExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Polly.ResilienceContext? Microsoft.Extensions.Http.Resilience.HttpRequestMessageExtensions.GetResilienceContext(this System.Net.Http.HttpRequestMessage requestMessage);",
          "Stage": "Stable"
        },
        {
          "Member": "static void Microsoft.Extensions.Http.Resilience.HttpRequestMessageExtensions.SetResilienceContext(this System.Net.Http.HttpRequestMessage requestMessage, Polly.ResilienceContext? resilienceContext);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpResilienceStrategyBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpResilienceStrategyBuilderExtensions.SelectStrategyBy(this Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpResilienceStrategyBuilderExtensions.SelectStrategyByAuthority(this Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder builder, Microsoft.Extensions.Compliance.Classification.DataClassification classification);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions : Polly.Retry.RetryStrategyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.HttpRetryStrategyOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.ShouldRetryAfterHeader { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.HttpStandardHedgingResilienceOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.EndpointOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.HedgingOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.TotalRequestTimeoutOptions { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions, System.IServiceProvider> configure);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.SelectStrategyBy(this Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResilienceBuilderBuilderExtensions.SelectStrategyByAuthority(this Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder builder, Microsoft.Extensions.Compliance.Classification.DataClassification classification);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.HttpStandardResilienceOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.AttemptTimeoutOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.CircuitBreakerOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.RateLimiterOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.RetryOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.TotalRequestTimeoutOptions { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions : Polly.Timeout.TimeoutStrategyOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions.HttpTimeoutStrategyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy<System.Net.Http.HttpResponseMessage> Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory.CreateHttpResponsePolicy();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder.Services { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IHttpResilienceStrategyBuilder.StrategyName { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder.Services { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IHttpStandardResilienceStrategyBuilder.StrategyName { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder.Name { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.Name { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.RoutingStrategyBuilder { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions.OrderedGroupsRoutingOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.EndpointGroup> Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions.Groups { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "sealed class Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "void Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.EnableReloads<TOptions>(string? name = null);",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.BuilderName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.IServiceProvider Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.ServiceProvider { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.StrategyKey { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions, System.IServiceProvider> configure);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions, System.IServiceProvider> configure);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions, System.IServiceProvider> configure);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.SelectStrategyBy(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.SelectStrategyByAuthority(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, Microsoft.Extensions.Compliance.Classification.DataClassification classification);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedEndpoint",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedEndpoint.WeightedEndpoint();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Uri? Microsoft.Extensions.Http.Resilience.WeightedEndpoint.Uri { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "int Microsoft.Extensions.Http.Resilience.WeightedEndpoint.Weight { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup : Microsoft.Extensions.Http.Resilience.EndpointGroup",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup.WeightedEndpointGroup();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "int Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup.Weight { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "enum Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.WeightedGroupSelectionMode();",
          "Stage": "Stable"
        }
      ],
      "Fields": [
        {
          "Member": "const Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.EveryAttempt",
          "Stage": "Stable",
          "Value": "0"
        },
        {
          "Member": "const Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.InitialAttempt",
          "Stage": "Stable",
          "Value": "1"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.WeightedGroupsRoutingOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup> Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.Groups { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.SelectionMode { get; set; }",
          "Stage": "Stable"
        }
      ]
    }
  ]
}