{
  "Name": "Microsoft.Extensions.Http.Resilience, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.HedgingEndpointOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.CircuitBreaker { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.RateLimiter { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.Timeout { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions : Polly.CircuitBreaker.CircuitBreakerStrategyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions.HttpCircuitBreakerStrategyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static bool Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates.IsTransient(Polly.Outcome<System.Net.Http.HttpResponseMessage> outcome);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static bool Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransient(Polly.Outcome<System.Net.Http.HttpResponseMessage> outcome);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions : Polly.Hedging.HedgingStrategyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions.HttpHedgingStrategyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions : Polly.RateLimiting.RateLimiterStrategyOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions.HttpRateLimiterStrategyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class System.Net.Http.HttpResilienceHttpRequestMessageExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Polly.ResilienceContext? System.Net.Http.HttpResilienceHttpRequestMessageExtensions.GetResilienceContext(this System.Net.Http.HttpRequestMessage requestMessage);",
          "Stage": "Stable"
        },
        {
          "Member": "static void System.Net.Http.HttpResilienceHttpRequestMessageExtensions.SetResilienceContext(this System.Net.Http.HttpRequestMessage requestMessage, Polly.ResilienceContext? resilienceContext);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpResiliencePipelineBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpResiliencePipelineBuilderExtensions.SelectPipelineBy(this Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpResiliencePipelineBuilderExtensions.SelectPipelineByAuthority(this Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions : Polly.Retry.RetryStrategyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.HttpRetryStrategyOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions.ShouldRetryAfterHeader { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.HttpStandardHedgingResilienceOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.Endpoint { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpHedgingStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.Hedging { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.TotalRequestTimeout { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.HttpStandardResilienceOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.AttemptTimeout { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.CircuitBreaker { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRateLimiterStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.RateLimiter { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRetryStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.Retry { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.TotalRequestTimeout { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions, System.IServiceProvider> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.SelectPipelineBy(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.SelectPipelineByAuthority(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions : Polly.Timeout.TimeoutStrategyOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutStrategyOptions.HttpTimeoutStrategyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder.PipelineName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder.PipelineName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder.Name { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.Name { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.RoutingStrategyBuilder { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions.OrderedGroupsRoutingOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.UriEndpointGroup> Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions.Groups { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "sealed class Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "void Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.EnableReloads<TOptions>(string? name = null);",
          "Stage": "Stable"
        },
        {
          "Member": "TOptions Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.GetOptions<TOptions>(string? name = null);",
          "Stage": "Stable"
        },
        {
          "Member": "void Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.OnPipelineDisposed(System.Action callback);",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.BuilderName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.InstanceName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "System.IServiceProvider Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext.ServiceProvider { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string pipelineName, System.Action<Polly.ResiliencePipelineBuilder<System.Net.Http.HttpResponseMessage>> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string pipelineName, System.Action<Polly.ResiliencePipelineBuilder<System.Net.Http.HttpResponseMessage>, Microsoft.Extensions.Http.Resilience.ResilienceHandlerContext> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddStandardHedgingHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddStandardHedgingHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.DependencyInjection.ResilienceHttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions, System.IServiceProvider> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions, System.IServiceProvider> configure);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions, System.IServiceProvider> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.SelectPipelineBy(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Func<System.IServiceProvider, System.Func<System.Net.Http.HttpRequestMessage, string>> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.SelectPipelineByAuthority(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.UriEndpoint",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.UriEndpoint.UriEndpoint();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Uri? Microsoft.Extensions.Http.Resilience.UriEndpoint.Uri { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.UriEndpointGroup",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.UriEndpointGroup.UriEndpointGroup();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.WeightedUriEndpoint> Microsoft.Extensions.Http.Resilience.UriEndpointGroup.Endpoints { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "enum Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.WeightedGroupSelectionMode();",
          "Stage": "Stable"
        }
      ],
      "Fields": [
        {
          "Member": "const Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.EveryAttempt",
          "Stage": "Stable",
          "Value": "0"
        },
        {
          "Member": "const Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.InitialAttempt",
          "Stage": "Stable",
          "Value": "1"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.WeightedGroupsRoutingOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.WeightedUriEndpointGroup> Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.Groups { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.SelectionMode { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedUriEndpoint",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedUriEndpoint.WeightedUriEndpoint();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Uri? Microsoft.Extensions.Http.Resilience.WeightedUriEndpoint.Uri { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "int Microsoft.Extensions.Http.Resilience.WeightedUriEndpoint.Weight { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedUriEndpointGroup : Microsoft.Extensions.Http.Resilience.UriEndpointGroup",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedUriEndpointGroup.WeightedUriEndpointGroup();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "int Microsoft.Extensions.Http.Resilience.WeightedUriEndpointGroup.Weight { get; set; }",
          "Stage": "Stable"
        }
      ]
    }
  ]
}
