{
  "Name": "Microsoft.Extensions.Http.Resilience, Version=8.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35",
  "Types": [
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.Endpoint",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.Endpoint.Endpoint();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Uri? Microsoft.Extensions.Http.Resilience.Endpoint.Uri { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.EndpointGroup",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.EndpointGroup.EndpointGroup();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.WeightedEndpoint> Microsoft.Extensions.Http.Resilience.EndpointGroup.Endpoints { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions.FallbackClientHandlerOptions();",
          "Stage": "Experimental"
        }
      ],
      "Properties": [
        {
          "Member": "System.Uri? Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions.BaseFallbackUri { get; set; }",
          "Stage": "Experimental"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpFallbackPolicyOptions Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions.FallbackPolicyOptions { get; set; }",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.HedgingEndpointOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpBulkheadPolicyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.BulkheadOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerPolicyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.CircuitBreakerOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutPolicyOptions Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions.TimeoutOptions { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions.AddStandardHedgingHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.HedgingHttpClientBuilderExtensions.AddStandardHedgingHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpBulkheadPolicyOptions : Microsoft.Extensions.Resilience.Options.BulkheadPolicyOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpBulkheadPolicyOptions.HttpBulkheadPolicyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerPolicyOptions : Microsoft.Extensions.Resilience.Options.CircuitBreakerPolicyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerPolicyOptions.HttpCircuitBreakerPolicyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions> configure);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddFallbackHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section, System.Action<Microsoft.Extensions.Http.Resilience.FallbackClientHandlerOptions> configure);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, string pipelineIdentifier);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpClientBuilderExtensions.AddStandardResilienceHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder builder);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddFaultInjectionPolicyHandler(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder httpClientBuilder, string chaosPolicyOptionsGroupName);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(this Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Microsoft.Extensions.Configuration.IConfiguration section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddHttpClientFaultInjection(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddWeightedFaultInjectionPolicyHandlers(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder httpClientBuilder, System.Action<Microsoft.Extensions.Resilience.FaultInjection.FaultPolicyWeightAssignmentsOptions> weightAssignmentsConfig);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.DependencyInjection.IHttpClientBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpClientFaultInjectionExtensions.AddWeightedFaultInjectionPolicyHandlers(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder httpClientBuilder, Microsoft.Extensions.Configuration.IConfigurationSection weightAssignmentsConfigSection);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "static readonly System.Predicate<System.Exception> Microsoft.Extensions.Http.Resilience.HttpClientHedgingResiliencePredicates.IsTransientHttpException",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientResilienceGenerators",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "static readonly System.Func<Microsoft.Extensions.Resilience.Options.RetryDelayArguments<System.Net.Http.HttpResponseMessage>, System.TimeSpan> Microsoft.Extensions.Http.Resilience.HttpClientResilienceGenerators.HandleRetryAfterHeader",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates",
      "Stage": "Stable",
      "Fields": [
        {
          "Member": "static readonly System.Predicate<System.Exception> Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransientHttpException",
          "Stage": "Stable"
        },
        {
          "Member": "static readonly System.Predicate<System.Net.Http.HttpResponseMessage> Microsoft.Extensions.Http.Resilience.HttpClientResiliencePredicates.IsTransientHttpFailure",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpFallbackPolicyOptions : Microsoft.Extensions.Resilience.Options.FallbackPolicyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpFallbackPolicyOptions.HttpFallbackPolicyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.HttpFaultInjectionOptionsBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection services);",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.AddException(string key, System.Exception exception);",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.AddHttpContent(string key, System.Net.Http.HttpContent content);",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure();",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure(Microsoft.Extensions.Configuration.IConfiguration section);",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder Microsoft.Extensions.Http.Resilience.FaultInjection.HttpFaultInjectionOptionsBuilder.Configure(System.Action<Microsoft.Extensions.Resilience.FaultInjection.FaultInjectionOptions> configureOptions);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpHedgingPolicyOptions : Microsoft.Extensions.Resilience.Options.HedgingPolicyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpHedgingPolicyOptions.HttpHedgingPolicyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpResiliencePipelineBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpResiliencePipelineBuilderExtensions.SelectPipelineBy(this Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder builder, System.Func<System.IServiceProvider, Microsoft.Extensions.Http.Resilience.PipelineKeySelector> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpResiliencePipelineBuilderExtensions.SelectPipelineByAuthority(this Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder builder, Microsoft.Extensions.Compliance.Classification.DataClassification classification);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpRetryPolicyOptions : Microsoft.Extensions.Resilience.Options.RetryPolicyOptions<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRetryPolicyOptions.HttpRetryPolicyOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "bool Microsoft.Extensions.Http.Resilience.HttpRetryPolicyOptions.ShouldRetryAfterHeader { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.HttpStandardHedgingResilienceOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HedgingEndpointOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.EndpointOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpHedgingPolicyOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.HedgingOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutPolicyOptions Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions.TotalRequestTimeoutOptions { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.HttpStandardResilienceOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutPolicyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.AttemptTimeoutOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpBulkheadPolicyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.BulkheadOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpCircuitBreakerPolicyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.CircuitBreakerOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpRetryPolicyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.RetryOptions { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutPolicyOptions Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions.TotalRequestTimeoutOptions { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardResilienceOptions, System.IServiceProvider> configure);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.SelectPipelineBy(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, System.Func<System.IServiceProvider, Microsoft.Extensions.Http.Resilience.PipelineKeySelector> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.HttpStandardResiliencePipelineBuilderExtensions.SelectPipelineByAuthority(this Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder builder, Microsoft.Extensions.Compliance.Classification.DataClassification classification);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.HttpTimeoutPolicyOptions : Microsoft.Extensions.Resilience.Options.TimeoutPolicyOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.HttpTimeoutPolicyOptions.HttpTimeoutPolicyOptions();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Polly.Contrib.Simmy.Outcomes.AsyncInjectOutcomePolicy<System.Net.Http.HttpResponseMessage> Microsoft.Extensions.Http.Resilience.FaultInjection.IHttpClientChaosPolicyFactory.CreateHttpResponsePolicy();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder : Microsoft.Extensions.Resilience.IResiliencePipelineBuilder<System.Net.Http.HttpResponseMessage>",
      "Stage": "Stable"
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder.PipelineName { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IHttpStandardResiliencePipelineBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IRequestRoutingStrategy",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "bool Microsoft.Extensions.Http.Resilience.IRequestRoutingStrategy.TryGetNextRoute(out System.Uri? nextRoute);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IRequestRoutingStrategyFactory",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.IRequestRoutingStrategy Microsoft.Extensions.Http.Resilience.IRequestRoutingStrategyFactory.CreateRoutingStrategy();",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder.Name { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "interface Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder",
      "Stage": "Stable",
      "Properties": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.IHttpResiliencePipelineBuilder Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.EndpointResiliencePipelineBuilder { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "string Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.Name { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.RoutingStrategyBuilder { get; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.DependencyInjection.IServiceCollection Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder.Services { get; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions.OrderedGroupsRoutingOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.EndpointGroup> Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions.Groups { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "delegate string Microsoft.Extensions.Http.Resilience.PipelineKeySelector(System.Net.Http.HttpRequestMessage requestMessage)",
      "Stage": "Stable"
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.FaultInjection.PolicyContextExtensions",
      "Stage": "Experimental",
      "Methods": [
        {
          "Member": "static Polly.Context Microsoft.Extensions.Http.Resilience.FaultInjection.PolicyContextExtensions.WithCallingRequestMessage(this Polly.Context context, System.Net.Http.HttpRequestMessage request);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureOrderedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.OrderedGroupsRoutingOptions, System.IServiceProvider> configure);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder Microsoft.Extensions.Http.Resilience.RoutingStrategyBuilderExtensions.ConfigureWeightedGroups(this Microsoft.Extensions.Http.Resilience.IRoutingStrategyBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions, System.IServiceProvider> configure);",
          "Stage": "Experimental"
        }
      ]
    },
    {
      "Type": "static class Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, Microsoft.Extensions.Configuration.IConfigurationSection section);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions> configure);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.Configure(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Action<Microsoft.Extensions.Http.Resilience.HttpStandardHedgingResilienceOptions, System.IServiceProvider> configure);",
          "Stage": "Experimental"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.SelectPipelineBy(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, System.Func<System.IServiceProvider, Microsoft.Extensions.Http.Resilience.PipelineKeySelector> selectorFactory);",
          "Stage": "Stable"
        },
        {
          "Member": "static Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder Microsoft.Extensions.Http.Resilience.StandardHedgingHandlerBuilderExtensions.SelectPipelineByAuthority(this Microsoft.Extensions.Http.Resilience.IStandardHedgingHandlerBuilder builder, Microsoft.Extensions.Compliance.Classification.DataClassification classification);",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedEndpoint",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedEndpoint.WeightedEndpoint();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Uri? Microsoft.Extensions.Http.Resilience.WeightedEndpoint.Uri { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "int Microsoft.Extensions.Http.Resilience.WeightedEndpoint.Weight { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup : Microsoft.Extensions.Http.Resilience.EndpointGroup",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup.WeightedEndpointGroup();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "int Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup.Weight { get; set; }",
          "Stage": "Stable"
        }
      ]
    },
    {
      "Type": "enum Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.WeightedGroupSelectionMode();",
          "Stage": "Stable"
        }
      ],
      "Fields": [
        {
          "Member": "const Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.EveryAttempt",
          "Stage": "Stable",
          "Value": "0"
        },
        {
          "Member": "const Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode.InitialAttempt",
          "Stage": "Stable",
          "Value": "1"
        }
      ]
    },
    {
      "Type": "class Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions",
      "Stage": "Stable",
      "Methods": [
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.WeightedGroupsRoutingOptions();",
          "Stage": "Stable"
        }
      ],
      "Properties": [
        {
          "Member": "System.Collections.Generic.IList<Microsoft.Extensions.Http.Resilience.WeightedEndpointGroup> Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.Groups { get; set; }",
          "Stage": "Stable"
        },
        {
          "Member": "Microsoft.Extensions.Http.Resilience.WeightedGroupSelectionMode Microsoft.Extensions.Http.Resilience.WeightedGroupsRoutingOptions.SelectionMode { get; set; }",
          "Stage": "Stable"
        }
      ]
    }
  ]
}